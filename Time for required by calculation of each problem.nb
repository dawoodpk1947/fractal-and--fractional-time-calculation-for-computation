(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1662488,      30551]
NotebookOptionsPosition[   1658151,      30470]
NotebookOutlinePosition[   1658492,      30485]
CellTagsIndexPosition[   1658449,      30482]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "7.4358`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "6.2208000000000006`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "5.203799999999999`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "4.2768`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "3.375`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.4767999999999994`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.6037999999999994`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8207999999999995`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.23579999999999987`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "6.561000000000001`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "4.608000000000001`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.087"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.944`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.5759999999999996`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.2429999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.07199999999999995`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.008999999999999994`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(r\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(L\), \(r\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Variable \[GothicCapitalB]\>\"", ",", "\"\<Function value\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Right Term Value of Definition 3.2 via \!\(\*SubscriptBox[\
\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Blue"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Left Term Value of Definition 3.2 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Magenta"}], 
              "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.67", ",", "0.76"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.957401476582333*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"2e0204f1-5a24-4fcc-829d-9d2703f31c9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2310706`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 7.4358}, {0.2, 6.2208000000000006`}, {0.3, 
           5.203799999999999}, {0.4, 4.2768}, {0.5, 3.375}, {0.6, 
           2.4767999999999994`}, {0.7, 1.6037999999999994`}, {0.8, 
           0.8207999999999995}, {0.9, 0.23579999999999987`}, {1., 0.}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{0, Small}], 
          LineBox[{{0.1, 6.561000000000001}, {0.2, 4.608000000000001}, {0.3, 
           3.087}, {0.4, 1.944}, {0.5, 1.125}, {0.6, 0.5759999999999996}, {
           0.7, 0.2429999999999998}, {0.8, 0.07199999999999995}, {0.9, 
           0.008999999999999994}, {1., 0.}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 7.4358}}, {{0.2, 
           6.2208000000000006`}}, {{0.3, 5.203799999999999}}, {{0.4, 
           4.2768}}, {{0.5, 3.375}}, {{0.6, 2.4767999999999994`}}, {{0.7, 
           1.6037999999999994`}}, {{0.8, 0.8207999999999995}}, {{0.9, 
           0.23579999999999987`}}, {{1., 0.}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{0, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 6.561000000000001}}, {{0.2, 
           4.608000000000001}}, {{0.3, 3.087}}, {{0.4, 1.944}}, {{0.5, 
           1.125}}, {{0.6, 0.5759999999999996}}, {{0.7, 
           0.2429999999999998}}, {{0.8, 0.07199999999999995}}, {{0.9, 
           0.008999999999999994}}, {{1., 0.}}}]}, {}}}, {}, {}, {}, {}}, 
      InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(r\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(r\\)]\\)\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"Variable \[GothicCapitalB]\"", TraditionalForm], 
       FormBox["\"Function value\"", TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Right Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], StripOnInput -> False]}, {
              StyleBox[
              "\"Left Term Value of Definition 3.2 via \\!\\(\\*SubscriptBox[\
\\(\[Chi]\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 \
and \\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.67, 0.76}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 7.4358}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 7.4358}, {0.2, 6.2208000000000006`}, {0.3, 
            5.203799999999999}, {0.4, 4.2768}, {0.5, 3.375}, {0.6, 
            2.4767999999999994`}, {0.7, 1.6037999999999994`}, {0.8, 
            0.8207999999999995}, {0.9, 0.23579999999999987`}, {1., 0.}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 6.561000000000001}, {0.2, 4.608000000000001}, {0.3, 
            3.087}, {0.4, 1.944}, {0.5, 1.125}, {0.6, 0.5759999999999996}, {
            0.7, 0.2429999999999998}, {0.8, 0.07199999999999995}, {0.9, 
            0.008999999999999994}, {1., 0.}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            7.4358}}, {{0.2, 6.2208000000000006`}}, {{0.3, 
            5.203799999999999}}, {{0.4, 4.2768}}, {{0.5, 3.375}}, {{0.6, 
            2.4767999999999994`}}, {{0.7, 1.6037999999999994`}}, {{0.8, 
            0.8207999999999995}}, {{0.9, 0.23579999999999987`}}, {{1., 
            0.}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            6.561000000000001}}, {{0.2, 4.608000000000001}}, {{0.3, 
            3.087}}, {{0.4, 1.944}}, {{0.5, 1.125}}, {{0.6, 
            0.5759999999999996}}, {{0.7, 0.2429999999999998}}, {{0.8, 
            0.07199999999999995}}, {{0.9, 0.008999999999999994}}, {{1., 
            0.}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 7.4358}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, 
        AxesLabel -> {"Variable \[GothicCapitalB]", "Function value"}, 
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "Right Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[0, 0, 1]], 
             Style[
             "Left Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[1, 0, 1]]}], RoundingRadius -> 5], 
          Scaled[{0.67, 0.76}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 7.4358}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(r\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(r\)]\)"}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}}, Joined -> {True, True}, 
         LabelStyle -> {}, LegendLayout -> "Column"]], {0.9, 0.9}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9574012931636744`*^9, 3.9574014815078864`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"1ce67d89-72b8-4c14-be8d-4332c8a8f115"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "4.131`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "3.456`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "2.891`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.376`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.875`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.3759999999999994`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.8909999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.4559999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.13099999999999992`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "3.6450000000000005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "2.5600000000000005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7149999999999996`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.08`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.625`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.3199999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.1349999999999999`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.03999999999999997`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.004999999999999997`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(c\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(L\), \(c\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Variable \[GothicCapitalB]\>\"", ",", "\"\<Function value\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Right Term Value of Definition 3.2 via \!\(\*SubscriptBox[\
\(\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Blue"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Left Term Value of Definition 3.2 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Magenta"}], 
              "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.67", ",", "0.76"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9574015304192286`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"13fb822a-855f-4680-a9b3-ed77f0ac2f66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1086322`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.131}, {0.2, 3.456}, {0.3, 2.891}, {0.4, 2.376}, {
           0.5, 1.875}, {0.6, 1.3759999999999994`}, {0.7, 
           0.8909999999999998}, {0.8, 0.4559999999999998}, {0.9, 
           0.13099999999999992`}, {1., 0.}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{0, Small}], 
          LineBox[{{0.1, 3.6450000000000005`}, {0.2, 2.5600000000000005`}, {
           0.3, 1.7149999999999996`}, {0.4, 1.08}, {0.5, 0.625}, {0.6, 
           0.3199999999999998}, {0.7, 0.1349999999999999}, {0.8, 
           0.03999999999999997}, {0.9, 0.004999999999999997}, {1., 0.}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 4.131}}, {{0.2, 3.456}}, {{
           0.3, 2.891}}, {{0.4, 2.376}}, {{0.5, 1.875}}, {{0.6, 
           1.3759999999999994`}}, {{0.7, 0.8909999999999998}}, {{0.8, 
           0.4559999999999998}}, {{0.9, 0.13099999999999992`}}, {{1., 0.}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{0, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 3.6450000000000005`}}, {{0.2,
            2.5600000000000005`}}, {{0.3, 1.7149999999999996`}}, {{0.4, 
           1.08}}, {{0.5, 0.625}}, {{0.6, 0.3199999999999998}}, {{0.7, 
           0.1349999999999999}}, {{0.8, 0.03999999999999997}}, {{0.9, 
           0.004999999999999997}}, {{1., 0.}}}]}, {}}}, {}, {}, {}, {}}, 
      InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(c\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(c\\)]\\)\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"Variable \[GothicCapitalB]\"", TraditionalForm], 
       FormBox["\"Function value\"", TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Right Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(c\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], StripOnInput -> False]}, {
              StyleBox[
              "\"Left Term Value of Definition 3.2 via \\!\\(\\*SubscriptBox[\
\\(\[Chi]\\), \\(c\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 \
and \\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.67, 0.76}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 4.131}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.131}, {0.2, 3.456}, {0.3, 2.891}, {0.4, 2.376}, {0.5,
             1.875}, {0.6, 1.3759999999999994`}, {0.7, 0.8909999999999998}, {
            0.8, 0.4559999999999998}, {0.9, 0.13099999999999992`}, {1., 
            0.}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           Line[{{0.1, 3.6450000000000005`}, {0.2, 2.5600000000000005`}, {0.3,
             1.7149999999999996`}, {0.4, 1.08}, {0.5, 0.625}, {0.6, 
            0.3199999999999998}, {0.7, 0.1349999999999999}, {0.8, 
            0.03999999999999997}, {0.9, 0.004999999999999997}, {1., 0.}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            4.131}}, {{0.2, 3.456}}, {{0.3, 2.891}}, {{0.4, 2.376}}, {{0.5, 
            1.875}}, {{0.6, 1.3759999999999994`}}, {{0.7, 
            0.8909999999999998}}, {{0.8, 0.4559999999999998}}, {{0.9, 
            0.13099999999999992`}}, {{1., 0.}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            3.6450000000000005`}}, {{0.2, 2.5600000000000005`}}, {{0.3, 
            1.7149999999999996`}}, {{0.4, 1.08}}, {{0.5, 0.625}}, {{0.6, 
            0.3199999999999998}}, {{0.7, 0.1349999999999999}}, {{0.8, 
            0.03999999999999997}}, {{0.9, 0.004999999999999997}}, {{1., 
            0.}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 4.131}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, 
        AxesLabel -> {"Variable \[GothicCapitalB]", "Function value"}, 
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "Right Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[0, 0, 1]], 
             Style[
             "Left Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[1, 0, 1]]}], RoundingRadius -> 5], 
          Scaled[{0.67, 0.76}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 4.131}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(c\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(c\)]\)"}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}}, Joined -> {True, True}, 
         LabelStyle -> {}, LegendLayout -> "Column"]], {0.9, 0.9}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.95740153375587*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"30ba44d9-a4b8-41d9-b88b-bbe3b901646e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"9", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "^", "3"}], "+", 
           RowBox[{"b", "^", "3"}]}], ")"}], "/", "2"}]}], "-", 
       RowBox[{
        FractionBox["9", "10"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "3"]}]}], ",", 
      FractionBox[
       RowBox[{"9", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["a", "4"], "4"]}], "+", 
          FractionBox[
           SuperscriptBox["b", "4"], "4"]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "a"}], "+", "b"}]], ",", 
      RowBox[{
       RowBox[{"9", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "b"}], ")"}], "/", "2"}], ")"}], "^", "3"}]}], 
       "+", 
       RowBox[{"9", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "a"}], ")"}], "^", "3"}], "/", "32"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "0.5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0.6", ",", "1"}], "}"}], ",", 
    RowBox[{"ImageSize", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"473.", ",", " ", "Automatic"}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRange", " ", "->", "Automatic"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "13.5`"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"FaceGrids", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.963961`"}], ",", 
       RowBox[{"-", "1.03555567`"}], ",", "0.70428`"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", "5", "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "15", ",", "Bold", ",", "Red"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "15", ",", "Bold", ",", "Red"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "15", ",", "Bold", ",", "Red"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(R\), \(r\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(M\), \(r\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(L\), \(r\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9574015868974075`*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"92cdc287-58f1-4795-a7df-e41d9d5df5dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.2824309`", ",", 
   TagBox[
    GraphicsBox[{InsetBox[
       Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
93Larw78E3MfmybwSZ/fV5S7PNNOgvZRAx961a2TtGgfNXCpz0MmLtB1BODW
OkMTedZIn+UkeVP9FxlXmnPOiGO+0cvIxmePV3Pr0jxz+L6mjDyRcDXfKVuO
12F4rl9prdBP7kGaQ75hPUdfRn68W+R7h5/mjXns598vvJIv/6xWhfOdICtw
KSP6Hu9/KB6DXIXmikIjckWof7G6xJfp4TQPhPor684vF1tPcz+ov2ZOxOfS
7TTfg/oDR01tPXwB7rNy2fsADL1udI5F52e4j8jHfQDkNv19kCsPn3sLiRC7
/u9yCjMP4nPQASRQojaA2U+o1asf1qlEc7lUdj9kYKSmqHRDBXoevq8pJ04f
/iZ4pVWi56msbQvKyXfmPlHJVeiZFVPZlRPbKTKRumXV6Jl1ulvKidXipHHf
5WvRM+tj5tJy8kpMR4uc5Mxjp4/IY6F+3W3mTSqjaC4H9VtqL7XuGEVzOaj/
wKBxoIsqzeWg/gUJoeMnbad9p8bs+tM/rj84MYj2nTqx69eQ05T8I06fEw9m
17+R+8zj6z40/9Rhlp9ZQX4qisfc7q1Cz0dYb7gKkvIs+fPbv9Xo2Z/dD3lx
3dDM/6MGPX9nvqxjBSljfjFbZi16Zl2WzCpIycm5ZjsGGeiZ9bIrKsjh17+l
/hrUo2fW6SpXkNNnV7zkif7/559Q//Tbrjn2VbS/F+o39lzjxWil/b1Qv22S
6Q3HsTSXg/qdTj61ctxM+05b2PXbf9YOXf6G9p1OZNdv8m9GobRyN3pew65f
vNbac/07mn+WMafBuEpipno7470UzeVGMd8mAZXE6NTC2FN9dP+H4fuaSjIv
/pqxNBftoz7I7ofs2B3wZtYk2kc9vL9FJbn55kzdsZ2N6Jn1Z61eSQbdJG9o
76L7MLBeVqKSSFttCOeaSPt7/1/5J9R/dXV5YnIp7e+F+vNNnqYu6KX9vVC/
jmjoO/kZNJeD+t89GhRLxfuvXHKTXf98rSc7H+XT5+4/s+sPl703t3w37Ttl
sOtXN2bINQzQ/HP4ulRFXES+G3VZ0lxu+LpURV6p7Fvfvq8RPQ9fl6rIRZE9
UvrLaS43fF2qIkSuuWVOFt1PYz67H5Lfsuaf5znaR83SNrqK/FIzXPdmUQt6
9mBd0CvJHc/J+VU8dH8D/L6tEfkn1P+i5UTRUR6ay0H9ayWXbZykQnM5qH/y
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
8LuTln+RMLJvY/jdtr0VbzOcOxh+94fPvXY1r7sYfrfFsfdC50f1MvzucVWF
htf9+xl+d8qpm5d5NKHOSfxu9vyJcvvu8zL87pdfnaKVflegzsBTjdMUU9rK
UGfgUe7KV153VzH87iWrdBfu3l+LOgN/Fzn1sNjEBobfHRvzsnT1zSaG3903
ZXZb27wWht/9pTLj3RHRNobfnVJoIPKGr4Phd38uNYp4pdzF8LvNUvwubD3W
w/C719o0brhX38fwu1c/Gmw95En6CvC974Av8rt0SF8BcClZ/xYqksXwu81H
ikxPEqrG/QSeN011/33z5rWoP1w/YmhfFSV9YnD9tBPzBKatqMbvBa5P15Oz
ijMi/TZwvbub71zLlHqG3/1GgPooWFDP8LtvuU8WeEaRPhz036/2/ns4Jhyu
37Ty9qGsuGaG3/111Jbgiy3NTL/b1FJF1bqV4XdPbLOzSg1rZfjdOVcM+W8s
bGf43TC/kdvv5vs4kMkzr5Phd4+T/qAnG9TJ8Lv3Js61OWjWzfC7lQf3tPUU
dTP87qdOkffjX5E+CvSvH4a2P17Rx/C73WM05vXqDFDcfvenoXwgj3DsH9B4
JsRrx8Pwu/NmuI0Q/sHD8LsbZU6d3FfIy/C7Z8ob2ucsYzH87hzn/NzAfXx4
38L1lOi/Gy6TcLi+xyxcdja/AMPvnvfIMU25rB7vT+BfNbc1TH9C7kPgf4J+
m3TNaWL43UsPqkvMCyT9SMDl/i3rm24rw+/mCT6t7d3exvC7I7/XzPP628Hw
uys/O2+Jaupi+N3Ld3XurJ/WS3H73ZdPCY/T8OunuP3uaR1zIqYr8DD87qG5
l5+ceBl+9/I7klZUH4vhd6tsO5SmdJP0FQCP6qweX7NIkOF3v012mxKk34Q6
A9ebnjZumQbp+wK+Zv+FDK27zQy/23PZWFuNsaQfCfhcPVbKjc9tDL+7fmrH
6zXeHQy/2zorjLXVs4vhd29Xq3Z5+KGH4va7T7VuEx4zqp/i9ruPSnzeG+ZL
+kOAn3lSE/lMhZfhdxd/e9LG58ti+N0fTey3/lHiZ/jdTXOmp/klwpw04ncb
7Xi9IN1ViOF3z5miIKEbQvq+gA8WPI+bY036voDvC/jomSnTyvC7F8zaqMz/
uA11Bn4o3NsncncHw+9+1jA/KntlF8Xtd4d+Hdi0Zyfp50F/fOhcMH/St4Pv
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
         "], {{
           {RGBColor[0, 0, 1], Thickness[Large], EdgeForm[None], 
            StyleBox[GraphicsGroup3DBox[
              TagBox[{Polygon3DBox[CompressedData["
1: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
                 "]], Polygon3DBox[CompressedData["
1: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
HoOb4L9bRM73KNwKbllGnrUNvLZrA96tFnpV/WqP0WvpAe099hi9oB7J3vNW
q38+ovYlD+EA528Z/mKM39n5WkavtGcObcSc/a4eHvafuZwjD3mJ8SVc+xy/
dy38k/rbzMe15JoyC/IYe5c9zHP/avFP66w9wj8tGdspx/UvxZcc0og19EM9
NLdryzX3Yz08mGux5Kc1r1/g/A6N8HR6O+egWdY/a6gIz+ja8pif6qG5Pbde
hl8wf9FvqgH1evZMtWHB+A68HsDvVnP9l+HPtnIONGIN2Hvtwa4NM6Jv6+Hp
zY5G57j3RYrz21oD4dc5p3MjMkOzQzPbsYwNyZEv/K8I/2+Ga5Zrprc9YwP5
WZ/X3xXhH4Y3hdZWg6vFB+Tw2/8pIs+Z4TVW338kY6vm8NP/5nfHVfXGse+L
yIPMZM1mzaS2ypEhmiWaoe5Q6QXX0qeVvjFzMnsyA93W9ZnD38yr9NCyOfKl
T4rQS65h1/IXlV7pkSMvm2sPhfvnyHO+LSI/M9Mx2/E7DVcrlaGNZlZ537Sq
Pgyv6pUermNVL9aE/wVvWIQnPiiHJ9Wb6vnWyHGPzVr0rN77c51DRWTAm+W4
x22q+uG9N4Mwi/Aah+W4Z22reuG99J6bpXkPfBa38vrLWngWfc5VjK9RhEfc
OYema1HNn5VyaDa1m5qvT4573Kzq5957j/HaFxVxrpmK2YpzYkSOe2b26D33
XvodzXt+KuK7+55+14VFfJaZuNn4OGtUjvzFZ98sRb5ipmy2bGY/JsfvelT1
w2M3yjE3m6fIk5xjHmuRcu55TebTfxdxrevnmCspRb7mj1mbc94xMzWzNa95
wxx7AO4F+B5b5phTtUrPONdOT9FPvuDnzBSZvdm9GffmOTJus273FLbIkdHZ
3/T4en3nlGN/FTHX/A5mY3p6v5uevlfVDzfOsWYaRcxZ15JzwM/6s4i5sW6O
ufMHfGojrmEC3FRdm5mD2YOZy7gc12Qe0Uhxrc4550arFHPROey1/FzE3DaD
sLZbI62V37SKZ+8a9357j3zv1inunc/M/ZDFUzxL16hauH2Ktes9tvYsluLe
+x1d6y1SfHczDLMMv8MuOfKVibxumyKvtkaY97ZJUTv8nbXUmuqx3mPnVk5x
7818zH78zrvm2ANwL8CM370ka6q11R60T46ebG+25u6XQyPMqUfPUTvYM+bW
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

                 "]], Polygon3DBox[CompressedData["
1:eJwt13W8FdUWAODD5cC9B+4BJKW7U7o7FAQUBBQkBBGlJQSlFCVUjGc/+9kF
KAgmdrc+EQwQC30GoSIh8b7l3D/W78z6Zu29Z2ZP7FNz/Iwh03NSqdQOUURU
zaRS3dKp1NjCqdQK+b/yUql9xVOpLOvMJrDBrLy6NmwYW8xWsrKsFRvKFrLl
rBxrzU5ji9gKdlR/FVhfNp2NZMer68hGsqVsFavCurIxbDm7ls0S54sS+alU
A/u6ZfVl+wTb49StVHeZ/RW0bcuGsyXscnbEuOVZHzaNnRHjatuOjWCni2f0
94e64qyjvINoy5qom8Rukm/S9mlt6xpjIJvGbmR3sdpsAJvCrmd3sAyryx7V
zzT5dPGLMY6paSaGqevBfmOF1LVgI1gvVlrbFuwpbS+RLxXFWD32GJshnyku
FktiXvKT+r72fSd/VV+/mWBdp4rK87StY/8j9k+RTxU/23lUXVNxmrrurI66
k9VNZTewO1kZ1pINYQvYMlaD9WZns6vYzaweG8Sms5vY3awa68nGsyvZjeyY
cY9n/dgMNorVVNeHTWRXs1tYLdafTWbXsdtZIedZmfVn57PRBXPZnk1i54iT
nWN1bXuxCfJV6m5S92tcDNacDbfZk1VW14WNZsvYNeyQujKsJ5vMRrBK6jqz
M9ll7GpW1bgnsnnsTvZv9pO2h+WNRSPR0rFUUddP3QXyuTHHrCY7lV0sf0jb
e7VtyM5i17Kn2Xr2kf5ekv9kLn8UJbStoe4UdUv4g+r+o+5/6o7Im4ihrBur
rm6wusXsAXZPzBEbw65iG9gTLMUqppN7Pu79u43RmJ3DbpQ/r+SpmEt2EpvP
7mK3sqbsXHYze4E9E9dAvC3/yvGWZln59+I1tjvnn+FSufL6NsZqezXfyB5n
zdh57Bb2InuWNWDj2DXsKbaONWIT2Q3xvIlJjrmiOerERskvVXdVXBfxjny7
ccuwEjGX2nZXN4PfzK5nf7l+JVgXdjY7hf0gXpfv1Vb3qTz5t+IV9gsrFu9O
+d/altW2F5/Chuclc943ndyPcV9u0sFivijejfY1j/cRO6xtOdu91UzV9nT7
K9rfgZ3LrmFXsD/V5bNObDwbxPazkqwrm8hOZQfZcax7jMuGxnMu3pXvcMxl
Wcl4zo1xuroVfA17ON5hbARbzlazh+IZZMPZsrjvxTjHXJedwVbK16p7RN2P
4k35PmOUZMXiXSfeY9+ycqyU/IDjKxXv73hW2ZB4BvXXg81kt7DrWK65rM0e
Nt558smih7pl7El1X6rbzIqqq8UeUjdRfo7YYYxdaqqK3upasG/Ybnk10Yed
EPck2yevE+8M1oHtZPvl9cQg1jHOjR2Q1xeDWSf2HdsrryH6sVZxb7A98uqi
L2vJtrJt8iOuwVEx33Hu4JvYN/Ki6grF8YkX2Hcsl+XIP9H2LbafVY/HlBVx
vqWdb0s+kg0reBbOTifzE/P0rjF28f/a3qNtZXXl5R3UXRjXin/I3ol73Bh/
yeuKgax9fI9ibPkubSuxcvKv1O1k5UQX1ohtYz/Ky4uurGE8C3G/yYuJVqxZ
vE/jOZRn4n3ImsoPx/0hLy5as+by7fr7SV5BdGON2dfsV3m+yMY3PZtc0+0F
eXgddoJzm+Hc7pS/oe3LBW1/k1cRlePdqO4LtsN2yfi+q6ul7nP2tbyEaMNq
Ftz3w9LJ+zre269qu5t/avt316WKugp5yZqhWDp518c7/3p17bWdzx6Uf6Du
bXXt2Dz2AHufvcVyzGUOq8X6sz7Rv/4+kh8zRj1Wmm1mH7NU3IN+ysS5iefl
X+ck67eUvLD+CuuvNh+A+rI+xr2cPR217HPWm62MtUW8F9lW1outYBvZNraF
dWOXsnXsCTHDuXVmS9ga+WfqPlLXlV3CHmdb2SesJ1vONsR3gH3G0o4vwxqy
IWxg3KPO7cPCybMRz0glY2znz8Vx5PzzuU4d80BsY8/Gc5/zz2VIHc1N2n5Q
OPkuxvdxtrYtjTtTo7v4m+pe0a4Nm8vui2eDvVHwXX1R/oN2O8VMbT9mL7Of
5RXicqtrq+0F2t7P32Nvso5sUazD2KfsA7Yn5kn+p7ZV2fHyz/S3hRUVzVhl
toVtleeK5qwS66K/i/W3lm1hH7NObDFbzTazD9m+eA7lh41Rl9UoWG/8XXB/
x32+0nm01naOtvfK74nvCmvFzmd3y9/S9tX4VsTzLy8imrIG8r1x3PK/jFGN
VYxvY7zbWI5oxOrK54jZopR+G8X3xhglbTdMJ+vpWFfHGr2dOX8t1m7yK+1r
H/8fxALbt8VzZd/7+mnNLmK3slfYe3nJejnWzfn5ybq3SzZZ88baN8vqx7eP
dbd9me312n6h7af2XyQuFGXsaxrfZnXz5fNEadYk1nesvnGH2J6l7W3a3m//
BWKuOE5dY/t6xPVTN8v2deqeU/e6/QvFAlFWXbP4hqvLsV3F9gB1s9SNsf9X
8b78e9e0PDsujj+T9L0umxxTHNsuc5lmrdSOUndiXN9M0veGbLJ2iDVEyYL/
QGvYWvG4KJ5JrsfqbPI/Kf4vfSWe0dcVPP7rHfbM7DZGEXlrfibrl5fcL7PT
yToq1lOb9fG7ujzWTj5W3YAYN5NcyyezyXnH+cdirhI7Sd2Jor19+Znknngi
m1zHuJ579FeUtVEzWrOTWIlMMg/rs8lcxZztVZfL2qobo65/zEMmWS9tzCb/
deI/z07xhpo/Yk2sLhPPpbpV8R+HfxLfaXlRx1eDDY73OBuvrhkfz5ayR9kG
1pxNYJeyx9hG1oJNZlewdex51pJNZavYk+wFdkz8KS8rOrN28qPxbZCXEZ1Y
W/kR8bu8tOjI2sT1099BeUXRU9qFHYi1iTwd3yxWX74/1hzywvGdYfViTPGl
/G/XoA6rLi+kv0OskujFuha8x5emk3dBvBN2xPdS3RR2pXy9uk1xvuqmszvY
6+zFOAfxhfyQMWqzanGt1E1LJ890PNsvsXPFJJGXn6zHOhgjbbua7YHq5qgb
l5f874z/n8Xzk//GndUVsV3d9iB1c9WdZX8uq8lOYfPYBNbEMZ/JFrL72Jr4
5qmryk5ms9lY1ljdKLYgzpetZo3YSHZRvBPZYzEX8e2XH3RutVhVeUN1p6mb
w+9gD7IGbCibzW5nD+Ql69FYlxbLT/5Xd8oma89Yg2byk7VrR9ZU29G2F2l7
v7ZrY87c49/IS4l2rDb7P6wpDks=
                 "]]},
               Annotation[#, "Charting`Private`Tag$323359#1"]& ]],
             Lighting->Automatic]}, 
           {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
            EdgeForm[None], 
            StyleBox[GraphicsGroup3DBox[
              TagBox[{Polygon3DBox[CompressedData["
1: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
j+CzBnkypaLjjuLVb8FnMfJn/ge+WM9a
                 "]], Polygon3DBox[CompressedData["
1:eJwtmnngVlP+x58n93zr3q6rjValTQtRhPZdi5RoRZvSQvuqXUlooyyJCUmS
RGWJSBlr9jXGNmZ+M/MbjHVQtmreL+/7x63zOuc+97nPved8Pu/P+3xrj5h0
wcRShUJhtP6J9P8vcaGwo1goHF9SKJyWFQo/i7eLa4ibiX8TPyKuJW4uflW8
WPxtKBTqiD8W3yQ+Ij5R/P3RhcIeXbie+sZrrKn6ztLYHeIfxaeKzxSvE/8g
3qDjMrX3q6+8xk7RcYbaf1LffzXWRNxcfLv4O/F3uv7Tun5d8TjxrzoeVrum
7u90nVsuKRReFjcXdxR/q/N36/w66rtM55bV+HNqn6rxdpnvaau4convNdH4
s+JTxG3Ff4/93UHcQPyP2PdWIm4ofl08k3vVPa4V3yO+XPy+uIK4tK63V3yS
zm8lLiN+RnyyuLW4svgtcRtxN3Ek3i1uIG4pXqzrnSPeqev9rt8Sa/zP4iYa
b6Px8uJXxGeIO4kril8TnyXuIj5GvE98uriDuIL4VfGZ4s7iY3X8quczXH0P
6LuKGt+ldj2Nn6mxUuInxfXFZ4lv0DkDxM/qfkqJV4sHiZ8XR+IbxReKXxAH
8U3ii8Qviksyv6N2at9T9Lu7Vsd5aj+pvkP6fUvFfcRPiQ+LV4kHip8TH6XP
rhD3Fe8RF8XLxOeLd4uP6Pzl4gvET4sLGr9TPEr8tvjozHO8rdobip77z+mY
p/a/1VdbY7fq/8f1PGqo71KNvadjhdoH1V8v8xpor/bGotfGXTpGq/2O+jKN
rROPFL8hTsW3xX62r4pj8Tvi5eID4rri28WXiF8TJ7wPPe83xK30vM8WH9H4
E+K64jPE3+g37tT9VVffSL5fn9srri+eID5Kn39K7RN1fgudv1Z9w8Sv6Lwy
4v/o8w/q/Irqu4i5pb5hGnteXE2fXa++MWq/q75jNHa3eKz4PXE58XHEhMj3
/KDG1ugYqvbLGi+tsa90/Yc0Xkl9g1krOkao/brGyzJ/9P82jR+rviHEA31n
TbV3MQc1/s/YsaG07r+RuIvGe4k/1/gscWfxubwv8RWZ19gBtS8ueu1xzz9E
npP8FmLKT5HnILGmgz7fRe2/qm9a5t/0Y+Q5y29tr/F2an+ovqka+0D3e1Dt
werbqPFK6vsl8jO9X3y2zu+n9jfqm62xl4LvjXu8WeMViamRn9G9secE5/IZ
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
eGBmDY4WXygeRKwQl2buBNcjVXQciuwB7CA/6ojVvjq4fkFjo7WvC9aXVXUc
Rsuq75HYc+pttduWeK5Rk78rbl/iWr2dzjmg3zdFnz83cw4iF00W92Quig+L
54j7Mb/FB8VTxb3E3cUFXW+eeACxQHxEXXPF/cWrUut7PBq8mq76/v7ibyPP
1zfQYOIfNH5b5hwxPNg/IHdMTV0b4ynhLU1L7X/gGeAdTE/tHfAOeBfT9Zn7
xJ2C4/3MPB90D853M3J9QMwi/s9K7ecw55n75LRh+foiXqNB8RvX5fELzdoi
OIegZaclzscdg/MfGrZlcI5F285PHTvR2Gjt2anXFnOMubZAPL7omExsnpc6
9hJzib0zUs8t5gBzYWbqucA75l3P0/fvEQ8Kznccg/J4SS4s0bFN7cZ637s0
tlBHmTz+b0Kr5fn8jxyVWTMNzOMp8fzKPF9wj5t1/tw8f3MO5+JnlOT5Ab9k
su5vSNEeBV7F1MT6qEOw/v5c56zm3ep+HhBPSaynqP/RCwc1vl5cXeOPZPY4
ewZ7BnifV+S/p0dwvl+kIw7OoVv02Tmp1y45ilw1JbVXgseC1zIhtZeDR4NX
c7WONDgnb4+9Pph7nXI9Mjnx/bQK1vvESGpHNDixkxxGLst0XEt8S+394BHh
Fc3Pr8ecYm4tEL9Q9BxnrpOzqwXXTOTypeJywTlyJ3owdS2Jx4PXMy51bY6n
g7czPrW3g0eFV7VMR3lyEzk0dg7Gm0LDkpvnps7d5Hhy/RIdRwdrlodja5Lq
wTUBWmVM6lqbGpVadVJq7wuPDK9sZGovA48Dr2OljkrBNcCe2DkTb4mcTS4d
nboWp4anlr9ex7HBNdszGh+VutamZqd2v1Tcu+ganFp8uY4KwR75kzp/hbhi
cAzZLR6bupamBqcWJ0fjBZEjyd1orCrB9RHaC41UNbgmQTuhqaifqJfQR7Nz
/donWN/PEe8Unx+sv5emrq2pqamtyVnP5P4puQx/ck++v4C2RDPuzfcz0JLk
pNsj5wxyFR7V3yN7WHhXaEq8BnImWhNNT+1PTkXr4y+/mPs71DLE8Jtzf4fY
/mjsPHBN5vnJwVydVvQYNeNLuX9ELUmOWxs5B5H7iPFrImsIYv9V4iRYY24V
LxaXDdagD8Vek6xNYi7anJp1X+5HUcuSw/GyyNHkdjTDxtwvQktQ0+KFkdOp
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

                 "]], Polygon3DBox[CompressedData["
1:eJwt13fcTvUbB/Cbep48d4/byKzMIoSoCGUWobLKzkhZKavsskJ2KDJKVEpp
IULJaG80frT3UAotlPze1+s8f1yv17ne5/O9z7nHuc65K/QZ0mFw/lQq9YHK
Ur3TqdTvNk5To/OlUu/lpFI92SF9ETWSvcO65qZSG/XfnZxKtWKT2Q1yR1lp
NYF9xK5lB/QF1S3sTdaP/aM/Q01ie9k1Xu9J/aderykbyzqyp9hnrBkbxzqw
Nexj1piNYVezJ9gnrAkbzTqxdWwPe18dLZhK9XDcg6ywGiH3tlwXuQ36b2Va
sknserkjrJQazz5kneWe1X8jdzmbyC5nU9kDbIXa7xi9rD3MiqpRcu/KrVaP
qqHye+OzyaRS3W0/b3u/dW3l7rS/j7V/suJqLNvNbpJ7X59f9WMPRI69ov/D
2i5sPuvL3mRHWU+2KD5n9hY7xnqxxaw/e5v9w3qzJfG9sTfYEdaD3cuuYy+z
31lnNo/dyHZnJT+UE3y89zGI7dHnU33llss9rh5Tw+37OL5juUf0q9Qwto9N
ZDfb/sD2Saq/tSvsH8w+1J+sBrCVbAj7SJ+lBrIH4ztir+r/dB5d2YI4Z5/f
H6yYGsN2sYFy7+qPy/Vhy9gkuedsd+BNs/129T3ktup/kWtv30y5Fmw8e5IV
ZVfGtcBeZAdYBzaL9WI72SF2UI3z3layBl57YLwPtZW1ZQ/ZfknmZXXY72UA
e4f9q7/O6y3N+11NYxvYs/GdWNuNbWE/6dvITZeb4rybOUZv/gqbqm8td09W
si7WH3CM3uwldljfSe6uuC7ZC+xn1o7NYO2s/5Kd7ngb9BtVe7lH2Idy9eWG
511b69nX7Cs1Un68tbWdS3u+Ua6g/iZ1MjubzWBfWnsxW6nfYd05bAhrwFaw
7awyG5x37DiH0Y71Vax3jIvkltjeLFdWrp/9d/JpalRucu7To7d9iuPW1S+T
+0buEmsf1O+0tgobyu6QO8FqqgXsY1ZPbql+i1w51p+dx2ay1awQ68zqssVs
EyvD+uZdH7uykt9A/BYKOpd7WTXn0ppfoRqwyew/2zVUdbWSzWVnyF2sv0TV
ZvUdY5nt571WeccY4Bjr1Fo1Uv5z+6bKPaN/Wo1gn7EprJa1s2w/bm1ha7vY
P8H+X1lGFVIV5S6UW2B7nVwpud5yL6qt6jb57+ybI7dFv1mNZd+wWWyktaWd
c/2Ygdb+Zf8y+89jPeOzZmmZUep01oCtYH/LTZXLZnXYUvYVqyN3t369cynN
rmPns3nsGVaC9WSb1HNqjNf42r6ZmeQa3JGV/B7jd5mfXWDtfLZWX9LaXtaM
l/uBlVDj2Musttxs/RNyRVhX9oJ6Xo2T/9a+2V5vu36bup19z+ayKbazvI8L
9Uus/dr+Gl5vuv7h+A2wjqwCGxG/R/aPEXopa5VO7genZZLZGDOyJXuP/SbX
0dr7Wet0MjOLZZK5GvP1UraJ7ZVrGNc+m+hc/mKV4jNh78esY3/rK8d3xvbE
fLH2df2P1l7FFrLK7Db2GMvHWrHL2Ga2jzVi01gT9jR7j9Vht7NmbC3bzS5i
E1gj9hh7g9VkI2Oesu3sS9aCzWUN2Wr2OqvBRrAr0sl9o7j3u0b/hGrKnmG7
5OrKjWfN2Tb2BWvO5sQ1wEr5Purx5exPVoVN1N8jl83asKpsElvETmFt866P
31hZVUYtdPyycsNjW+6I762J3JlsKJvP/mKNWDl2C7s3njVYU3YWG8MeYv+x
FqwiGx3XPDvOmrPy7Nb4/bBjrFnMNeeSm53Mh5gT1ZxLGblhtu+W+1uusVxN
NoM9wjLeRydWjU1mi1kB1o6dy+6Ia43lsPbsbDaWrWInvN7lrDqbwu5j6bhH
skpsHHuUpVjLnGSGHc/7nOLzquT8zpG73faauP7kWssNYid5H2fFbGZfsCvZ
J3ENWvOk/qm4llkFuabxXuSOs6vYp/qSmWS+xZyb77jl5NrEzJI7xu5iZdiV
MSfYEdYmnczCUplkXsbcjBl7ZnYyh2Mer88kx45zuDU3OdYdbIHts7KT54N4
Tkh5rW7qZ/2pahh73ZoO6WT+nJlJZmPMyNnWlrC2ecxeucNxv0wn86K83A79
TjVPrqzcVTGf5I6yLnI/6XPUEPYqmyNXUq5FfK7sd3Z1OpnBZTLJjIpZ1Zn9
yAqowXKv5F03cf3ckpt83pMzyfPBwqzk+SOeQ/qzK9iieIbQV7W2T3z27H72
NqvNBrL+jvFvvN94LbYvvku5+/RvydViN7IBcinnXD7uT+zT+D7kluvfkTuf
DYr7pVx+uYr8TvZ5PK+xfKwCm8Y+Yx3TyX2oXCaZvzGH+7Jj7HQ1Ue5/rDv7
RZ+rhrM3YsY67lz9VsetyLqxtunk3lna663XPxvPPnKr2Ady9eSGxbNPOnn2
OCOT3G/ivhPPcA9nJf8p4r/FEPu6yu1naTXU2tdijsvN0b8gU4F1Z7NYce/t
spiz7CC7Jp3cX8pmkntu3Huny2XkGsackPspvkO5ouz8mDHsVzacFWG1Y46x
A2yxtdVZd7aNnZJOnkHOZd1YV7XZsRaxc1ineL6QO0lugqrHurAXWTH9fXIX
sD7sNZZh97ML2fUxt1mhmF/qNHZBzB32m3MZwtKsGpvHfojnOVaeNYm5w/5l
S71eTdaD7WA5MedUYVYrZi/7RW6JXA12LdvOCsQcVqeyc2Mesx9zkmfv+tnJ
e4333Dzv+fCLrOR/S/x/iWfcsdZWlGsWs83a/6x9QK4u68veZEVkVrFG7Oa4
x7FS8ZzCzmZXs03shLUzWTF2KVvNDrF7WCV2TXzuLF/Ma1aINWIPsv1yN/MC
rEo8V7Dv8u4BBbOT58F4LlzjnAfL5bCq+rvkvo/nBrnGbDDbw0rHHFa1WDu2
geXql8vVYTfEfZkVZg+zhuymuLeykuwhdgkbFPd5VoItZJVZR7aF5Y9ndnYR
6xfXPysa9wlVhbVkT7GseO6Wu5jdyN5lxeNZQ1VlrdjTLFvfWD0en7vv6Dw2
ynv7P1ejI/w=
                 "]]},
               Annotation[#, "Charting`Private`Tag$323359#2"]& ]],
             Lighting->Automatic]}, 
           {RGBColor[1, 0, 1], Thickness[Large], Dashing[{0, Small}], 
            EdgeForm[None], 
            StyleBox[GraphicsGroup3DBox[
              TagBox[{Polygon3DBox[CompressedData["
1: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
2wj+PFjzV8Pjg/PCysS1jHLQcnhMcA5aCg8L9ou+gEcF69iixPdSeW29dC9Y
G/fCo4O1ejE8NrivWQZ/HKyHS+CP4EbwAnhosMc4T3uK+9a92P3vB8G5YC7z
H8INlU/h4cH9xXz4m9w9z8zS7l9VG5QiLs1dT09gvkq0fyRNvivaA1LOqhbt
3fRRTsld745XfRLtSSl33B3tJUnnK0d7RspTlaK9LeW4++FeygFwLXhAsF/6
SHTuUy6rDveG+8H3wT21B+Cvctfr41TPMN83uG75K7XGDlC9l/m7DyFOYv5E
eAzHT06te2PhO6L1RbnstWj/SLXilIJnK+3flrofVB2+O7UfpevZkdqz0vWk
mZ/LW8S9qT2x/vCu1J6VvuPG1L6W7tvC3D3Jp/IWeP0U828T56Tu43Q/a3I9
rwXXYA/AfYK/1y3RuUce8qPwwGBP8uboPCe/+tZoHZTPeVN0npNfXRt+PbjH
rAO/EXx/6sKDgq+/bfS+Ut7vEK0pyuntozVFebxdtKYov78SrUeqAW6L1mL5
nDXgV4Pvw+3ReUV+adnoPCqv9epoXZYXek10HpV/Wz46J8mbrRjtgapGqhDt
gUonr43O0/JXr4vO6/Ler4rOPfKKb4zOnfLnr4+uD+S3Xx6dY+RlXRmdh+Qz
XxGdh+R3lYvO5fK3X4rWDtU/qn3O4xl1YR/N4nmdBn/C81qSuy/9HO4Tnafn
qz6M7jHUj9ydOXfPIVbJnN/nas0zphf7+KWpe9LJ0kn4UtVX0s9on1d14MLU
ve1E+KuCX6267uvUPexU5pen7nmnlLZnqL7nP/LJUl+/rrN6oX74QjVkdE0m
nZefrnx9v2qJ1PXJh8yfFZ3z9P/+qeuKoeoxc/dp6uneZ/4gjh8uLSr4+apr
9ubu8dQzhugcoHxxWHR/pZ7lzYKfL929LLpWUI2qWvVQ3qeh8ntmj3cecXZq
T1s6sCB17y/tmpa7rtK1qXa+lvmBietx6UBraWBqD0EaWDXaB1ddvSb18TPg
T1Ln7lHqQ+Gj4JHwuNS5fjQ8M7WXrr08suDbKP+PSH3NI5Q3o+tR9QLjC78R
qDZZm9q7UE27IrVvME3eXWrPQd7dT6k9Gfl783N7HNKxL3N7HNKxGbnrDN3z
H1L7EvISf4RvKbZnuCC336G1OjN3vaJnOjf3bwP6juot5AkM5f4sy+19aI3N
yf2bgb777Ny1o77XvNzek+7Dd4X+Qn3EC9E5WP3O+tReivzMbbm1Wt7CpdE+
iHytRtF5S33WRdG/Jej3nVbRuVm9Z5vonK2+b3tubZSnUS/6dwj1fX/m1jF5
ArvhwcGexv7cvpL8hG7RNYR6tD9y66F8gzW5/UE99+7RuVn96arcHpmey8rc
vqH21zPROVU9Y9foGkX96S+5/UF5NT2i6y3t9yeif8NQL/ZXbv9LPsbG3B6i
/J9m0TWE+uVfc/uP8oJaRtcc6q+fis796kOfi64P1I8/HV1zqCdtHl1DqHfe
lVvn5UU0ja4z1PM+G11PqG99Mvq3FvVcj0XfN+WjS6J9K/mTraNrIPX1TaJr
GvXIjaPrDPXUj0f/lqN+bV9uT1a+UP3o/kc+7fPRNZl8g025c7r8pT25fUB5
Vp2j62D17L/lzn3yrFbk9iilaZtz1w/yjnbmrh/knyzP7c1JM3/PnR/lsfSO
7rukG69G90LSvQbRvZM8hC256w15Vl/n9gGlwz2j62xp9YvRtaa8hU7Rdbw8
2I7R9b18jK25c588uv8D80BeaQ==
                 "]], Polygon3DBox[CompressedData["
1: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
                 "]], Polygon3DBox[CompressedData["
1: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

                 "]]},
               Annotation[#, "Charting`Private`Tag$323359#3"]& ]],
             Lighting->Automatic]}, {}, {}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TtIllEcwOF/funnp6auIihuEugqQa4S2CSIkFsIXgZdbVQEnYoIahVB
l7Ty3iSCrS7e7xbiJaWywlHwOSC8P57DC+95z6XmZV9L74OIGNBfpfFvneg2
G1HOksKIalayno/ZyCd8zmdsZxt72MkuvTIe4gjf8QPHOMFpznOZ39JcuYhT
/tO6/uinPmYiNjjJTU5xi5+4zc/c4Rfupnk5oz3jWe5zjgec5yEXeMRFHvMr
v/P1w4hz/tcPXetS+9a4xlWucIlz6d8c5yjf8y2HOcgB9Rt3sJutfMEmNrOB
T1nLOlawikUs401eRGlaCx+lu2FJOhcW8xeLeMVcOiv6NM54qmy6QxakvTCf
x7TFOGQm7YueeOPlxf393wFdkUzM
             "]]}, 
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0U1LlFEYgOEzWkKCi9y20V9gf0Dd6EaqRbtQF47fzTQuRV2FENYuYjAR
BVEZxb2uFb+yNMcRETXweyuClVaOXS8ubq5nceA8533L410vU7EQwludGq54
xB1VPgqhkM9YynqW8zWfsofVHOALDrKRGU4paV5kH3P8wGMO8TI6E11cHMIc
+7nLMy1H53SgpochrDDOVTbzC1u4xlZ+ZRu/sZ3r7GCnNqJ9+Z0JbjLJLN9w
iynmWFMUwh7Pta0T/dATuy2xhLPM2z3DC37mId8zy14ucF4J8wQbmOZzvmMV
u1kR7ckyvuJj1rGAMw9CiHGaIfqmvDNOMs9x3nKM/zjKEf01D/MPh3jDQV4z
zd/8xF/8yJ+s9e792P3//w9KY1DA
             "]]}, 
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bsvnmEYwOGHOCQ+sZAURZ2mxsImFiZFhCIREYTEWP6BGkwGRjEwioFR
DK3zsdKIQ8RxElPrfGoNLK4vhl+u+17e93mfN6+rt6EnJoTQr+PYEP5YDvhb
A0khPNtHGG+fYBpnWMA1lnCfFTxnPR/4qA5zSiSEHmazj0UcYhnHWM0pbnOL
J/qpQ+3qQ2IIs0znHDM4z0wu8CMXmcWl6Hu4zBx+0oo5l6vM4xrzuc4CbrCQ
v/jCbZ5qU0faU7ez/WAzJ/mFoyzlID/ze/Qs/MZkRtRuvnUPdTxjefR5LOYK
8znNVI4zjsP87847E0L4xw4+sY2PbOUDW3jPZt6xiY26NX/lDet4zVpesYaX
rOIFK/mXr757J/b9/78BjYJJ4g==
             "]]}, 
           {GrayLevel[0.2], 
            Line3DBox[{2045, 2358, 3336, 2268, 2044, 3337, 2269, 2046, 3338, 
             2270, 2047, 3339, 2271, 2048, 3340, 2272, 2049, 3341, 2273, 2050,
              3342, 3024, 3440, 2051, 3025, 3441, 2052, 3343, 2274, 2053, 
             3344, 2275, 2054, 3345, 2276, 2055, 3346, 2277, 2056, 3347, 2278,
              2057, 3348, 2279, 2058}], 
            Line3DBox[{2060, 3026, 3442, 2059, 3349, 2280, 2061, 3350, 2281, 
             2062, 3351, 2282, 2063, 3352, 2283, 2064, 3353, 2284, 2065, 3354,
              3027, 3443, 2066, 3028, 3444, 2067, 3029, 3445, 2068, 3355, 
             2285, 2069, 3356, 2286, 2070, 3357, 2287, 2071, 3358, 2288, 2072,
              3359, 2289, 2073}], 
            Line3DBox[{2075, 3030, 3446, 2074, 3031, 3447, 2076, 3360, 2290, 
             2077, 3361, 2291, 2078, 3362, 2292, 2079, 3363, 2293, 2080, 3364,
              3032, 3448, 2081, 3033, 3449, 2082, 3034, 3450, 2083, 3035, 
             3451, 2084, 3365, 2294, 2085, 3366, 2295, 2086, 3367, 2296, 2087,
              3368, 2297, 2088}], 
            Line3DBox[{2090, 3036, 3452, 2089, 3037, 3453, 2091, 3038, 3454, 
             2092, 3369, 2298, 2093, 3370, 2299, 2094, 3371, 2300, 2095, 3372,
              3039, 3455, 2096, 3040, 3456, 2097, 3041, 3457, 2098, 3042, 
             3458, 2099, 3043, 3459, 2100, 3373, 2301, 2101, 3374, 2302, 2102,
              3375, 2303, 2103}], 
            Line3DBox[{2105, 3044, 3460, 2104, 3045, 3461, 2106, 3046, 3462, 
             2107, 3047, 3463, 2108, 3376, 2304, 2109, 3377, 2305, 2110, 3378,
              3048, 3464, 2111, 3049, 3465, 2112, 3050, 3466, 2113, 3051, 
             3467, 2114, 3052, 3468, 2115, 3053, 3469, 2116, 3379, 2306, 2117,
              3380, 2307, 2118}], 
            Line3DBox[{2120, 3054, 3470, 2119, 3055, 3471, 2121, 3056, 3472, 
             2122, 3057, 3473, 2123, 3058, 3474, 2124, 3381, 2308, 2125, 3382,
              3059, 3475, 2126, 3060, 3476, 2127, 3061, 3477, 2128, 3062, 
             3478, 2129, 3063, 3479, 2130, 3064, 3480, 2131, 3065, 3481, 2132,
              3383, 2309, 2133}], 
            Line3DBox[{2135, 3066, 3482, 2134, 3067, 3483, 2136, 3068, 3484, 
             2137, 3069, 3485, 2138, 3070, 3486, 2139, 3071, 3487, 2140, 3384,
              3072, 3488, 2141, 3073, 3489, 2142, 3074, 3490, 2143, 3075, 
             3491, 2144, 3076, 3492, 2145, 3077, 3493, 2146, 3078, 3494, 2147,
              3079, 3495, 2148}], 
            Line3DBox[{2152, 3385, 2310, 2150, 3386, 2311, 2154, 3387, 2312, 
             2156, 3388, 2313, 2158, 3389, 2314, 2160, 3390, 2315, 2162, 3391,
              3087, 3504, 2164, 3392, 2316, 2166, 3393, 2317, 2168, 3394, 
             2318, 2170, 3395, 2319, 2172, 3396, 2320, 2174, 3397, 2321, 2176,
              3398, 2322, 2178}], 
            Line3DBox[{2177, 3511, 3094, 2175, 3510, 3093, 2173, 3509, 3092, 
             2171, 3508, 3091, 2169, 3507, 3090, 2167, 3506, 3089, 2165, 3505,
              3088, 2163, 3503, 3502, 3086, 2161, 3501, 3085, 2159, 3500, 
             3084, 2157, 3499, 3083, 2155, 3498, 3082, 2153, 3497, 3081, 2149,
              3496, 3080, 2151}], 
            Line3DBox[{2180, 3095, 3512, 2179, 3399, 2323, 2181, 3400, 2324, 
             2182, 3401, 2325, 2183, 3402, 2326, 2184, 3403, 2327, 2185, 3404,
              3096, 3513, 2186, 3097, 3514, 2187, 3405, 2328, 2188, 3406, 
             2329, 2189, 3407, 2330, 2190, 3408, 2331, 2191, 3409, 2332, 2192,
              3410, 2333, 2193}], 
            Line3DBox[{2195, 3098, 3515, 2194, 3099, 3516, 2196, 3411, 2334, 
             2197, 3412, 2335, 2198, 3413, 2336, 2199, 3414, 2337, 2200, 3415,
              3100, 3517, 2201, 3101, 3518, 2202, 3102, 3519, 2203, 3416, 
             2338, 2204, 3417, 2339, 2205, 3418, 2340, 2206, 3419, 2341, 2207,
              3420, 2342, 2208}], 
            Line3DBox[{2210, 3103, 3520, 2209, 3104, 3521, 2211, 3105, 3522, 
             2212, 3421, 2343, 2213, 3422, 2344, 2214, 3423, 2345, 2215, 3424,
              3106, 3523, 2216, 3107, 3524, 2217, 3108, 3525, 2218, 3109, 
             3526, 2219, 3425, 2346, 2220, 3426, 2347, 2221, 3427, 2348, 2222,
              3428, 2349, 2223}], 
            Line3DBox[{2225, 3110, 3527, 2224, 3111, 3528, 2226, 3112, 3529, 
             2227, 3113, 3530, 2228, 3429, 2350, 2229, 3430, 2351, 2230, 3431,
              3114, 3531, 2231, 3115, 3532, 2232, 3116, 3533, 2233, 3117, 
             3534, 2234, 3118, 3535, 2235, 3432, 2352, 2236, 3433, 2353, 2237,
              3434, 2354, 2238}], 
            Line3DBox[{2240, 3119, 3536, 2239, 3120, 3537, 2241, 3121, 3538, 
             2242, 3122, 3539, 2243, 3123, 3540, 2244, 3435, 2355, 2245, 3436,
              3124, 3541, 2246, 3125, 3542, 2247, 3126, 3543, 2248, 3127, 
             3544, 2249, 3128, 3545, 2250, 3129, 3546, 2251, 3437, 2356, 2252,
              3438, 2357, 2253}], 
            Line3DBox[{2267, 2363, 2362, 3560, 2266, 3558, 3141, 2265, 3557, 
             3140, 2264, 3556, 3139, 2263, 3555, 3138, 2262, 3554, 3137, 2261,
              3553, 3136, 2260, 3552, 3135, 3439, 2259, 3551, 3134, 2258, 
             3550, 3133, 2257, 3549, 3132, 2256, 3548, 3131, 2255, 3547, 3130,
              2254, 3559, 2360, 2359, 2361}], 
            Line3DBox[{2365, 2688, 1391, 2364, 3659, 2588, 2366, 3660, 2589, 
             2367, 3661, 2590, 2368, 3662, 2591, 2369, 3663, 2592, 2370, 3664,
              2593, 2371, 3665, 1399, 2372, 3666, 2594, 2373, 3667, 2595, 
             2374, 3668, 2596, 2375, 3669, 2597, 2376, 3670, 2598, 2377, 3671,
              2599, 2378}], 
            Line3DBox[{2380, 3142, 3561, 2379, 1407, 2381, 3672, 2600, 2382, 
             3673, 2601, 2383, 3674, 2602, 2384, 3675, 2603, 2385, 3676, 2604,
              2386, 3677, 3143, 3562, 2387, 1415, 2388, 3678, 2605, 2389, 
             3679, 2606, 2390, 3680, 2607, 2391, 3681, 2608, 2392, 3682, 2609,
              2393}], 
            Line3DBox[{2395, 3144, 3563, 2394, 3145, 3564, 2396, 1423, 2397, 
             3683, 2610, 2398, 3684, 2611, 2399, 3685, 2612, 2400, 3686, 2613,
              2401, 3687, 3146, 3565, 2402, 3147, 3566, 2403, 1431, 2404, 
             3688, 2614, 2405, 3689, 2615, 2406, 3690, 2616, 2407, 3691, 2617,
              2408}], 
            Line3DBox[{2410, 3148, 3567, 2409, 3149, 3568, 2411, 3150, 3569, 
             2412, 1439, 2413, 3692, 2618, 2414, 3693, 2619, 2415, 3694, 2620,
              2416, 3695, 3151, 3570, 2417, 3152, 3571, 2418, 3153, 3572, 
             2419, 1447, 2420, 3696, 2621, 2421, 3697, 2622, 2422, 3698, 2623,
              2423}], 
            Line3DBox[{2425, 3154, 3573, 2424, 3155, 3574, 2426, 3156, 3575, 
             2427, 3157, 3576, 2428, 3699, 2624, 2429, 3700, 2625, 2430, 3701,
              2626, 2431, 3702, 3158, 3577, 2432, 3159, 3578, 2433, 3160, 
             3579, 2434, 3161, 3580, 2435, 1463, 2436, 3703, 2627, 2437, 3704,
              2628, 2438}], 
            Line3DBox[{2440, 3162, 3581, 2439, 3163, 3582, 2441, 3164, 3583, 
             2442, 3165, 3584, 2443, 3166, 3585, 2444, 3705, 2629, 2445, 3706,
              2630, 2446, 3707, 3167, 3586, 2447, 3168, 3587, 2448, 3169, 
             3588, 2449, 3170, 3589, 2450, 3171, 3590, 2451, 1479, 2452, 3708,
              2631, 2453}], 
            Line3DBox[{2455, 3172, 3591, 2454, 3173, 3592, 2456, 3174, 3593, 
             2457, 3175, 3594, 2458, 3176, 3595, 2459, 3177, 3596, 2460, 3709,
              2632, 2461, 3710, 3178, 3597, 2462, 3179, 3598, 2463, 3180, 
             3599, 2464, 3181, 3600, 2465, 3182, 3601, 2466, 3183, 3602, 2467,
              1495, 2468}], 
            Line3DBox[{2472, 3711, 2633, 2470, 3712, 2634, 2474, 3713, 2635, 
             2476, 3714, 2636, 2478, 3715, 2637, 2480, 3716, 2638, 2482, 3717,
              2639, 2484, 3719, 3720, 2640, 2486, 3721, 2641, 2488, 3722, 
             2642, 2490, 3723, 2643, 2492, 3724, 2644, 2494, 3725, 2645, 2496,
              3726, 2646, 2498}], 
            Line3DBox[{2497, 3616, 3197, 2495, 3615, 3196, 2493, 3614, 3195, 
             2491, 3613, 3194, 2489, 3612, 3193, 2487, 3611, 3192, 2485, 3610,
              3191, 3718, 2483, 3609, 3190, 2481, 3608, 3189, 2479, 3607, 
             3188, 2477, 3606, 3187, 2475, 3605, 3186, 2473, 3604, 3185, 2469,
              3603, 3184, 2471}], 
            Line3DBox[{2500, 3198, 3617, 2499, 3727, 2647, 2501, 3728, 2648, 
             2502, 3729, 2649, 2503, 3730, 2650, 2504, 3731, 2651, 2505, 3732,
              2652, 2506, 3733, 3199, 3618, 2507, 3734, 2653, 2508, 3735, 
             2654, 2509, 3736, 2655, 2510, 3737, 2656, 2511, 3738, 2657, 2512,
              3739, 2658, 2513}], 
            Line3DBox[{2515, 3200, 3619, 2514, 3201, 3620, 2516, 3740, 2659, 
             2517, 3741, 2660, 2518, 3742, 2661, 2519, 3743, 2662, 2520, 3744,
              2663, 2521, 3745, 3202, 3621, 2522, 3203, 3622, 2523, 3746, 
             2664, 2524, 3747, 2665, 2525, 3748, 2666, 2526, 3749, 2667, 2527,
              3750, 2668, 2528}], 
            Line3DBox[{2530, 3204, 3623, 2529, 3205, 3624, 2531, 3206, 3625, 
             2532, 3751, 2669, 2533, 3752, 2670, 2534, 3753, 2671, 2535, 3754,
              2672, 2536, 3755, 3207, 3626, 2537, 3208, 3627, 2538, 3209, 
             3628, 2539, 3756, 2673, 2540, 3757, 2674, 2541, 3758, 2675, 2542,
              3759, 2676, 2543}], 
            Line3DBox[{2545, 3210, 3629, 2544, 3211, 3630, 2546, 3212, 3631, 
             2547, 3213, 3632, 2548, 3760, 2677, 2549, 3761, 2678, 2550, 3762,
              2679, 2551, 3763, 3214, 3633, 2552, 3215, 3634, 2553, 3216, 
             3635, 2554, 3217, 3636, 2555, 3764, 2680, 2556, 3765, 2681, 2557,
              3766, 2682, 2558}], 
            Line3DBox[{2560, 3218, 3637, 2559, 3219, 3638, 2561, 3220, 3639, 
             2562, 3221, 3640, 2563, 3222, 3641, 2564, 3767, 2683, 2565, 3768,
              2684, 2566, 3769, 3223, 3642, 2567, 3224, 3643, 2568, 3225, 
             3644, 2569, 3226, 3645, 2570, 3227, 3646, 2571, 3770, 2685, 2572,
              3771, 2686, 2573}], 
            Line3DBox[{2587, 2693, 2692, 3774, 2586, 3658, 3238, 2585, 3657, 
             3237, 2584, 3656, 3236, 2583, 3655, 3235, 2582, 3654, 3234, 2581,
              3653, 3233, 3773, 2580, 2687, 3772, 2579, 3652, 3232, 2578, 
             3651, 3231, 2577, 3650, 3230, 2576, 3649, 3229, 2575, 3648, 3228,
              2574, 3647, 2690, 2689, 2691}], 
            Line3DBox[{2695, 3018, 1829, 2694, 3873, 2918, 2696, 3874, 2919, 
             2697, 3875, 2920, 2698, 3876, 2921, 2699, 3877, 2922, 2700, 3878,
              2923, 2701, 3879, 1837, 2702, 3880, 2924, 2703, 3881, 2925, 
             2704, 3882, 2926, 2705, 3883, 2927, 2706, 3884, 2928, 2707, 3885,
              2929, 2708}], 
            Line3DBox[{2710, 3239, 3775, 2709, 1845, 2711, 3886, 2930, 2712, 
             3887, 2931, 2713, 3888, 2932, 2714, 3889, 2933, 2715, 3890, 2934,
              2716, 3891, 3240, 3776, 2717, 1853, 2718, 3892, 2935, 2719, 
             3893, 2936, 2720, 3894, 2937, 2721, 3895, 2938, 2722, 3896, 2939,
              2723}], 
            Line3DBox[{2725, 3241, 3777, 2724, 3242, 3778, 2726, 1861, 2727, 
             3897, 2940, 2728, 3898, 2941, 2729, 3899, 2942, 2730, 3900, 2943,
              2731, 3901, 3243, 3779, 2732, 3244, 3780, 2733, 1869, 2734, 
             3902, 2944, 2735, 3903, 2945, 2736, 3904, 2946, 2737, 3905, 2947,
              2738}], 
            Line3DBox[{2740, 3245, 3781, 2739, 3246, 3782, 2741, 3247, 3783, 
             2742, 1877, 2743, 3906, 2948, 2744, 3907, 2949, 2745, 3908, 2950,
              2746, 3909, 3248, 3784, 2747, 3249, 3785, 2748, 3250, 3786, 
             2749, 1885, 2750, 3910, 2951, 2751, 3911, 2952, 2752, 3912, 2953,
              2753}], 
            Line3DBox[{2755, 3251, 3787, 2754, 3252, 3788, 2756, 3253, 3789, 
             2757, 3254, 3790, 2758, 3913, 2954, 2759, 3914, 2955, 2760, 3915,
              2956, 2761, 3916, 3255, 3791, 2762, 3256, 3792, 2763, 3257, 
             3793, 2764, 3258, 3794, 2765, 1901, 2766, 3917, 2957, 2767, 3918,
              2958, 2768}], 
            Line3DBox[{2770, 3259, 3795, 2769, 3260, 3796, 2771, 3261, 3797, 
             2772, 3262, 3798, 2773, 3263, 3799, 2774, 3919, 2959, 2775, 3920,
              2960, 2776, 3921, 3264, 3800, 2777, 3265, 3801, 2778, 3266, 
             3802, 2779, 3267, 3803, 2780, 3268, 3804, 2781, 1917, 2782, 3922,
              2961, 2783}], 
            Line3DBox[{2785, 3269, 3805, 2784, 3270, 3806, 2786, 3271, 3807, 
             2787, 3272, 3808, 2788, 3273, 3809, 2789, 3274, 3810, 2790, 3923,
              2962, 2791, 3924, 3275, 3811, 2792, 3276, 3812, 2793, 3277, 
             3813, 2794, 3278, 3814, 2795, 3279, 3815, 2796, 3280, 3816, 2797,
              1933, 2798}], 
            Line3DBox[{2802, 3925, 2963, 2800, 3926, 2964, 2804, 3927, 2965, 
             2806, 3928, 2966, 2808, 3929, 2967, 2810, 3930, 2968, 2812, 3931,
              2969, 2814, 3933, 3934, 2970, 2816, 3935, 2971, 2818, 3936, 
             2972, 2820, 3937, 2973, 2822, 3938, 2974, 2824, 3939, 2975, 2826,
              3940, 2976, 2828}], 
            Line3DBox[{2827, 3830, 3294, 2825, 3829, 3293, 2823, 3828, 3292, 
             2821, 3827, 3291, 2819, 3826, 3290, 2817, 3825, 3289, 2815, 3824,
              3288, 3932, 2813, 3823, 3287, 2811, 3822, 3286, 2809, 3821, 
             3285, 2807, 3820, 3284, 2805, 3819, 3283, 2803, 3818, 3282, 2799,
              3817, 3281, 2801}], 
            Line3DBox[{2830, 3295, 3831, 2829, 3941, 2977, 2831, 3942, 2978, 
             2832, 3943, 2979, 2833, 3944, 2980, 2834, 3945, 2981, 2835, 3946,
              2982, 2836, 3947, 3296, 3832, 2837, 3948, 2983, 2838, 3949, 
             2984, 2839, 3950, 2985, 2840, 3951, 2986, 2841, 3952, 2987, 2842,
              3953, 2988, 2843}], 
            Line3DBox[{2845, 3297, 3833, 2844, 3298, 3834, 2846, 3954, 2989, 
             2847, 3955, 2990, 2848, 3956, 2991, 2849, 3957, 2992, 2850, 3958,
              2993, 2851, 3959, 3299, 3835, 2852, 3300, 3836, 2853, 3960, 
             2994, 2854, 3961, 2995, 2855, 3962, 2996, 2856, 3963, 2997, 2857,
              3964, 2998, 2858}], 
            Line3DBox[{2860, 3301, 3837, 2859, 3302, 3838, 2861, 3303, 3839, 
             2862, 3965, 2999, 2863, 3966, 3000, 2864, 3967, 3001, 2865, 3968,
              3002, 2866, 3969, 3304, 3840, 2867, 3305, 3841, 2868, 3306, 
             3842, 2869, 3970, 3003, 2870, 3971, 3004, 2871, 3972, 3005, 2872,
              3973, 3006, 2873}], 
            Line3DBox[{2875, 3307, 3843, 2874, 3308, 3844, 2876, 3309, 3845, 
             2877, 3310, 3846, 2878, 3974, 3007, 2879, 3975, 3008, 2880, 3976,
              3009, 2881, 3977, 3311, 3847, 2882, 3312, 3848, 2883, 3313, 
             3849, 2884, 3314, 3850, 2885, 3978, 3010, 2886, 3979, 3011, 2887,
              3980, 3012, 2888}], 
            Line3DBox[{2890, 3315, 3851, 2889, 3316, 3852, 2891, 3317, 3853, 
             2892, 3318, 3854, 2893, 3319, 3855, 2894, 3981, 3013, 2895, 3982,
              3014, 2896, 3983, 3320, 3856, 2897, 3321, 3857, 2898, 3322, 
             3858, 2899, 3323, 3859, 2900, 3324, 3860, 2901, 3984, 3015, 2902,
              3985, 3016, 2903}], 
            Line3DBox[{2917, 3023, 3022, 3988, 2916, 3872, 3335, 2915, 3871, 
             3334, 2914, 3870, 3333, 2913, 3869, 3332, 2912, 3868, 3331, 2911,
              3867, 3330, 3987, 2910, 3017, 3986, 2909, 3866, 3329, 2908, 
             3865, 3328, 2907, 3864, 3327, 2906, 3863, 3326, 2905, 3862, 3325,
              2904, 3861, 3020, 3019, 3021}]}, 
           {GrayLevel[0.2], 
            Line3DBox[{731, 954, 3337, 732, 969, 3349, 760, 3447, 984, 775, 
             3453, 999, 790, 3461, 1014, 805, 3471, 1029, 820, 3483, 1044, 
             835, 3497, 1059, 3386, 850, 1074, 3399, 865, 3516, 1089, 880, 
             3521, 1104, 895, 3528, 1119, 910, 3537, 1134, 925, 3547, 1149, 
             940}], Line3DBox[{733, 955, 3338, 734, 970, 3350, 761, 985, 3360,
              776, 3454, 1000, 791, 3462, 1015, 806, 3472, 1030, 821, 3484, 
             1045, 836, 3498, 1060, 3387, 851, 1075, 3400, 866, 1090, 3411, 
             881, 3522, 1105, 896, 3529, 1120, 911, 3538, 1135, 926, 3548, 
             1150, 941}], 
            Line3DBox[{735, 956, 3339, 736, 971, 3351, 762, 986, 3361, 777, 
             1001, 3369, 792, 3463, 1016, 807, 3473, 1031, 822, 3485, 1046, 
             837, 3499, 1061, 3388, 852, 1076, 3401, 867, 1091, 3412, 882, 
             1106, 3421, 897, 3530, 1121, 912, 3539, 1136, 927, 3549, 1151, 
             942}], Line3DBox[{737, 957, 3340, 738, 972, 3352, 763, 987, 3362,
              778, 1002, 3370, 793, 1017, 3376, 808, 3474, 1032, 823, 3486, 
             1047, 838, 3500, 1062, 3389, 853, 1077, 3402, 868, 1092, 3413, 
             883, 1107, 3422, 898, 1122, 3429, 913, 3540, 1137, 928, 3550, 
             1152, 943}], 
            Line3DBox[{739, 958, 3341, 740, 973, 3353, 764, 988, 3363, 779, 
             1003, 3371, 794, 1018, 3377, 809, 1033, 3381, 824, 3487, 1048, 
             839, 3501, 1063, 3390, 854, 1078, 3403, 869, 1093, 3414, 884, 
             1108, 3423, 899, 1123, 3430, 914, 1138, 3435, 929, 3551, 1153, 
             944}], Line3DBox[{741, 959, 3342, 743, 974, 3354, 765, 989, 3364,
              780, 1004, 3372, 795, 1019, 3378, 810, 1034, 3382, 825, 1049, 
             3384, 840, 3502, 1064, 3391, 855, 1079, 3404, 870, 1094, 3415, 
             885, 1109, 3424, 900, 1124, 3431, 915, 1139, 3436, 930, 1154, 
             3439, 945}], 
            Line3DBox[{745, 3441, 961, 746, 3444, 976, 767, 3449, 991, 782, 
             3456, 1006, 797, 3465, 1021, 812, 3476, 1036, 827, 3489, 1051, 
             842, 3505, 1066, 3392, 857, 3514, 1081, 872, 3518, 1096, 887, 
             3524, 1111, 902, 3532, 1126, 917, 3542, 1141, 932, 3553, 1156, 
             947}], Line3DBox[{747, 962, 3343, 748, 3445, 977, 768, 3450, 992,
              783, 3457, 1007, 798, 3466, 1022, 813, 3477, 1037, 828, 3490, 
             1052, 843, 3506, 1067, 3393, 858, 1082, 3405, 873, 3519, 1097, 
             888, 3525, 1112, 903, 3533, 1127, 918, 3543, 1142, 933, 3554, 
             1157, 948}], 
            Line3DBox[{749, 963, 3344, 750, 978, 3355, 769, 3451, 993, 784, 
             3458, 1008, 799, 3467, 1023, 814, 3478, 1038, 829, 3491, 1053, 
             844, 3507, 1068, 3394, 859, 1083, 3406, 874, 1098, 3416, 889, 
             3526, 1113, 904, 3534, 1128, 919, 3544, 1143, 934, 3555, 1158, 
             949}], Line3DBox[{751, 964, 3345, 752, 979, 3356, 770, 994, 3365,
              785, 3459, 1009, 800, 3468, 1024, 815, 3479, 1039, 830, 3492, 
             1054, 845, 3508, 1069, 3395, 860, 1084, 3407, 875, 1099, 3417, 
             890, 1114, 3425, 905, 3535, 1129, 920, 3545, 1144, 935, 3556, 
             1159, 950}], 
            Line3DBox[{753, 965, 3346, 754, 980, 3357, 771, 995, 3366, 786, 
             1010, 3373, 801, 3469, 1025, 816, 3480, 1040, 831, 3493, 1055, 
             846, 3509, 1070, 3396, 861, 1085, 3408, 876, 1100, 3418, 891, 
             1115, 3426, 906, 1130, 3432, 921, 3546, 1145, 936, 3557, 1160, 
             951}], Line3DBox[{755, 966, 3347, 756, 981, 3358, 772, 996, 3367,
              787, 1011, 3374, 802, 1026, 3379, 817, 3481, 1041, 832, 3494, 
             1056, 847, 3510, 1071, 3397, 862, 1086, 3409, 877, 1101, 3419, 
             892, 1116, 3427, 907, 1131, 3433, 922, 1146, 3437, 937, 3558, 
             1161, 952}], 
            Line3DBox[{757, 967, 3348, 758, 982, 3359, 773, 997, 3368, 788, 
             1012, 3375, 803, 1027, 3380, 818, 1042, 3383, 833, 3495, 1057, 
             848, 3511, 1072, 3398, 863, 1087, 3410, 878, 1102, 3420, 893, 
             1117, 3428, 908, 1132, 3434, 923, 1147, 3438, 938, 1164, 3560, 
             1165, 1166}], 
            Line3DBox[{939, 1148, 3559, 1163, 924, 1133, 3536, 909, 1118, 
             3527, 894, 1103, 3520, 879, 1088, 3515, 864, 1073, 3512, 849, 
             3385, 1058, 3496, 834, 1043, 3482, 819, 1028, 3470, 804, 1013, 
             3460, 789, 998, 3452, 774, 983, 3446, 759, 968, 3442, 730, 3336, 
             953, 1162, 1167}], 
            Line3DBox[{946, 1155, 3552, 931, 1140, 3541, 916, 1125, 3531, 901,
              1110, 3523, 886, 1095, 3517, 871, 1080, 3513, 856, 1065, 3504, 
             3503, 841, 1050, 3488, 826, 1035, 3475, 811, 1020, 3464, 796, 
             1005, 3455, 781, 990, 3448, 766, 975, 3443, 744, 960, 3440, 
             742}], Line3DBox[{1169, 1392, 3659, 1170, 1407, 1198, 3564, 1422,
              1213, 3568, 1437, 1228, 3574, 1452, 1243, 3582, 1467, 1258, 
             3592, 1482, 1273, 3604, 1497, 3712, 1288, 1512, 3727, 1303, 3620,
              1527, 1318, 3624, 1542, 1333, 3630, 1557, 1348, 3638, 1572, 
             1363, 3648, 1587, 1378}], 
            Line3DBox[{1171, 1393, 3660, 1172, 1408, 3672, 1199, 1423, 1214, 
             3569, 1438, 1229, 3575, 1453, 1244, 3583, 1468, 1259, 3593, 1483,
              1274, 3605, 1498, 3713, 1289, 1513, 3728, 1304, 1528, 3740, 
             1319, 3625, 1543, 1334, 3631, 1558, 1349, 3639, 1573, 1364, 3649,
              1588, 1379}], 
            Line3DBox[{1173, 1394, 3661, 1174, 1409, 3673, 1200, 1424, 3683, 
             1215, 1439, 1230, 3576, 1454, 1245, 3584, 1469, 1260, 3594, 1484,
              1275, 3606, 1499, 3714, 1290, 1514, 3729, 1305, 1529, 3741, 
             1320, 1544, 3751, 1335, 3632, 1559, 1350, 3640, 1574, 1365, 3650,
              1589, 1380}], 
            Line3DBox[{1175, 1395, 3662, 1176, 1410, 3674, 1201, 1425, 3684, 
             1216, 1440, 3692, 1231, 1455, 3699, 1246, 3585, 1470, 1261, 3595,
              1485, 1276, 3607, 1500, 3715, 1291, 1515, 3730, 1306, 1530, 
             3742, 1321, 1545, 3752, 1336, 1560, 3760, 1351, 3641, 1575, 1366,
              3651, 1590, 1381}], 
            Line3DBox[{1177, 1396, 3663, 1178, 1411, 3675, 1202, 1426, 3685, 
             1217, 1441, 3693, 1232, 1456, 3700, 1247, 1471, 3705, 1262, 3596,
              1486, 1277, 3608, 1501, 3716, 1292, 1516, 3731, 1307, 1531, 
             3743, 1322, 1546, 3753, 1337, 1561, 3761, 1352, 1576, 3767, 1367,
              3652, 1591, 1382}], 
            Line3DBox[{1179, 1397, 3664, 1180, 1412, 3676, 1203, 1427, 3686, 
             1218, 1442, 3694, 1233, 1457, 3701, 1248, 1472, 3706, 1263, 1487,
              3709, 1278, 3609, 1502, 3717, 1293, 1517, 3732, 1308, 1532, 
             3744, 1323, 1547, 3754, 1338, 1562, 3762, 1353, 1577, 3768, 1368,
              1592, 3772, 1383}], 
            Line3DBox[{1181, 1398, 3665, 1183, 1413, 3677, 1204, 1428, 3687, 
             1219, 1443, 3695, 1234, 1458, 3702, 1249, 1473, 3707, 1264, 1488,
              3710, 1279, 1503, 3718, 3719, 1294, 1518, 3733, 1309, 1533, 
             3745, 1324, 1548, 3755, 1339, 1563, 3763, 1354, 1578, 3769, 1369,
              1593, 3773, 1384}], 
            Line3DBox[{1185, 1400, 3666, 1186, 1415, 1206, 3566, 1430, 1221, 
             3571, 1445, 1236, 3578, 1460, 1251, 3587, 1475, 1266, 3598, 1490,
              1281, 3611, 1505, 3721, 1296, 1520, 3734, 1311, 3622, 1535, 
             1326, 3627, 1550, 1341, 3634, 1565, 1356, 3643, 1580, 1371, 3654,
              1595, 1386}], 
            Line3DBox[{1187, 1401, 3667, 1188, 1416, 3678, 1207, 1431, 1222, 
             3572, 1446, 1237, 3579, 1461, 1252, 3588, 1476, 1267, 3599, 1491,
              1282, 3612, 1506, 3722, 1297, 1521, 3735, 1312, 1536, 3746, 
             1327, 3628, 1551, 1342, 3635, 1566, 1357, 3644, 1581, 1372, 3655,
              1596, 1387}], 
            Line3DBox[{1189, 1402, 3668, 1190, 1417, 3679, 1208, 1432, 3688, 
             1223, 1447, 1238, 3580, 1462, 1253, 3589, 1477, 1268, 3600, 1492,
              1283, 3613, 1507, 3723, 1298, 1522, 3736, 1313, 1537, 3747, 
             1328, 1552, 3756, 1343, 3636, 1567, 1358, 3645, 1582, 1373, 3656,
              1597, 1388}], 
            Line3DBox[{1191, 1403, 3669, 1192, 1418, 3680, 1209, 1433, 3689, 
             1224, 1448, 3696, 1239, 1463, 1254, 3590, 1478, 1269, 3601, 1493,
              1284, 3614, 1508, 3724, 1299, 1523, 3737, 1314, 1538, 3748, 
             1329, 1553, 3757, 1344, 1568, 3764, 1359, 3646, 1583, 1374, 3657,
              1598, 1389}], 
            Line3DBox[{1193, 1404, 3670, 1194, 1419, 3681, 1210, 1434, 3690, 
             1225, 1449, 3697, 1240, 1464, 3703, 1255, 1479, 1270, 3602, 1494,
              1285, 3615, 1509, 3725, 1300, 1524, 3738, 1315, 1539, 3749, 
             1330, 1554, 3758, 1345, 1569, 3765, 1360, 1584, 3770, 1375, 3658,
              1599, 1390}], 
            Line3DBox[{1195, 1405, 3671, 1196, 1420, 3682, 1211, 1435, 3691, 
             1226, 1450, 3698, 1241, 1465, 3704, 1256, 1480, 3708, 1271, 1495,
              1286, 3616, 1510, 3726, 1301, 1525, 3739, 1316, 1540, 3750, 
             1331, 1555, 3759, 1346, 1570, 3766, 1361, 1585, 3771, 1376, 1602,
              3774, 1603, 1604}], 
            Line3DBox[{1377, 1586, 3647, 1601, 1362, 1571, 3637, 1347, 1556, 
             3629, 1332, 1541, 3623, 1317, 1526, 3619, 1302, 1511, 3617, 1287,
              3711, 1496, 3603, 1272, 1481, 3591, 1257, 1466, 3581, 1242, 
             1451, 3573, 1227, 1436, 3567, 1212, 1421, 3563, 1197, 1406, 3561,
              1168, 1391, 1600, 1605}], 
            Line3DBox[{1385, 1594, 3653, 1370, 1579, 3642, 1355, 1564, 3633, 
             1340, 1549, 3626, 1325, 1534, 3621, 1310, 1519, 3618, 1295, 3720,
              1504, 3610, 1280, 1489, 3597, 1265, 1474, 3586, 1250, 1459, 
             3577, 1235, 1444, 3570, 1220, 1429, 3565, 1205, 1414, 3562, 1184,
              1399, 1182}], 
            Line3DBox[{1607, 1830, 3873, 1608, 1845, 1636, 3778, 1860, 1651, 
             3782, 1875, 1666, 3788, 1890, 1681, 3796, 1905, 1696, 3806, 1920,
              1711, 3818, 1935, 3926, 1726, 1950, 3941, 1741, 3834, 1965, 
             1756, 3838, 1980, 1771, 3844, 1995, 1786, 3852, 2010, 1801, 3862,
              2025, 1816}], 
            Line3DBox[{1609, 1831, 3874, 1610, 1846, 3886, 1637, 1861, 1652, 
             3783, 1876, 1667, 3789, 1891, 1682, 3797, 1906, 1697, 3807, 1921,
              1712, 3819, 1936, 3927, 1727, 1951, 3942, 1742, 1966, 3954, 
             1757, 3839, 1981, 1772, 3845, 1996, 1787, 3853, 2011, 1802, 3863,
              2026, 1817}], 
            Line3DBox[{1611, 1832, 3875, 1612, 1847, 3887, 1638, 1862, 3897, 
             1653, 1877, 1668, 3790, 1892, 1683, 3798, 1907, 1698, 3808, 1922,
              1713, 3820, 1937, 3928, 1728, 1952, 3943, 1743, 1967, 3955, 
             1758, 1982, 3965, 1773, 3846, 1997, 1788, 3854, 2012, 1803, 3864,
              2027, 1818}], 
            Line3DBox[{1613, 1833, 3876, 1614, 1848, 3888, 1639, 1863, 3898, 
             1654, 1878, 3906, 1669, 1893, 3913, 1684, 3799, 1908, 1699, 3809,
              1923, 1714, 3821, 1938, 3929, 1729, 1953, 3944, 1744, 1968, 
             3956, 1759, 1983, 3966, 1774, 1998, 3974, 1789, 3855, 2013, 1804,
              3865, 2028, 1819}], 
            Line3DBox[{1615, 1834, 3877, 1616, 1849, 3889, 1640, 1864, 3899, 
             1655, 1879, 3907, 1670, 1894, 3914, 1685, 1909, 3919, 1700, 3810,
              1924, 1715, 3822, 1939, 3930, 1730, 1954, 3945, 1745, 1969, 
             3957, 1760, 1984, 3967, 1775, 1999, 3975, 1790, 2014, 3981, 1805,
              3866, 2029, 1820}], 
            Line3DBox[{1617, 1835, 3878, 1618, 1850, 3890, 1641, 1865, 3900, 
             1656, 1880, 3908, 1671, 1895, 3915, 1686, 1910, 3920, 1701, 1925,
              3923, 1716, 3823, 1940, 3931, 1731, 1955, 3946, 1746, 1970, 
             3958, 1761, 1985, 3968, 1776, 2000, 3976, 1791, 2015, 3982, 1806,
              2030, 3986, 1821}], 
            Line3DBox[{1619, 1836, 3879, 1621, 1851, 3891, 1642, 1866, 3901, 
             1657, 1881, 3909, 1672, 1896, 3916, 1687, 1911, 3921, 1702, 1926,
              3924, 1717, 1941, 3932, 3933, 1732, 1956, 3947, 1747, 1971, 
             3959, 1762, 1986, 3969, 1777, 2001, 3977, 1792, 2016, 3983, 1807,
              2031, 3987, 1822}], 
            Line3DBox[{1623, 1838, 3880, 1624, 1853, 1644, 3780, 1868, 1659, 
             3785, 1883, 1674, 3792, 1898, 1689, 3801, 1913, 1704, 3812, 1928,
              1719, 3825, 1943, 3935, 1734, 1958, 3948, 1749, 3836, 1973, 
             1764, 3841, 1988, 1779, 3848, 2003, 1794, 3857, 2018, 1809, 3868,
              2033, 1824}], 
            Line3DBox[{1625, 1839, 3881, 1626, 1854, 3892, 1645, 1869, 1660, 
             3786, 1884, 1675, 3793, 1899, 1690, 3802, 1914, 1705, 3813, 1929,
              1720, 3826, 1944, 3936, 1735, 1959, 3949, 1750, 1974, 3960, 
             1765, 3842, 1989, 1780, 3849, 2004, 1795, 3858, 2019, 1810, 3869,
              2034, 1825}], 
            Line3DBox[{1627, 1840, 3882, 1628, 1855, 3893, 1646, 1870, 3902, 
             1661, 1885, 1676, 3794, 1900, 1691, 3803, 1915, 1706, 3814, 1930,
              1721, 3827, 1945, 3937, 1736, 1960, 3950, 1751, 1975, 3961, 
             1766, 1990, 3970, 1781, 3850, 2005, 1796, 3859, 2020, 1811, 3870,
              2035, 1826}], 
            Line3DBox[{1629, 1841, 3883, 1630, 1856, 3894, 1647, 1871, 3903, 
             1662, 1886, 3910, 1677, 1901, 1692, 3804, 1916, 1707, 3815, 1931,
              1722, 3828, 1946, 3938, 1737, 1961, 3951, 1752, 1976, 3962, 
             1767, 1991, 3971, 1782, 2006, 3978, 1797, 3860, 2021, 1812, 3871,
              2036, 1827}], 
            Line3DBox[{1631, 1842, 3884, 1632, 1857, 3895, 1648, 1872, 3904, 
             1663, 1887, 3911, 1678, 1902, 3917, 1693, 1917, 1708, 3816, 1932,
              1723, 3829, 1947, 3939, 1738, 1962, 3952, 1753, 1977, 3963, 
             1768, 1992, 3972, 1783, 2007, 3979, 1798, 2022, 3984, 1813, 3872,
              2037, 1828}], 
            Line3DBox[{1633, 1843, 3885, 1634, 1858, 3896, 1649, 1873, 3905, 
             1664, 1888, 3912, 1679, 1903, 3918, 1694, 1918, 3922, 1709, 1933,
              1724, 3830, 1948, 3940, 1739, 1963, 3953, 1754, 1978, 3964, 
             1769, 1993, 3973, 1784, 2008, 3980, 1799, 2023, 3985, 1814, 2040,
              3988, 2041, 2042}], 
            Line3DBox[{1815, 2024, 3861, 2039, 1800, 2009, 3851, 1785, 1994, 
             3843, 1770, 1979, 3837, 1755, 1964, 3833, 1740, 1949, 3831, 1725,
              3925, 1934, 3817, 1710, 1919, 3805, 1695, 1904, 3795, 1680, 
             1889, 3787, 1665, 1874, 3781, 1650, 1859, 3777, 1635, 1844, 3775,
              1606, 1829, 2038, 2043}], 
            Line3DBox[{1823, 2032, 3867, 1808, 2017, 3856, 1793, 2002, 3847, 
             1778, 1987, 3840, 1763, 1972, 3835, 1748, 1957, 3832, 1733, 3934,
              1942, 3824, 1718, 1927, 3811, 1703, 1912, 3800, 1688, 1897, 
             3791, 1673, 1882, 3784, 1658, 1867, 3779, 1643, 1852, 3776, 1622,
              1837, 1620}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
         VertexNormals->CompressedData["
1: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
fKlkJdqTznrEU2wMfuEHw93z5qBXVNZEz68CFet+Vjj8cQwYL3CMJtrOwa/F
fxw3awC1BYZNeEmMg+73qhMD2+fg3bXzn26FlaOedf6U43R/Cm7bafvqnh6o
Ddi65IDVP2e+7vmRd6UWScdMJnCTe2HXDkM7t0NYvXHC9/tERg3aUXl385VN
/YBTuKZb/5sM2s9WeJhWsPXiKuR/ZP8A1PGWX0qpIoNGpJLqSwMciql13XTG
cBCkb5ziNn1C/n/qOtNoqvq3jyNDJYnKEI2GjEkSRX63DM1pQoUiKpE5VCpR
SWhSpKRuQ4ZkKkXiXI55nmUoOdPe+xxzRclw389+1tr/57/WaT1vz5uzz/4N
1/f74nw+EHM6flwyoRzZ/z8ezPt8XpUcyquS5/FI73dlP3wxGvfYSM5TGSGf
0lIRMg+sq3FLOMeArZ0+5U1ryXu7rMsLP1OKHl6i59V9Z0C2gMjI370DkLav
Y7HLM0BPdh+4oubPBN1yxbaFUQOgwbzhl+NDQymmbWleP5hwolHx+QXjAVhw
y7BdcH8JEuLzqoxSXhWLt4nvZzu64NC0wKp/ENnfzy3dsTG6ApE9lvDkdoMD
bjlzV2IY4i/SHo8Nl6Ps0XfZgQK9EMukGWKfhmCtc6Hb+K5yxLbNkJxd9hke
ibGCzZ4NAUtT79zrjD/9lRsof+V/fCs45VtRp3wrdmPRH0NNGcBUTv9+fAeZ
u2Z2XxlzAfSub8ZyXiUDnkwLeJ6dHYAs47xhie00dEBznqe0BRMcVArxeXkD
0HpqozNvfQlavL3rjTWdCUN9g+ueOg9Ay1T9j5Y1xegbn2/FlPKtcBNCNfNr
u8HIdnt8AtlzPwxOSr8l+/KrKLU8t54e0P8u+eo0bwg4hnkXBuzKkN/usYe1
g71wfptUz9ncIfj2b+bhlCo6Ok55JFX4PJL8HhZRysMSQNuitpo8L99r9u0T
WDEI/e+mtdRFStDMsmdHvsgw4VLndfOK9gH4fteIxRIsRiKLvRsVHzCB5RrE
9ggfAN5EjnK9yEc0RnlY3CgPSwzlYdlUcNFz9m0PpKkHHrYn9/kDlxu5Alfo
KHxCryqB1gsFPWduTpL7/KxM8vnk76V/+Blxys/I72dpoPwsy7Ti3P0GGOCl
5/rz7PgAbJXjOl1kFyGLMJnAtyeZILX/9JcVmQNw5IPc3W+/PiBfPj/LV8rP
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
RWiIj2v9m+Ja83tPtlLeE34edQLFo/4fnnJEZw==
          "]],
        Axes->True,
        AxesLabel->{
          FormBox[
           StyleBox["\"\"", 15, Bold, 
            RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"\"", 15, Bold, 
            RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"\"", 15, Bold, 
            RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm]},
        AxesOrigin->{Automatic, Automatic, Automatic},
        BoxRatios->{1, 1, 0.4},
        Boxed->False,
        DisplayFunction->Identity,
        FaceGrids->NCache[{{{0, 0, -1}, {{0, 
              Rational[1, 10], 
              Rational[1, 5], 
              Rational[3, 10], 
              Rational[2, 5], 
              Rational[1, 2]}, {
              Rational[1, 2], 
              Rational[3, 5], 
              Rational[7, 10], 
              Rational[4, 5], 
              Rational[9, 10], 1}}}, {{0, 1, 0}, {{0, 
              Rational[1, 10], 
              Rational[1, 5], 
              Rational[3, 10], 
              Rational[2, 5], 
              Rational[1, 2]}, {0, 1, 2, 3, 4, 5}}}, {{1, 0, 0}, {{
              Rational[1, 2], 
              Rational[3, 5], 
              Rational[7, 10], 
              Rational[4, 5], 
              Rational[9, 10], 1}, {0, 1, 2, 3, 4, 5}}}}, {{{0, 
            0, -1}, {{0, 0.1, 0.2, 0.3, 0.4, 0.5}, {
             0.5, 0.6, 0.7, 0.8, 0.9, 1}}}, {{0, 1, 
            0}, {{0, 0.1, 0.2, 0.3, 0.4, 0.5}, {0, 1, 2, 3, 4, 5}}}, {{1, 0, 
            0}, {{0.5, 0.6, 0.7, 0.8, 0.9, 1}, {0, 1, 2, 3, 4, 5}}}}],
        FaceGridsStyle->Automatic,
        ImageSize->{473., Automatic},
        LabelStyle->{FontSize -> 13.5, Bold},
        Method->{"DefaultBoundaryStyle" -> Directive[
            GrayLevel[0.3]], "RotationControl" -> "Globe"},
        PlotLabel->None,
        PlotRange->{{0., 0.5}, {0.6, 1.}, {0., 4.949999488928592}},
        PlotRangePadding->{
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]},
        Ticks->{Automatic, Automatic, Automatic},
        ViewPoint->{-1.963961, -1.03555567, 0.70428}], Scaled[{0.5, 0.5}], 
       Center, Scaled[{1, 1}]], InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(r\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(M\\), \\(r\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(r\\)]\\)\""},
        "SwatchLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.061250000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.061250000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.061250000000000006`] -> 
                    Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontSize -> 13.5, FontWeight -> Bold, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "13.5`"}], ",", "Bold"}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& )], 
       Scaled[{0.1, 0.1}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[
       Rational[317, 473], 0.6701902748414377],
     Axes->False,
     Frame->False,
     ImagePadding->Automatic,
     ImageSize->{473., Automatic},
     Method->{"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"},
     PlotRange->All,
     PlotRangeClipping->False,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
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
h7+YpXw2i/3kfBH+om6WH1M1jRbIdJVkCnFO/WmP5VA0vreLGN9OCdt47jBB
aeorEpSu9El1DT8RJ9cmCvk0FvFQwQtCqELo5AZPdifgxmprUlh042gR8Bml
gL2iS4+ony8TIAMyfVny+qOcScp0RAOV5A00Q94vyOU9ceQ9onN7km9rrIAx
XrrcJ/Fl/CQN7culvVQKe09wow9guIo+pip2fNPv8n2kcigXydTQRTcxYckY
Q0R9BE6QlC1wllyv6xAf7ahmYqzTyL+y+eSFckEF+UNVA13hL5OgByTzKb2a
+0Q8LaVOkroE7i3EpbKGjPbPVdpkwC5eDZ6TlqyfOBIXrld2UOZYmyX82HJD
xMYcGPeL+mXMHkRK7KeG9iKAO0pFLfEFbQmh76ZUhZcOepEvb4j6MBJ6Yf/+
CAd5vSLxOb0aOSBfdsQ9dqG9D6eXKsNIBAPZ98QcrbLNICWVL1xmw0habFPR
kzlm3y618MJaC4zXxWkMXngx70uCpvOFxfSWAb3YUcV284I2BIL+/s0TVunV
2GegvaoSTIcO/l9K6LyUcH1JBniinwErKerArOI+pSNMkamjHNiEka+cqaOc
aeiPXlJAaEV9cwDiJOrXV5bNVrQ/x9fhzunARa30tqJxoN9omnuJr7lp1Ndv
xS/Zv3kixhJViL2HfmuFFBllsV3q8FDV4UzsST6jSPyw7M1lgZvaLoV5vhQu
UTat6P+Ycl1trizUJoGA0yl03UVtqcDWVyBHpZOQR57que3LUpxNuaYnWYJ8
VjR5mPljrh6rlPl3LdDZTHVmroNFBT06W+7o7MSITjo3KtSF1ju28n9MUdYf
sfUfsQpZX3HWibYuw7nLBn0qnFUqlAOeAeKGiaMzOALdybfu6K6rthV1CHTe
iUPgc6Tl/8xWP283GuLUYO/6UJvLXMfEXkayR1Vrs1sh8gJfbRukIiLJE3nS
Tcu5dWqDTW4y92xKJ/Zgmo3y82zjTmlcJY5UiVAnKHVcUWqK6PZp880+XDFY
qMuBWi2KtS9Ox0apy3HoL1Ct5QoVD2+4QKGWYIRCMRHZJZZ9j9rzhCyTynbL
o48TFfX2Q3nVqt700lQx8Fxf9Qer6luovq1VjylaOedzOrcmlhJqN0s5L7W8
gWlKqr+k9lzgodT2tFVFw3+Buk7OZzUUDhDAix8Ei0rdqYq4aaVW72eSeseF
eum9Y489Vueotd/8RKHclJ4ulbvY0Xk0f9Yihz5lWj1NrvCV8ZTXBbJJjJo0
2VXiEikMtnGFXi35Tg7J53LTH5iWnPdLMRenC7XF8WzNpiEFAjOdj411i7KF
7eYSph2V7ctVhr5yqExiLcuwPq/QUr1To0zBHQs/i+sNFZdXatrb6IxT1v0B
d+r9JDkzvw1bOaRXe/35t6qqW6dXbddE0tKXyyH/y5dK5S1h8tGUOCXTCt67
1FMnpim8nG6cMSp1CTvpzk7uruBwYoGJpOHlWQpZ4lekgWRftCP4rTS7TAs9
obOt2+hZQit/7CY2HuUo8Fm+AsektsrbIQ/otye+KjdIgWDSNZBqy6a15M5M
hwT0y0ivl5o3eoq6PqOFWkTk4TmxiFVMmYgc0fnV9YUGMl8ToyZDeeFcdIsY
3dEtnacUexFyVDIV3f6YqGJx2LBo3e0RrJvr024IHTUt6Txbg8JILz+Z66Wl
PdA2+uycmLgs50fYv5xmwWVDnWoDf6ot9SkJjs/In2oTR0UTX0VjVdHJhS9z
IRaooNm2dnZepL2YhW/zXhqZaWtgPgMvvumZa09coL9FifAjHUh4+wxFVUFr
MGxzX39z0t+qTq5JpUkMh/RHirrClCfzSTTFMUZ2jqbOmqpvkHItl2B+7e84
M8vqs0BpkgNzlbbkKG099NeChrX3si8zhfvUFG43uSmUAFDs0Y6NrbwAbHEv
2qK24LRLUq7PI3197nVoc+JrNoryV4gsP0fiFTPYQr3TelIG2opmc/NUEdqp
rSp7Gjj6yKdmofT1UstwauCXwLOxWghn2TrqXHHUCRPYk8nnTtqJWcbPlgkb
xus2xfzbTfbP6qY/mut2sdf5qAXz01ZQpa2cPM0epfyaGrqarhn8nQ1HqcMF
dDskza7TqyWduPGdTAZ00FS7YlCqc7xAnSNV54SV2MnkXBI0nFwvtTv2tYsC
GFp1rWZO1Vx2Vbk1z28Pm2TTFgmP7U0pITPvRg1HAb2X/g8929z9kWLu7hgy
HiJ68ULGlOPLIozGchDf58zax/haJtX+3B5SNc/VEVRdqZZc9881rFyWxa9s
0lKbzzVtRcoc6PNYeBOpK+jA5GCNj1TjrNbatDZid+PLsaqdQ8pOKgiTe4Nd
oqKy2dU3QstV1TcofOxreVJrWWazq+Umt66VyJ+T6btKAFV79VmDiVFC49cm
fsj5osN83Y5IrVDwIfSqx8JCq1AmieJXsmTl5iZv5xR/fHCqCoQqV6DAoTIz
6X3iKI4dotqqKifPVIFSTq0zAmi8WCnV1pMRQHf4qFdtrajtBXRsNxqZFPXT
H+7XmG12WNVUexM3lgr/MVXnXkdThB7oB6oSmv25Zo+ns9NobJ+nlPXn2Ipu
VDOzOwE/SAfEy0oc6iycQYltrkR6jXyBKROvULnq+sEj1STy7Wg3cNJ+JxPR
XrwctB1JjGpK8ZV5grVSkU1XkU1XkQNLoeyaYG0v+x1TN6bLFzjzD9hw2hKi
6hA58iQkh/d3VDenNaRIOohdP0/2Uubi8oK5WGmVNPjBCRjW5mL8P/PtqGeS
ZsqFE4UqsBeLDpV7TcdcHu4ENwNRPWeL9kG50LpXqowHSpWU6ruw4wZ3mPYF
VBlK2s7U/UO5unexszr7RKzqVCerZuoxjnbT0pdSsy8kN+h9q6zTqN25P13X
SLee+eRzo1LL8TWZW6ia+POD4z7dYkJfXk9d1AzZlTL1tv7cnZbKRRV0UeQq
81rSf6xcLnVOamNLZ9M53C5rerADOaedG5omW/797GJO75jkk71V8yBHVW+e
sPa+OhB4hZJ1eq5ApXgi5vcNHcaGx4ySWAEBqPsQwsFIaRvOMkU7tfY/12TZ
o5eReq5c00luLnM1q9dKtc/4VXdCk5Ivtd5GtCKAUIvAl67ar+15tTMVj5Ea
ZOQvEORWUZHouBn6xtf0+4OsoEXJiP7tlNv8HKpjTu721c6cTssxK9VCjYex
fuNLTPH4xfROoxXnqEhM5U2QNzQJ3Yn+YOAGrGn+A8b0lXRg2l5pUxsahQau
qE0wO8nwkaFEpA2rAIl1exm44tJBKNyq7jReVb2uOnpNLQoDfYXu9f5FMlhI
vgvT7KbNU/a3mKislSkmeB2vNtVuqfLEH9R1alaG8qBGxDM/lyuQZiRx0udr
QmZ1jospCSR/TnIWDRPzlSSg06Y6M+FKdb2oiaqQFWf8K0or5yfXUhH7bKjt
vUQYV5K/fvaeM/vWNbc/SJ2Uy2ldLcPTnqiqCSwXeUXUPLHBIfGLi8RGCugD
doPkMMiMc67megGNztrqyS2Jlo/1iXci0zHnXIps3scTrWWn6gt6TPm5VlGh
B0O3ky7dfl6m7uYmKxjTE0o5TcZ/GsTIUxYlrCtyY1z/jgvWVOtDR8dwvtYd
HWP+Vt7zrFQwvKzWVyvSWONSrYMFauUcx5jV2mT9pdyjQqmqF1TtKZZCPjqf
xOOkT+3qov9Hfabtwiv1/pSvXiqcvR/ZpffRK/w2YfVKjuJ98K+KqTwjRY+U
kzf41RbaRD6fRUIvi8dVdODcVa2jZ0zpZei51TfkzdroEmvPVNcD9mijllFm
RXpZiuOl1Peh2eiS5VKh3cbW1VKXYONuq+XKIiLus7ff72ou/Sso1stp+P14
L1wX3e2XtWU0NVd8jW2QxugOZe7JXFwRa1pN0UEysqflodXLaBJdNVI2JlVc
OYXqhrnqOHcB5UF3UBl8ZEyKgrADB0vJhyIdXTaXaZoXD1K/Up547Gh1qyrQ
XYxVvBe3qtLWVSmfLvTKKyz6DKzplXN+3GdSrIFOy8rJMepVKze5eBHsCxtK
7L8fql0SLef+0KFQZxzrOzYTpTLxdnU5FKub6RIJHp6NUCSR2JVQmsmQdmHn
cHes2oTfRBdfgQJ51/yOeV4mbZJIL5uE/rq5KDk1JhE/X5KHPbn2YXb3m0JR
I/AWBsHILufm09bLaJdGwD6wbD7npc7w27N8xY40aZVN234Fe31CkfEPU92O
oNtytsYLDif1QrukuC9Y0mLA/CqDFluavZGI9+VKvCt9xIvZ2+VcUPFQtT3n
V92UxtxmrugQSxDJ+rr6Bgys6/BSncXE25f4jLxvqJMbndl7ghsYIcHMbvPI
U3iyqts551bq8pU+dC6qdjRI5tVT/w8785s0rax9WIfAf74ZiAkuCDxCgKY6
xPIO7Kj0BaQx7Fy6ZrfouJoOnLuaNHDV0IHIuIIIswI74AaRJX6VJiIoHeBY
7oOIFyTP+vABlu/Jjgz0FRZiUmjf7ZnSc6kjdZozfZMgYks1iOmlk8aY3jZN
+x4XJdbitjtseNusbTcvIkKg1bPkihEq5DgUoBjj16JOe3pDz5ZrSfsDUv/h
YucTMgQdrdiL3AjMSt3DEsir3AhwBI0YbJ1NRNcpG4VudsSiacuOdGkBxmJZ
dY/Oj3ppQPq0S6aqc7yaOnSQIi2YezQ1tqGvUxUCybT+k3So1odlh/ECrVeF
o0Va3/K1vgStlzxATvjvUqbz/TpxWdl0kJH7YnIAEiscwigQ5RWUQD9HbElO
y03R6eDxq0lNV1mYjc+YqcYlU5IpfNCd8lxxtMqyvJHm/ag777NG5rkCAHN/
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
umWOpvqUz5OY66Sto+VR6LHevQsrh0HCwLqp6qmO0j2PyprVcyD0uuLPcD5i
zQHCyICQ2iJoch/AbwdWCig80CoeWme2AyMg9qLv/U3pNZjzTahZThUjlh5q
+zCSeL7cR+C8nvK4VJdwqi5bao6oSWXL81SdrqvG+gzJn5fXjaf5FYVJ6bZz
pqayzcv/QQXH2e8p2JoaTMG2E1mlYBragYkqWFSNVXh1/e9+jO7+FLF33LXq
3Lzg+XuxDiF3r++tf1+vNCzaBwxgB3pjeq/hysqJVTjvLajpecwNonpbV6IP
1Es77ug8Vqv8WEfNBzk6+jao2foMKjUXmfrXYUIe4BJvyFJ2FErkqV1R2x6l
+Kmj04nqVGhfAnNl/KHOZi+rv6DdpUezM53Fw+4lrM/VSp+iU3jp9kREb7M7
2IOUjMlM8HbBoYc4Kn30I1RpWo2YqfTpoqpUtqF/VvWvnD1PrwTwA2qMD2zo
HG6Gqut4MN+uhiIn5y2x9fq1MYe9J+9oRc6LzziotqVNMqeFyelYDou2f8N0
njpqxTRNjD5S3coTW51HAgTtfRK/LdOyPcdwVTVs/vQTd61h3t17hGRIqsNd
cMEFULdlWKyIWqmWrfwoV62Ss87DAwimirzIm3lKV8WZeBAaspIrNM8TNzfD
hZptv1Sr1rchbUHubQ0w6pvitu6jst8AxoSnc1flKxWDpztwo/DquoGiAewt
j5XUCaP/TOFjnXrmbX13n8KrOVqkwMbb2aJ3vI6ap9dGyZZkPaIPArxGuVUI
MNRfR5o70DqKn/qKT8W6bDcc0ij6eirlghPWHK0DJ6z7XK0eBWSZ1c7uTusV
MhIrMZV7++vKtiY7J9XooxIK8qazVmf5T+c8nq1WUHmb0p+lKnmeo37ZKdM2
Ia7J3NGl1WCshBsJLbskdWCFhlMmr1tTIl9eMKO9yW+sDpcNJhnRtqVYljMl
S7XNfRogocRNoK86quxuR+s36syV5iVBk7YG6XHNlpXhZc18psxqKwqblZDw
D+9GkZuqyOyJDODqMif9RP0wq69K55zoMOmPFThXBcImLznqsozYRHU2Dt3o
Sd4t9iLAFWbZbUMhi7HVwt6bDvWaOyydJhCvqpIu0B73a1nnrNeBvKYmmpuP
5IHC5iYZ4z5nN/p5NKu4mGikHneiWScMJ7InnTlG/6dbUj1NAoe0uWKIxQ6A
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\
\>"]],
    InterpretTemplate[Legended[
      Graphics3D[
       GraphicsComplex[CompressedData["
1:eJyEnQk0lV/7980zmUpJE4poTrNsIaVShuZJ0qCQJipRkaRE0SCaaFCkIkQq
qSj9EEoyz/Mxz7PXOc517f/fed/1Ws96Ws/n2es+1/1x3Pvc333d+0zZa2uy
n4eLi+vWKC4u3qF/A7e+jHafYaHVLXBVZ/78MnLM5njEuNJqcniWlt9Ug8cE
eJ79hPXejTUktDpnUNngLfInT7L2r6yqJcqxsvOjbT4gL03x1jX8yyC/ElUi
lA2+In+VrDMnPrGOXJ2VmGKT9x35uDMFJ6MS6om+797KdzbJyDVfb9quV9hA
uLmYP+nIRz9Ok9UZ1UTMIn9dUzb4jXxA+N/o70lN5JPlg3EGPpnI9/bGZr4P
bCbjJ1gH2eRlIf+1t71dNaCFnMlYOt9HOQd58gyuiZP+ayX/LgnHv7PJQ16x
clPz86ntZMHS7HV57wqQB/kfkU2L6SDeDUE5g4NFyO/KfVcPuNJFwDNjvG7J
ignlRNH1QK3i/Tr0DHyzg36Y25AH8AzcMCVN6+rfBvQMfKJpR6FeXiN6Bt7Q
mlVXebQJPQNPm9u+7GFPE3oGHpe2gTvzRjN6Br4ydk/JzSUt6Bl4Y0HghZqe
FvQMfJWK58Xi3Fb0DDzL5b6Xa1EbegauVmCgXyLRgZ6BpyiO2sBj24mega/W
PmDYyt+NnoFPU/xZ8TmnBz0XzOk7byRYQUIdQjLPbm1Cz8DThNRKk4Y8gGfg
AiXJZ3yHPIBn4AWNwtqtk1rQM/C8Kbtzql63oGfgXhY6tRd0W9Ez8POBc+T+
K2tFz8CXJT3mS7vdhp6Br0mQ3nLPrB09A1/i0vN26aoO9Az8ZsOfjzEmnegZ
eFn72HFT3LvQM/BwV13r8/Xd6Bm45+XU7UXuvegZeE/tnCvr9vSj57SVURPN
mivIHM3Zy3b6tKBn4LwO890PDXkAz8AVHqrwq1W1omfgfLcvbQ6+2Iaegeuv
/TG5dWI7egZu++qAkMzndvQMXOhFQbjs4Q70DPyBStAX3mmd6Bl4zNil+Yyu
TvQMvOKgTFB2dRd6Bv6KO/Tb395u9IzH/+2U07CoFz0D1/rBc232kz70DHxC
SuT5J7oD6Bl4caXbjJejuLTB85ftRz7Z5FWSNaUZjK/9begZ+LG6DZ4L4trR
M3CJMx58nkc70DPw1ycH2jPlO9Ez8NxkRYFx3zrRM/CJVsdz9tl2oWfgvOSg
bMLUbvQMXE7j7A6dum70DLxsoaopI6kHPQNvnl/96L8vvegZeKrcgkpGfh96
Bs6T5v7f9skD6Bn4eP1dzYo+g+gZeIbGnUGV+1za4Bm4lMziFPtr3Og5wlZl
p2NiFQlIejw9/n4negYe/+G6xnKbLvQM3D1V8EP6rG70DPxSrau5W1U3egZO
Bi+kHHrQg56B63XZBbht7kXPwMd/LXCuHtuHnoEbG8wbfa+2Dz0DP+5QPxCc
0Y+egQvqXCmbnDmAnoHfu3b+oGjXIHoGvlvpmW9sIJc2eAZ++nV4o8Zubm3w
DLxsl6KXgwYPekauorHSW4UXPT9zLe65+qaalKx5u2jfsR70DPyhLu+XGya9
6Bn4os5QK37lPvQMfIHJ9PxURh96Bj5lRcu79jf96Bn4lTDnAHf7AfQMvPOa
8XKflYPoGbhjSf3Y61Jc2uAZjzPJUOr+VS5t8Ay8xp43t12SWxs8Ay8rMFz5
+Dm3NngGHrvm0NTnxjzoGfi7CJ91ItK86Bm4/ChBzwwGL3oGPsOU9z1PKR96
9vVj/tSQsATJbZ+d+tEz8LdFsXbaRwfQM/BPxh7blpkMomfg4bznMgtkubTB
M3Afe13XA+e4tMEz8NROE69P1Vza4Bl4oFNNQvVmbm3wDHzrgG5PfTI3egau
cfQR1581POgZ+Pmfi0MeZPGgZ+BnuAx/mh7nRc/ArUTHzemdzIeegfsV54T5
VfChZ+AG9ikTFnzjR8/A47/ONPjzUQA9X3ltsvjFxVpSsPpgdZM5lzZ4Bv7b
rmzNrHIubfAMfP/9HIsvu7i1wTMe560bf1gGN3oG7vRGhYdLlwc9A7/u3q0e
HcmDnoGbaizZlDedFz0DlwlWMjr+jBc9A5ctaG9wVuNDz8B9v9fxSn7kQ8/A
K3esNFfcxY+egeve1MyJkxRAz8A7947SYuQIoGfg+l96zF99EETPwE8+XSYn
+l4IPZ/9JvrvnQ2DZAoMNNUr8qBn4DdKxr91eM2DnoHzuPr3tc/hRc/Aj5e/
e7z/FS96Bq7U/co+bRofegZuFvNxzZIAPvQM/MDYyc0vFPjRM3CXUaM1lR/x
o2fgHTez+8PUBNAzcKH7z4U2fRVAz8D7JnyeNeaQIHoGPk5yp07PFCH0DDzI
8sNowSYh9Ay8coL8WZ0sYfQMfOK0KL23/0TQs012gl3iljoi819mVSEPH3oG
XlUs4SN+lw89A/fwvHH3mxI/egau//1OqkAwP3oGvtN5N2/BkAfwDFw2Slls
XagAegYetmVa7LY5gugZuINZQJForCB6Bh71NW295Toh9Az8+anmnJO1QugZ
+O2TOqaLfIXRM/DEN4PXojaJoGd83UkHtrWriqJn4P3v317tkxFDz8B97BRb
08eJo2ezeifZzBX1xCb+REMyjwB6Bh4aqCfWGCiAnoH/rdTdNm+RIHoGPtPt
9fN7iYLoGXiX3Zefc4yE0DPwC6HvvTtzhNAzcL7JmRnt+4XRM/C074Y753YK
o2fgir4WvGE3RNAz8FWXTfxOLRBFz/i6nluaPKtF0TNw2YA3uV2hYugZ+Ooo
X7W4S+LoGbj5t3Vvy+wk0DPwJ/GierYXRqFnY55FEaXqDSRazmLaJyUh9Aw8
yniljkqqEHoGHvlJc88aa2H0DLzP2M1kBp8IegaezmfG+O0rgp6Bn0nh7ddV
E0XPwBc9Ct92KU4UPQPfdOLZn/tbxNAzcDmisPxGlxh6Bh7fZWK5/6k4egZ+
546biuJuCfQMvFiibV2K6ij0DLxF3fpvJK8kegbeOj9G+MI5SfQM/La/Y+ga
ASn0rCvXZNw8upEk9auFxx4QQc/A/0302xQnL4qegQ8S3jSZBFH0DPzKlqDG
+P1i6Bl4zI7PV5J5xNEz8EwdD9slD8XRM/DJvKtOSC6TQM/Ay31mH9ycL4Ge
gVtUO0+QujQKPQNvcVyuoaQgiZ6B/y1UFz/nKIme8bxuhfAoVEiiZ+A+8tn9
57dIoWfgYbW/q2b8lULPwB0vvA9+ZiaNnpfOCG4aHGwk5wJMw1JSxNAz8KaF
SQc/eoijZ+C37k36cYdIoGfgbxPuBJgzJNAzcO8Xh78r+oxCz8DfT7TmPzpe
Ej0DT9OUCNhwRBI9A381fanC/G+S6Bn4qT0SFg/GS6Fn4Gt2Bu+SOiOFnoEb
353eLlUghZ6Bv7j+SlrRQBo9A7f/ZPooIU4aPQPPvb/U1ZHIoGfgPS8uhKSk
yGhXvBdImWbgQ457V3ovfVFGiuUFU/r0GJh7AG9cvKFSILKWwPi4wHWBXVcb
idr9L2W3WkXx9wU8PFI+wOi2qLbFLXLTJq8Qx48N+GIyLkUaOdQT+PfRnjOu
tB7IFddYRe3fYF2DrwvjN5svuPVvpjieFxy/++ojy2gZGe3cdN+50w1cyMJ1
i2vf2ZSRiOigSlnJWgK8r7JntWNiI3EzrOucsUdM22HFiXfvbIqQF8/pNVq4
VgbPC44TnJAYYZJUg8eBepZntzR+7KfzIBxnx+xR3gG2tB44r63zzDXUVWvQ
M4x/1Prfn8bZtB44Pt91iXkLXshoc7F/5rN+ykhkkn3cI/ki4qNsMPSfxwS4
w+gav+VXitn8LfIptsq7rYJKSN7Qm+fd0N8F8B3+KUWlNaXs8V+RL4qP//1q
azlhDR/6uwD+Sbi49m9nBcll/R/JyLkChPP3pVSRgUHmTxpygVCF7fvyaog3
6/i/kZdu7hpbOL2OKDHx0N8F8Ac/z6bkfRyar1ivm4X88RjdWxEpTWQVq9Ac
5Mc3nW3S29tCcoYLRZ64ICszaEobsWKdcAHyyet0x+8W7yDDNouRS8x8+6BR
pYuA58wVEzKZuevZ/KDHt0tK0DPwV4K/vq5pL0XPwFf9XZDtq16OnoFvOfLp
jtuVCvQMnNGr+3aybBV6Bi7y/EWhbXo1egaeePe/NKdvtegZ+LQe9yUbW+rQ
M/BlbV/T+swb0TMeP1t96CNEM3oGvlP95ot2jxb0DNxfSNBEUaMNPQPfwHfq
TLJAB3oG3vv2d5edQBd6Bq4eLBwStKAHPdsZCdoxc1fz+XX3/I+Uo2fg221c
9NTuVaBn4A90xX4FMyrRM/BFRZZ1ivur0TPwBYdOmT4Sq0XPwB+JyEWrVjHQ
M3D3umnJSd316Bl43/hvgQnKTegZ+KCISO17m2b0DDzz35axBrkt6BnHj7kv
0Gndhp6BC+367rVatQM9A7fX+n71q0QXegaetsEjs0axBz0DvzeVX1/3YB96
HmPWPJqZu14+2DKxdWEVegbep1d//KhTNXoG/iDG6+aCmhr0DPwEI0pj3XkG
egZ+XUBHJE6vHj0D758nnXRLqxE9Ay9L4ZGqj2lCzzg+vL8iubkZPQM32VXz
0WpdK3oGfsgiytY4uQ09A0/aapzNfawDPQNvzwhN59buQs/AT1lEz8ta2oOe
gf8N3JPNu68PPQP3nXL33qi4AfQczTpcJTl8KuD8/OW16Bm4pGd7YPhDBnoG
/mXeU8e0afXoGbiHt8e3O7kN6Bm45qGVt93NmtAz8HXX4+c9tW5Gz8Cd0qbJ
Kvm2oGfgxnEHZa6WtKJn4KZNx0V2r29Hz8AFexb9USruQM/AW2yDVu3x60LP
wB9Wvlpx17EHPQP3all+z+haH3oGvlZVf5ZE8gB6Bj5LYkdtyAMunAe3OiZu
YeaunuYFUk0X69Ez8LF6LlNduBvRM3D9bL+GS6ZN6Bn4wEFL+2TNZvQM/P1+
BdcxpAU94/j9z5oZO1vRM3CT/pa76Xfb0DPw5fFtpgbt7egZ+Epd/77ck53o
GXiT/B9rEflu9Az8W57XuZ1VPegZ+Cr5T6Kbi/rQM3BuK8OGs3yD6Bn4snC5
C8Gh4LMYud+aYPE5Tdzoufvqmy5m7qox9Odb6NaEnoHraXxSXbaxGT0DXzbW
x5UsbEHPwANMFrocnd2KnoH3nPLrNdFpQ8/AUxRe/md1rB0943H+bv9JPneg
ZzzOwrsZprO60DNw878mn2Z86UbPwHeudDiwwaEXPQM/Pn4gSHtnP3oGrlaX
uvXSoUH0DJwnqE7N+DeXNngG/qNKUFNCiAc9A39+KWyd5hZe9OzPzl21ijZ4
+h5pQc/ATzqWakqtbUXPwJ23zgop1GxDz8AbBJXeuOq3o2fgZFLYVPfDHegZ
eN+8xCqbl53oGfjzf8ZpsaLd6Bn4r8CV71o9e9Azvu7UG/YPNPrQM/A7XZNr
NXkG0DPwVa+rajd3D6Jn4In1h6YvluDWBs/Aj1+t7RdYxIOegVufqjfbfpoX
PeN5nTv88eQfPvS87MXFpczcdbLvGQUbhzb0DPzfGeUzngfa0TPwTWP3Xnll
2YGegSsLKqqYXOxEz8B/5JrO4HrfhZ6BJ6hUHdcU60HPwINckjM9zveiZ+D1
55vUT4zuR8/Ap0auNDmVPoCegVdtK7jhtY1LGzwD/3hlUmybGbc2eAaePr/E
O8yRBz0DP6gof4kvnBc9A/8+6SvX/AE+9Ax8Xkf6sXP7BdBzPut4DDL+/WLr
4Jcd6Bl46Et7wZ7nnegZeFvW5HUdsV3oGfg55vxV1Y2egf+afnoJ/+xe9Az8
kAPfnSm3+9Az8H+bPvD2jx9Az8AfGV3bqfB9ED0DDxyaxXmSubTBM3CVsw/G
T/jBjZ6BK1acXRiYzYOegWdd/t6TzsWHnoG7z7T726DNj56Bn2Z+fPAXQM/A
60IKnAfEhdCzE/OyvaWOWCdcCLrD242egc/1TpEKlOxBz8AfyexW4F3Qi56B
k2LlgBUn+tAz8NsekqdKUvvRM/CpIZJnD64aRM94HEsR3RnHuLTBM3BPA4H3
9424tcEz8JXfTlxbpcuDnoE/e7RGzXYNL3oG3vnCZXDTQT70DPx0sMwZrXv8
6Bm4rVU7r1WVAHoGPv79JPGJhkLoGfiPnVe5/VOF0fNE1g1MPdm4eGX7uYu9
6Bl4cPC4rymBfegZ+B1DceWJ2f3oGfjTmFHtnaqD6Bl4KHG/bLuWSxs8A590
b3DqDGlubfAMvCamQqethhs9AzexmLdWJJMHPQP331fwMiyDFz0DF7xcmDG9
nA89A8++NVMtRkwAPQPftPXrlIfrBNEz8Lh7t6ZOfCaEnoFvnn7/sYOcCHoG
vi85nb/jqSh6/lyqHsfMXWVvnXEJnTGAnoFvOGms82PnIHoGLsrj/T3JhEsb
PAPvtLKZmMTHrQ2egc/5GjX6aSI3egbe8ct83KM7POgZ+I2dh+70Ds0v4Bm4
1oKE7l4bPvQMXF/pcFipPT96Bl7VZKLScksAPQM/PPTx0/qnIHoGLrYxRfj2
aGH0DFzu3LoNrxxE0DPw72ENQl3dougZ+IF3IU+ib4mj5z3M25fRjeTYS6GP
Ghe4tMEz8Dkx83fbTAFvb5HPzPsRb5rGjZ6Bvyz8aKTmwYOegTdcEzk7fzMv
ega+JOxFaPhcPvQMPEX6uknVRH70jMc5F5UzZpIAegZeFCfzxmW+IHoGXnU/
kNjsEkLPwHXLNneNfSiMnoFr7lTXT+oQQc/ApX6PufPJUgw9AxccJbVpWbs4
egZuwbwdeTAKPQ//NLHvZ3jQM3AvL5VXL0J40DPwjOanozft5UXPwCXahm60
VPnQM3B3swspX/v50DNwl4HUNqFyfvQMnHn3tTNfAD3/rzqrBdEzcOHOPx8X
CAmjZ+CP1yTM1tYSQc/ABROTEs09RNEz1jMnh5HfJIaegRttqR86NQn0DDzf
eegE+CTR8/+qs1iS7cGHuC5lfhApI9O0134+MqcE78eBO2w8Ock1DHJRHxLW
xfwg3kjSghlXPnvR+x3g29ZeP2GyHK4PhTh+oabsth3po5BDPY8MVfVfH6X1
QK542OHhZltB+rowftOVLv4kUx48Lzj+4yXK/+I3wXFc2PN+GbE9qXkocTsc
x4V9v9ZITFVnppV+h7/HIuRhtw0y/9sriecFx7Fm5hIT6HGgni/73py4OJ3W
A8d5KrPy0yl/Wg+cl4rDm+AqnyL0DOPv2HK1tz+g9cDx5x0/ll36nNYDxzm6
XOTfk6N/OHJs4yk7Jcw//OXIsfm+lhmGn8jmyLE3n3PP3/EgjyPHlo6ay62q
WcSRY5/da+HcEFzCkWPbusnJTmkr48ixP7er7rx+rpIjx843E+1XWFvDkWNP
PDnP/9WOOo4cu71E6p/y20aOHNss1Et9/otmjhy7Wbe8UO1+K0eOvee67hZG
VDtHjm15YOino5Mjx75700i0d1sWR47txR/7b2leNkeObb5r8R65tDyOHLuw
+y1jy5Ii9Ay85r57cYlXCUeOzav1QEYqvowjx743ymPehHmVHDn25C+JxTWV
1Rw5dh33ly/bixkcOfZx56bTppMbOXLsi51lmTs2NnPk2BJOBWejlrdy5NgC
wRMvqhq2c+TYSqbmH4MudnLk2GNMzbqnlHZz5NiLtKt0VlzN4cixM39JRhzR
y+fIsXdbz7qpY1/EkWOnf5AZ/dW7BD0Df/v8mFn/8zKOHHtBsHLKu8EKjhz7
u23AQIZ/NUeO/TVkq/+8swyOHPu28Bedj48bOHLsXw+CDIOFmzly7CmnY55Y
V7Vw5NgnGBva/RhtHDn2WeZ9nFwnR45d3tuR0X24myPHPrzagUuyupcjx7bk
flP5hq+AI8fWWbZCeGFPEXoGfm3zH5WF70o4cuzs7RZcnm/KOHLs2m0Jc3kZ
FRw59gzew2aOh6s5cuxO/qQZ+bMZHDn2RymT5QLLGzhybEbtcvnGn00cOXbO
hfxcpXstHDn25sda82RutnHk2ONVJra8ftvBkWP/rtSoq+7p4sixF7zXbHlr
3cuRY7fZNf4dEOLMsZ8w5/cDxegZOPP2umKwBD0DH7qZHTyQW8aRY49l5gCd
dP0LeIh0s+iNbdUcOXYN8z6Xm8GRY+vOHZpIWuo5cuyralKfuXybOHLs8tKw
Z6+3t3Dk2LvGmcQdXNnGkWMPjc6dsLWDI8d2Y36+utnFkWP7TXTev7q7hyPH
9ok9fCrgSj9Hju1/qfdQoSJnjt21U03U/ngpegbO15u9b96McvQMXH63kavR
9EqOHPvBAj7xSCu6/gW8Y47lY+32Wo4c+/JgY1XOj3qOHHvri8vx4cebOHLs
ZuaFXqWFI8defL95ghVfG0eOXXuHmOgKd3Dk2G/CtTu3L+riyLFXJLwufHK9
hyPHNgzSzR0l08+RY3vNfv/hxtdB9Az83719atc2cObY8WN6ltx5QdcZgRsW
57g8uljJkWMf5D1udf1pNUeOfXr2Ql8Dcbr+Bbxcxj84/HM9R47NHyb05O/u
Jo4cO7REUMiTr4Ujx75l7/q3KaOVI8e2019c0PKjnSPH7lUtaHKt6uTIsUvb
Z5TendvDkWOnu5a4TH7ex5FjX3wV+VTcgK4XAP+tFCY2XQx80hzbfvSGnMar
POgZclexoU91y0XoOiPwPTLCc34K1nDk2KnLxxyKN2Rw5NiR/OSzQGE9esac
3LO3luxq4sixE0Zve3G5pZkjx57QduxQyptWjhybVfSddo4cW17q03LZoE6O
HFt5cG9bT3E3R46dGPiy/dmqPo4cOy7dSEYwb4CMzLFz57qNEvrFxZFjzx23
zi5nJf0cjufL/Jj8l64XYN7b52sh5FeDnoGbtGZNXhdL1xmBb7V+NffCtAaO
HDvM44dCgm0TegZek9FZ/6S1mSPHdt0zZXfGo1aOHHvpqAEtLbt2jhw7JmrV
3vyTnRw5dpR6jN+DR90cOXbhauHoEx10XQZ4XXmbh5HDABmZYydYybdL3+Hi
yLGXOH7JOC7Aw5FjB11PSYj3ousFwBu9x0bbzeZHz5C77qnS/3Fzcx1Hjq1e
FCGceL8BPQMXY94v323iyLG/m6/dFSXcgp6Bn2IurD5p5cixMz4PzTAH2zly
bNe9QzPbpk6OHHv1UJUbbbs5cuyhu/GhF+4lI3PsuAVCNz+p0nUZ4Kz16/1c
HDm2BXNCTeXmyLEfDN3/zlrPy5Fj9zwc+j+q6HoB8LXMjxV+dL0ActfL7ZON
HPUa0TPwAXn3DZbZTegZuLjUB4fr/2OdEfgTDYuzzz7RdUbgJ3ctVbp/pJ0j
x55p0aO7f00nR47tPmHXmxZjuv4FfPY+hUUL3XrJyBy7WKIldEp1PxmZYwf0
rD1mqsnFkWNfYt6n3OfmyLE7aibUPpbl5cix0z9l+QU+4+PIsSt3M1LSN9D1
AuCsz10ydL0ActcFumu3zZ7XjJ6BH1J//R+/Ywt6Bh49PyF0fGMrR479a/6q
jL3X6Doj8D28zcKpGzvRM3Blh7Oq6wy6ycgc+wfzPuUwXf8CzvVx3G6jWLr+
BVyLmV8pcHHk2A47ugbPneDmyLGviJQcFyrj4cixDW5VpR6z4uPIsa+XV3fP
FxfgyLGXVH0p+pEkiJ6BKwy9PYMe0vUCyF09+jwyGHl0PRe42dDHN+GlbegZ
uDczD/zajp6BpzA/6NjTdUbkqpv1NbZ0o2fgSzQ2TePb30tG5tip7pVqEwL7
ycgce/xgic9iAS6OHHv0O9O2LlNujhxbfdOzx6tjeThybM2kCLeAJXwcObZ8
744rZ37zc+TYT3Icbq67JMiRY7/aUO/pYyKMnoGPM7hhnrCUrhdA7mqYJcJY
EUDXc4Fbvh+6I5TpQM/AJxhPyOJ724megU+32+h5zomuMwKf1x84L8CerjMC
b4//7LvjYT8ZmWMr3D3o9bh9kIzMsee8mn4yQoubI8d+Z/twmeE9Ho4c+8Lg
ETc5KT6OHHv36tPLPQL4OXLsOUMfS6esEeTIsZMjX9w0kRDmyLElwq7w3a2n
6zLAU2XkLh2uFkPPwz/s3PUCXc8FLjB0O3hWqAs9A2fdx33qRs/A949peH4m
sBc9A2d+zCyKoOuMwAs2DH2g6aDrjMAfMfuLNLj/7zn2ZR6OHLuyaN31+BZe
jhybmU+anObnyLHfMgPusYIcOfaaXVHL0n8LceTYKZ7MP2ARjhxbbnLEUeIP
Pkfk2C8kOHLsaufzs6O5s/B+HPjdQ8Yqz/IzOXLs80/dHg6s7MDxwOdMPCH5
/BrMdzTH3qAmHGEYL8aRY/tHC5j7PBDnyLEj6uXdrrnT14XxAUMTTKgWzcfg
+MtcU8ubEsU5cmzDjqWLtofBcWiOff/vCVWZvdBfQXPs6qHPn+fD6boVHGfV
bXezC8r0OFDPQZmr3q0FHSPuBxuJi9CDawcWSnDk2GWmPSt0uv9w5NiOHtrH
T/DTeuD4eYz86vIpEux6AnB/hvn2HtMcHtWzx4Vhv/e1ix9MtwbXIofxe1S/
Ghp4N7B5DI63e/1SX8SRgRzG85yYnT3xTCObx+N4aT3ht26GdchhfHpVXrDe
bFh3SsDxdZ9ilHZOrUcO44vzJj33eArjk3D8ldsPp48TbUAO40/9/huiPrmZ
zVNw/FG9R8brBKBOzv1MYDwcZ4tQUy/jWTOOH7kvxzCn+590qS3zvR3ehBzG
K83c8CuuFMbTfVGetV+vdrRqRg7jj0U5fS993MrmdL+UEq34DZ+1W5DD+Obr
hZI/nNrYPBvHH9ONk1Fe0Iocxlt2W7TNOwX5fC6OH6PtePb4ujbkMN5/FldM
vQ+8b/Nx/J1jdanHrrYjh/FrrZ89jsuEv7tCHB8py21S09KBHMZrNa7stdaG
fDUA97vQuKC+6HxlE74/gX+3dEtRQm8xyBcf+5M2p7YZ32/A12bxudscbMH3
FfCETDHNwMoWfP8APxhcMO+mVSu+H4B33TgUIdLTiu+HkfuHwO8d+NYuq1/m
+u34+wV+RSqlyAT7/On+Id5GUecPNXTg7wv4gpZx7db1nfh7wfOdX+emLNGN
/oHvNJrouGVjD3oGfsjt8fjUb73oGfa7KEqzylw1sxU9A583vrBgSVwresb9
Pbb7eXevbkPPwJV+Xl+4PqMNPQNf/SxCZnB7O3oGrqneafunph09A//iu87H
x7kDPY/cPwQ84/4e1YG5XoWd6Bn43f0epwpCu9AzcOv8jUXvbnWjZ+AXrjRt
LfXrQc/AfYON1FXie9EzcLszBx+sE+1Hz8ALFqh0jDs/gJ5hv4vv/HKzVILa
0TNwhctdEzp1O9AzcP+0M23duR3oGfffUPDs6jjSiZ6Bjw1WPhbF24WegQdE
zHvWd78LPQPffTo476ZWN3oeuX8IeAbuvJV74eZXPegZuL54SrrPxV70DFzt
eurxz8f70DPwFvmuvU/O9aNn4Hvrl1fzvxxAz8A1db0NXvcOomfgT2a0VM6N
hbw6APe78HZafnmmaRd6Bj5bqDLNaqALPQP3m3lpmc7jbvSMx1ETlzqt04Oe
gecvO+qbWdqDnoFrPQwYPelyL3rG/Tq8bvyeOL8PPY/cPwQ8A//x1F8pKbIf
PQPX3Pdw1sWbA+gZ+MmE2U43rw6iZ+DyzpPVi9eDn1zkk2fuvWBZDTwf+Wu+
LPPvNyFHLUQ+dVr78QITHvQM+13U+TQqWi3sRc/A5XreLXzR2IuegYenJQeX
BvShZ+BORpO/lRj2o2fg5H3QT+uefvQM/KO+Md/akAH0DDxmgXSsrvkgeh65
fwh4Br5blpxwOAuc7h8ibSF82KwRON0/pJeRGDDFFvxkI3dIrY992gc8F3nT
1J4dKX7gLR95vMw+FcfVkO8VIl8X9TTeVwTyqADc7+Jc4HK9JuMB9Az8VMzZ
2x/HDaJn4G5Su10Y2YPoGXjkSYbqYwM4rwTkJ7Wsp64KAp6EfJ+r2vbVfHBe
KcjL9z06fGU/cM79Q8AzcL7JhXs6loIHun/I5h8KPC8jgNP9Q0Klzzg3LgI/
2XT/kMnWLs9/As9F3iph++LdYfCWj/x5X88drgmQlxYirxG80mxZCjwA97s4
zaPgW/kHPIQhP7/hse9OAucVg9xCZZrrwiDg8cgvvpjMtVUEzisBuU6zyJun
NsCTkPNN3q3B9Rt4CnJV05vz1y+B8+XcPwQ8A5/5ZF5f0TjwQPcP+XBNyjnU
FzjdP0TRdYnLh8ngIRv5t+dKT5reAc9FPjja4PLsnZDj5SNfUq/4e4c05E6F
yDPXqqlsywMegPtdnLrWKSX8AM43DHkIn7fSFkk4rxjkHsdMP384BzweuWNz
tLt8LfAE5IWPFylt2Qjnm4Rc9unaeZs+A09Bfk7GZlvXDDhfzv1DwDPw4OSE
A2QceKD7h4wtsRWyvg+c7h8y98j1BE818JCNfJP3fS33ROC5yKstJeWJLeSi
+cjXyezruT0dcqdC5CWvJS8e7QAegPtd3Li/JPLgJTjfMOTe06Uls7jgvGKQ
y4wmt8RPAY9Hbu+0pLy5BngC8gnODk8O7IDzTUJ+SOus3YZU4CnIP/6J7L++
As6Xc/8Q8Azc+IfCV4Wl4IHuH6LT8vl981fgdP+QsAGew0c2g4ds5L0iZvb2
6CcXudsCQ5f6p5Av5SOPuK8/N9oCcrxC5OW7E6ZFa0BOEoD7Xdzdc/iRiBec
bxhykbpX50qk4LxikP8ix5Q1bgCPR67nMFOjUgTOKwF5xvsdxnkXgSch/6dg
N6mzD3gK8sgvLSsmnIbz5dw/BDwD7/j2dfYFJ/BA9w8Ra7jybqUYeKD7hxy1
ULi1/xnwbOQXdVqtvq0BP7nIQ4Ivl+gMAM+n5xttcvfHF8hPCpFHXEmdv8CX
5hiw38U+Aen27mg43zDk1WfqbjjrwXnFIL8x6bj3omTg8cg/jVbwHzSE801A
/sfBYv2nX8CTkM+z+WK8cQOcbwpyTdE3q15kAOfcPwQ8Az/RqJVxrBw43T9k
Pc/myUfPgAe6f8ia/yz2nR0LHrKR/9hfon3qG/Bc5NNbV21b5Qj9vfnID612
f3FQEfobC5F7z8rdf+Y68ADc7yL5Q0zWcj44rzDkPNybLeP8gMcgn1P6s2/S
dDiveOTvnDwX6UcCT0De3jzuo+xyON8k5Ma7qmfaJgJPQa5WeGzOkg1wvpz7
h4Bn4L6nxiV124IHun+IzazN1z7yw/nS/UPcw+YM7NgKPBu5YcZW0dQw4LnI
6yd5XOKWlELPwP3VXbUY9sALkV+8yCXkWAk8APdPUEycqKp7Es43DPmiN8en
BUjDecUg94zicm8PAR6PXKJYeNZXLTjfBOTyhoIfa9KAJyG/Kv6+VmUOnFcK
8tmRJRJ1p4Fz7h8CnoErr6yXv4Ee6P4hP29f3RNpDpzuH/In5FecdzTwbORH
ZewF5WWk0TPw9N3LxYgd8Hzk0xRKHrYUAg8grHh9sIzIvS2of6JMc87caJlZ
caVl5OQdrkTR+/X4OTmSdV9TRhJc/QsSBuvxc/J1lWVXmTn2Ua+V+zx3NOD9
yKGi9TFdV8vI1j/OIV7RNG/UY+2/Uka2n0jjbhnfiPcjEzfYy9oZlZFNXq8/
FN+geSPkXXoj8sPEP5tHcXGVk9nuq/xOPqA5YYDH4eXM+gd+cLVvG0PzQAfd
c1bM+gOurHuw9QXN9zb2evsx6xcoqF16aQvN8WZHPPvBrH/i73v2bSo0rxO2
et/OrD/n9KTu2Ak0lytXTFVi1q9cssCqXhNyhgDSLPv+oURtOem+sCp17jOa
y6WwfsrJichnG3gqmtBzEOu+ppzcCLL8x61AczlnzTZVA59yonnQSHzl+mb0
vKNNcIugXTmxFJjgX3y+GT0vDB1/KXFLOeG55TWtJpLmupL7ZkdcXFpO+ibt
33Gimea0kHctHZHLRVePes2sP7y440huTxt69glQymfW3/RyyclpJ9vRs/XW
RSIeQ/WXL1H/9IOf5nL6kmsXM+s/5+/R8juiAz1PSdp9gFn/qwL5TztdOtFz
7/njt5j175HxSzxj14Wesxa5fWXWf3nt90gtb5p/lk0/vnxCZgUx2VcfJIr5
ZBiJK7lklfeugrjZPPKVmkFzubus+5oKomn/29XFshU9nzB+9WOLYwU54KUv
d+JRK3o2FP7SPtqsgjQnfujszGxFz6pfMpUyV1SQXzNafk0Vb0PPPGeqjX2U
Kwjjd/BKKcyHaS53f0QuF9yftI5Zv0GQ+Wr3azSXc43Kd2DW/2isqvkVAZrL
7bZpesGs39PrfeT4u13oefFUvn/M+nnGZjFMV3ajZ5kCOf4xQ/U3Jix/oy/d
g57rb6nPZ9av8yzsuRBvL3pOWkfMmfXXJTU4vR7fh57/aqnnq8dVErd/Thqx
W2kuF9ahJVIbUEnG/Xbq133Wjp6vsu5rKom0+PjYk1Xt6Hk/s6/9QCXZc3e0
jLlSB3omEx1uKRtUkpaLM8Mn7OpAz/JZnl9L1StJdJHi8s93O9Bzm2dgU4BE
JQn4EGW2PZfmn5B3jRmRy92TdmEw6w/QuGvptZHmcvb/3R7HrD/yUP6AT1oP
ejZyCV7FrF+3TPDHPvNe9Ky29JMds/5l4bmHxkr0oWf+lvQnzPq9ymRvfM3p
Q89FweUZzPpVr9qXnkqi+Wesedcgs/6+yM/ChoU0//xhWu6w9EUV0Vwo/N5w
sBM9PxbtetF1tYr8W26cEGxCczlH1n1NFYn9bhJb7d+FnrecncRvZ1RFMotT
dSfld6Hnuaz1sioie99FeK98N3oWY+ibN4+uIoeF5kYmbutGz5WPt19/01VJ
Ehb41e1+SPNPyLs2jMjlPFnzQhXZVRUi3b+R5nKWrHmhimT3HLhhmtGPnnVY
80IVeX1z2qIIiwH0rMCaF6rI7y/Bb+ZIDqLnTtb6SBWZezvscXHuIHrOiHtw
lFl/oZdTPsMCcolCEmof/pBZf1jUU8Pb9TT/fM/ax6uaKOY/OpWV14Oeb00O
XyVoV02sxdRmmy6kudwR1n1NNSkauJLU4NqLng1uZD+5uLSaWH07X/cpuRc9
K62uy1gxoZpwHU7W/YvvkyR2H0EVuc4z85SBSR96zmbNv1WE78G+2bP9af4J
edfZEbnceda8UE3kxP/qtayiudx21rxQTXJlrEPr3Wgup8GaF6pJXL/0U490
4NlEgjUvVJOY39MvZE2juVwNa/6tJl/9JW9newDPJ99Y8281+b1LZdF9bh70
/JA1/1aREqVfserYRxpAXjptjtniWEMKlU0i9jX1o2e3BYcrR5vVEEe/sc5G
JgPoeQ/rvqaGqEllqPg+H0DPy5556/go15C0e8uMDNsG0PPoXc+OGgnWkL0G
Y59c1hxEz02s+bea/Jqu8nO76yB6/o81/1YTPkNVq7w0mn9C3rVlRC53jDUv
1JCdsqbuIbxwXplkHWteqCF9UwMMH+gCzyLTWPPCUP3LPB6mewLPJlyseaGG
lOw4mba+HHguyWPNvzVk7I0PGooGkM/kkyjW/FtNfhTFK26Ko/nnDdb8W00q
Tcrrm1fS/POBz6gtBw7UEvGFd7e4PqK53Ok1SpeUDWrJjoA7A1szgccQE9Z9
TS0JnHFf/AwPzeVmxq4pCZCoJX9LhXIa1IEnEMHju0eZNdeQpv80oxJMgCeR
Utb8W0Nq63w7+M7Q/PMja/6tIe+NHJrfB9D8E/Iu6RG5nAVrXqglm6O32L0p
BJ5JtFjzwlCdJVtS4yfRXG4sa16oJU2zXUPDMM/MJi2seaGWLAzRPHjlC/Bc
ksqaf2uI7dYS403TIJ/JJ89Z828N8db5HT/xHs0/XVjzbw25edRWqGkK5BUB
5PrzpPaTRgwS7zZ1S80++D2GkcNm+Urz5zNIySzN1m+Y18UQPdZ9DYMcHlfd
cjkNeDyZlMZ74U1XLTFdfyWE9AFPIN1ucq9t8mrJzb/nj7RPBQ9JJJM1/9YS
5Wj1mxHrgaeQ16z5t5b09tRZu56m+SfkXc4jcrlNrHmBQTKVrGYK5wLPJHNY
8wKDPDk53nCPAs3lRFjzAoOUCbs1zrcEnk3KWfNCLfFiiBzy+gw8l3xmzb+1
5P4UEQkHZcht8okfa/6tJXyRZfO4/Wj+eZI1/9aSTyGd6rMmQV4RQJw/Ot+6
uLSO7JyXc+aQAc3ldp68/XXFhDqiPPQ7POYGPIYsZN3vMEiC48b9XB+BxxOp
8o8T40oZZKGWitaUOuAJhHEvfZ1jIoMcPV4wsXAseEgi31nzL4NYTfm3Y4Ue
8BQSwJp/GWSC6UmDTUdp/gl515kRudwq1rxQR8Iuj/79uQN4JlFkzQt1JFPs
RMPFpTSX62PNCwyS3zH2yt7LwLNJFmteYJA4w4Md+4uA55Jw1vzLICfHxV29
i3lOPvFgzb8M0mHu5M/3nuafB1jzL4Msnc3vEKkFuU0AOcHan7KexBxYViK2
nuZy66+sNzcSrCfdEWcEDl0HHkNUV+y9LlFbR1xdD7nVJgGPJ7zddp9SUuqI
SfHhqHt9wBNIQdgVxtU3dWR7WkGV2wzwkERiWPNvHbm5TfH4u+3AU4gPa/6t
I+1ud19oXKH5J+aBI3K5Jax5oZ58lCxyzVtAczlZ1rxQT4SzK3/PPws8izSw
5oU68lI50V/vJ/BsksSaF+qI/0DOnLGKkNvkkies+beOpNpcqom5DDyfOLHm
3zqyzEFl3Nw+mn9uZc2/daRQfbKshzPNP/dXtmYESDSQ58aZr/NO0FxO+6Eg
l1lzPVkgoGgZ8R54DJHfPH7WhMx6cn73m1PrO4HHk3bx2Tvz3tUTx735c6Nn
gYcEkpaoc9XPr54oywszOs2BJ5EQ1vxbT4563u6Uvwk8hbiy5t96simh5KVa
As0/Ie/aOCKXU2fNCw0kvW7DwX13aS4nwJoX6sk4vsHxp4uAZ5Fi1rxQP3Sf
JK1fOgtym2wSy5oX6km7OmPJK3fgueQ2a/6tJ6fXVa8tawCeT2xZ8289CVY7
nO5lAXlOIVnDmn/ryblf6eNjq2n+uaU39OibrgbCNWUGX+EH+P2GkXkR8Q9t
8hrI6zVublsFaC4nZpWZoh7XQDwWv96usRp4PKlSrO6pCRjiLbx/z14EnkC+
5Paqvrg49Hu8UGWwJBZ4ErnPmn8bSE5tjPipBpp/2rPm3wYiuyT7JFEEPzSX
KxuRy01gzQsN5JNBk//eSTSX62LNCw3kX5wuY6sl8CzymzUvNBCVniuhuu+B
Z5NQ1rzQQDKdvf3GiNBc7jJr/h2q/1h0zfXlwPOJOWv+bSBX0yubpE/T/FOT
Nf82kFOPN+Q8jaX553rJA6PiShtJ19jOLW+n0lxONenMcmbf3Yo3sy7usQce
Q7gveFotfdFInLUbjJ5+BB5P8hYF+jH7DLfGHYpv7gWeQKIaI3+8s2kkH+Zw
TzNdCH6S2PNvI3nySDbrtw3wFHKINf82EiEZvqlnn9L8E3Kw0BG5nAxrXmgk
kWpPJzdWAM8k9ax5oZFI3ps411aU5nLD92WNJOFczqkYDZrLBbLmhUaSmMM3
KX0vcFifaiSyYelGH+7Q/HN4/m0kIfw2i85n0Jyzgp0jNXHHb6zTq8X7wdms
ebmRHH7CLd1mRK8zs9i8e13xxGppaeTwexG7GRDyRFEGOXhYYbn82wcjGXxd
6DdziW5PiP9Vg6+L+6Aq/pyY+bsUP7dDv2X03dH1k8xKkMP4kpI8H77CMvw8
D+OnXp056s7RUuQwvvnWmlGGAhX4OR/GG7zS37Y6sAw5jJ8SdeHpn/WV+Pkf
xjO3m93ZVo4cxst9rNkbF1uF9wUwfr2t2vNu60rkMP6MUvP2+YY1eL8A4525
U5L1JKqRw/iWfTwPtgoz8D4Cxguy98uF9xtw9xKFEoliOh6Oo8Le9xXGA++J
7P0oKAu5KN2XoKnO30xhbANyGH9De5usZBTkinS/gjYl7hPbdCmH8ROtr30v
6YU8MBvHiy4003H0pRzG940z7BfdAzlYLo6/eWhCkLAI5TCeSzAjfkoZ5GD5
OH732WNBt+5TjsdvNBz3zo3mqzBeW9V7bZgR5TD+m3e3xM51Xfi+hefNxwfZ
brhrV4HvT+DM3Wav+Fbi+xB4gbKA8+1/Vfh+A75QuWlSyeIafF8B/7TyT7ZP
XC2+f4DL847/mG5Vh+8T4J1/5+XG6zbg7x14P3sfWvi9A580k3vFPT3a7wo8
YF/CuqnnaV8rcKPzOqntf2m+DZx/afh/j9bQ/lXgN431Dd8V0j5V3IfWZdGu
lJs0dwXucTWWx86qBz3D8+aGNTZJARur0TPwqB0H1up51aBn4BaLV8XwVtWi
Z+Dc3UMXxr116Bn4Yrmj3kd46DoC8DCx6xMPJNN1BNwXd/pjhlBxE3oGPsDe
hxY8A6+uEv0qN6UVPQMvN+fhvWvVhp6Bf88fE170ux09A98z+nym81badwrc
PemonRT20eUjl4qYcn9KIu07BZ7u/cNo5Ruau8Lz5jtqQwqcjzPQM3DW/jMJ
degZ+GBqm9CMRQ3oGTjPPNHOPymN6Bm4i69p0/EE2jcOfOskeYZuNF1HQM7c
5ie+BT0DN2HvQwuegcte9fb4Npn29wK/Fy1g/vYs7e8F/oG3/15Nayd6Br5G
PUSv7yrNt4EPVWnhpEP7ToGz/qcCzV2BpzO3r8B+sAB83vzHc/GytIwG9Aw8
JuRJdOZEul4DfFyLg4UxruPEI88/oNPf9Imu1wD/kzjbUz+E9lEjTz49vuIl
7aMGHrbANMwsga4jANdi70MLnoFX+Fz6Ua1H1xGAC1Qk3IgLo+sIwO1OVEfv
WtqDnoEL9k5dua2sFz0Dv744QlvvVT96Bl5Snfg23I/2nQK3LP9pLP+X5q64
z+oNrTvXlzajZ+DLi+7bxPXTfnXgsR/HKg1ktKBnfN6/oiquJIau1wD/OVrb
oC+iDT0D5xbd8l9xAu2jxv1pnfeuUayn6wj4PD57H1rwDPy2c96jDK9u9Ax8
96E5HwXEaH8vcPWXKbPcntP+Xnx+n7dysHTvAHoGPmpszvjsSbTvFPcNsJ9v
Gz+J9p0Cd+1VGGidy4Oe8Xl81SYBl9m0Xx34OfO89VZcbegZ+FT9VTaVpbRf
HbjvzUOH3bLb0TPwIIHT6wtL6XoNcJWdL6Y489I+auB1RnPquDXpOgLwNPY+
tOAZuNVfN62kwV70DLz+m6b4Xy+6jgB8mtoDtVeatL8XuF3pkbRjl2h/L/DL
qvLvLznRfBv425VWWTsug89C5GZjnV5+egI5WwA+b35hwnUbYQO6Lgb8XZjJ
pamqtF8d+B3xHquN4zrRM/COptjp0yfS9Rp8zl0u+fvCxXS9BriT1p61kod6
0DPwDYphn1e/7UXPwBvY+9CCZ+CPxM+mjvEbQM/AW943ZC2ZQNcRgKdGBx32
6qfrCLhf7m6uIJMGuo4AfI3nGHGjJvCZjzx+Cp+yER/kcoXIb/eUHVFQp32n
8Lz5dua8407XxXC/1nUdSxfZ03Ux4GuYD4rZ03514EGOadNkPWi/OnChpBn5
G6J60TPwlcz9ajroeg3wucxtX7HfOB15AHsfWvAMPDpz0wfe13S9Brh+H8++
Me7gjT6/v9/JMnTUcfCWjdxpYeDY99a0vxef02fuX3Sa9vdi/f91Wuv40nwb
9xNgbieQRPNteN78rpxFwmBDN3oGzhfx3q+W0YOegV80jZ1V20vXxYDXRvl7
eE+m/erARX1vxJzYMYCegX+MyPik9Jqu1wA/xJxHPMFbOsc+tOAZuISswLwW
ZfBGn9/3qs7UeSYE3ujz+2eeedqe76N91MCXTF+ruYab9vcCX2iiOjNNjvb3
As8fIN//adN8G7iP+CuPmU4034bnzc+NPy/Ee64PPQO/t+9G8pWr/egZ+Pn0
1/pBIXRdDPjAeEkXRtEgegbeyd2u03Gb9qsD91FcMnPiarpeA3zh+kbeRYLg
LZ1jH1rwDPw4X1JRbzhdrwFurbXb3eMRXa8B/rJx1E+XB7SPGvjdjs6pL0Pp
OgLwh3PnKv1KpesIwKedz9KL4qb5NnC/Tzyj1Axovg3Pm68+vbn228JB9Axc
ummh05vpdF0MOElw2CX0FXg8cllfKfmF++m6GPAe/TGLeGTBTxLyXW+fLF6I
6z4pyIOiMx/f86XrNSP3oQXPwN32385J3ETXa4Cf/3TX4IghXa8B7j++JjVu
E+2jxuf6dwfWXrCl6wjAf1vkK527R9cRgCeIRPWfzwWfhcgd5+r3bZhJ8214
3vzu5gYDfXHwE4b8yG9F1dwn9LkA4Dv743Pf64GfePrcelRZxWucLxKQq+U+
S3V5QdfFgBeuVhwzaE371YEbF5/Qrdei6zUj96EFz8BLOg5qtEvS9RrgB6ae
u9ciTddrcHy19M3sqbSPGviXSSseHV0D3nKR27xQ0nN1pusIwI3M//IXJIPP
QuSZqscs9dRovj38bxPRTt1xsekW+AlDzuV3qfeQBn0uAPiiP0phYoX0uQDg
ycx912/SdTHg05j7om+k62LAw5n7qinSfnXgrH3R+4Gn03qYP9V0XQy4KnO7
93Larw78E3MfmybwSZ/fV5S7PNNOgvZRAx961a2TtGgfNXCpz0MmLtB1BODW
OkMTedZIn+UkeVP9FxlXmnPOiGO+0cvIxmePV3Pr0jxz+L6mjDyRcDXfKVuO
12F4rl9prdBP7kGaQ75hPUdfRn68W+R7h5/mjXns598vvJIv/6xWhfOdICtw
KSP6Hu9/KB6DXIXmikIjckWof7G6xJfp4TQPhPor684vF1tPcz+ov2ZOxOfS
7TTfg/oDR01tPXwB7rNy2fsADL1udI5F52e4j8jHfQDkNv19kCsPn3sLiRC7
/u9yCjMP4nPQASRQojaA2U+o1asf1qlEc7lUdj9kYKSmqHRDBXoevq8pJ04f
/iZ4pVWi56msbQvKyXfmPlHJVeiZFVPZlRPbKTKRumXV6Jl1ulvKidXipHHf
5WvRM+tj5tJy8kpMR4uc5Mxjp4/IY6F+3W3mTSqjaC4H9VtqL7XuGEVzOaj/
wKBxoIsqzeWg/gUJoeMnbad9p8bs+tM/rj84MYj2nTqx69eQ05T8I06fEw9m
17+R+8zj6z40/9Rhlp9ZQX4qisfc7q1Cz0dYb7gKkvIs+fPbv9Xo2Z/dD3lx
3dDM/6MGPX9nvqxjBSljfjFbZi16Zl2WzCpIycm5ZjsGGeiZ9bIrKsjh17+l
/hrUo2fW6SpXkNNnV7zkif7/559Q//Tbrjn2VbS/F+o39lzjxWil/b1Qv22S
6Q3HsTSXg/qdTj61ctxM+05b2PXbf9YOXf6G9p1OZNdv8m9GobRyN3pew65f
vNbac/07mn+WMafBuEpipno7470UzeVGMd8mAZXE6NTC2FN9dP+H4fuaSjIv
/pqxNBftoz7I7ofs2B3wZtYk2kc9vL9FJbn55kzdsZ2N6Jn1Z61eSQbdJG9o
76L7MLBeVqKSSFttCOeaSPt7/1/5J9R/dXV5YnIp7e+F+vNNnqYu6KX9vVC/
jmjoO/kZNJeD+t89GhRLxfuvXHKTXf98rSc7H+XT5+4/s+sPl703t3w37Ttl
sOtXN2bINQzQ/HP4ulRFXES+G3VZ0lxu+LpURV6p7Fvfvq8RPQ9fl6rIRZE9
UvrLaS43fF2qIkSuuWVOFt1PYz67H5Lfsuaf5znaR83SNrqK/FIzXPdmUQt6
9mBd0CvJHc/J+VU8dH8D/L6tEfkn1P+i5UTRUR6ay0H9ayWXbZykQnM5qH/y
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
8LuTln+RMLJvY/jdtr0VbzOcOxh+94fPvXY1r7sYfrfFsfdC50f1MvzucVWF
htf9+xl+d8qpm5d5NKHOSfxu9vyJcvvu8zL87pdfnaKVflegzsBTjdMUU9rK
UGfgUe7KV153VzH87iWrdBfu3l+LOgN/Fzn1sNjEBobfHRvzsnT1zSaG3903
ZXZb27wWht/9pTLj3RHRNobfnVJoIPKGr4Phd38uNYp4pdzF8LvNUvwubD3W
w/C719o0brhX38fwu1c/Gmw95En6CvC974Av8rt0SF8BcClZ/xYqksXwu81H
ikxPEqrG/QSeN011/33z5rWoP1w/YmhfFSV9YnD9tBPzBKatqMbvBa5P15Oz
ijMi/TZwvbub71zLlHqG3/1GgPooWFDP8LtvuU8WeEaRPhz036/2/ns4Jhyu
37Ty9qGsuGaG3/111Jbgiy3NTL/b1FJF1bqV4XdPbLOzSg1rZfjdOVcM+W8s
bGf43TC/kdvv5vs4kMkzr5Phd4+T/qAnG9TJ8Lv3Js61OWjWzfC7lQf3tPUU
dTP87qdOkffjX5E+CvSvH4a2P17Rx/C73WM05vXqDFDcfvenoXwgj3DsH9B4
JsRrx8Pwu/NmuI0Q/sHD8LsbZU6d3FfIy/C7Z8ob2ucsYzH87hzn/NzAfXx4
38L1lOi/Gy6TcLi+xyxcdja/AMPvnvfIMU25rB7vT+BfNbc1TH9C7kPgf4J+
m3TNaWL43UsPqkvMCyT9SMDl/i3rm24rw+/mCT6t7d3exvC7I7/XzPP628Hw
uys/O2+Jaupi+N3Ld3XurJ/WS3H73ZdPCY/T8OunuP3uaR1zIqYr8DD87qG5
l5+ceBl+9/I7klZUH4vhd6tsO5SmdJP0FQCP6qweX7NIkOF3v012mxKk34Q6
A9ebnjZumQbp+wK+Zv+FDK27zQy/23PZWFuNsaQfCfhcPVbKjc9tDL+7fmrH
6zXeHQy/2zorjLXVs4vhd29Xq3Z5+KGH4va7T7VuEx4zqp/i9ruPSnzeG+ZL
+kOAn3lSE/lMhZfhdxd/e9LG58ti+N0fTey3/lHiZ/jdTXOmp/klwpw04ncb
7Xi9IN1ViOF3z5miIKEbQvq+gA8WPI+bY036voDvC/jomSnTyvC7F8zaqMz/
uA11Bn4o3NsncncHw+9+1jA/KntlF8Xtd4d+Hdi0Zyfp50F/fOhcMH/St4Pv
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
        "], {{{
           EdgeForm[], 
           Directive[Lighting -> Automatic, 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           GraphicsGroup[
            Annotation[{
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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
HoOb4L9bRM73KNwKbllGnrUNvLZrA96tFnpV/WqP0WvpAe099hi9oB7J3vNW
q38+ovYlD+EA528Z/mKM39n5WkavtGcObcSc/a4eHvafuZwjD3mJ8SVc+xy/
dy38k/rbzMe15JoyC/IYe5c9zHP/avFP66w9wj8tGdspx/UvxZcc0og19EM9
NLdryzX3Yz08mGux5Kc1r1/g/A6N8HR6O+egWdY/a6gIz+ja8pif6qG5Pbde
hl8wf9FvqgH1evZMtWHB+A68HsDvVnP9l+HPtnIONGIN2Hvtwa4NM6Jv6+Hp
zY5G57j3RYrz21oD4dc5p3MjMkOzQzPbsYwNyZEv/K8I/2+Ga5Zrprc9YwP5
WZ/X3xXhH4Y3hdZWg6vFB+Tw2/8pIs+Z4TVW338kY6vm8NP/5nfHVfXGse+L
yIPMZM1mzaS2ypEhmiWaoe5Q6QXX0qeVvjFzMnsyA93W9ZnD38yr9NCyOfKl
T4rQS65h1/IXlV7pkSMvm2sPhfvnyHO+LSI/M9Mx2/E7DVcrlaGNZlZ537Sq
Pgyv6pUermNVL9aE/wVvWIQnPiiHJ9Wb6vnWyHGPzVr0rN77c51DRWTAm+W4
x22q+uG9N4Mwi/Aah+W4Z22reuG99J6bpXkPfBa38vrLWngWfc5VjK9RhEfc
OYema1HNn5VyaDa1m5qvT4573Kzq5957j/HaFxVxrpmK2YpzYkSOe2b26D33
XvodzXt+KuK7+55+14VFfJaZuNn4OGtUjvzFZ98sRb5ipmy2bGY/JsfvelT1
w2M3yjE3m6fIk5xjHmuRcu55TebTfxdxrevnmCspRb7mj1mbc94xMzWzNa95
wxx7AO4F+B5b5phTtUrPONdOT9FPvuDnzBSZvdm9GffmOTJus273FLbIkdHZ
3/T4en3nlGN/FTHX/A5mY3p6v5uevlfVDzfOsWYaRcxZ15JzwM/6s4i5sW6O
ufMHfGojrmEC3FRdm5mD2YOZy7gc12Qe0Uhxrc4550arFHPROey1/FzE3DaD
sLZbI62V37SKZ+8a9357j3zv1inunc/M/ZDFUzxL16hauH2Ktes9tvYsluLe
+x1d6y1SfHczDLMMv8MuOfKVibxumyKvtkaY97ZJUTv8nbXUmuqx3mPnVk5x
7818zH78zrvm2ANwL8CM370ka6q11R60T46ebG+25u6XQyPMqUfPUTvYM+bW
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

               "]], 
              Polygon[CompressedData["
1:eJwt13W8FdUWAODD5cC9B+4BJKW7U7o7FAQUBBQkBBGlJQSlFCVUjGc/+9kF
KAgmdrc+EQwQC30GoSIh8b7l3D/W78z6Zu29Z2ZP7FNz/Iwh03NSqdQOUURU
zaRS3dKp1NjCqdQK+b/yUql9xVOpLOvMJrDBrLy6NmwYW8xWsrKsFRvKFrLl
rBxrzU5ji9gKdlR/FVhfNp2NZMer68hGsqVsFavCurIxbDm7ls0S54sS+alU
A/u6ZfVl+wTb49StVHeZ/RW0bcuGsyXscnbEuOVZHzaNnRHjatuOjWCni2f0
94e64qyjvINoy5qom8Rukm/S9mlt6xpjIJvGbmR3sdpsAJvCrmd3sAyryx7V
zzT5dPGLMY6paSaGqevBfmOF1LVgI1gvVlrbFuwpbS+RLxXFWD32GJshnyku
FktiXvKT+r72fSd/VV+/mWBdp4rK87StY/8j9k+RTxU/23lUXVNxmrrurI66
k9VNZTewO1kZ1pINYQvYMlaD9WZns6vYzaweG8Sms5vY3awa68nGsyvZjeyY
cY9n/dgMNorVVNeHTWRXs1tYLdafTWbXsdtZIedZmfVn57PRBXPZnk1i54iT
nWN1bXuxCfJV6m5S92tcDNacDbfZk1VW14WNZsvYNeyQujKsJ5vMRrBK6jqz
M9ll7GpW1bgnsnnsTvZv9pO2h+WNRSPR0rFUUddP3QXyuTHHrCY7lV0sf0jb
e7VtyM5i17Kn2Xr2kf5ekv9kLn8UJbStoe4UdUv4g+r+o+5/6o7Im4ihrBur
rm6wusXsAXZPzBEbw65iG9gTLMUqppN7Pu79u43RmJ3DbpQ/r+SpmEt2EpvP
7mK3sqbsXHYze4E9E9dAvC3/yvGWZln59+I1tjvnn+FSufL6NsZqezXfyB5n
zdh57Bb2InuWNWDj2DXsKbaONWIT2Q3xvIlJjrmiOerERskvVXdVXBfxjny7
ccuwEjGX2nZXN4PfzK5nf7l+JVgXdjY7hf0gXpfv1Vb3qTz5t+IV9gsrFu9O
+d/altW2F5/Chuclc943ndyPcV9u0sFivijejfY1j/cRO6xtOdu91UzV9nT7
K9rfgZ3LrmFXsD/V5bNObDwbxPazkqwrm8hOZQfZcax7jMuGxnMu3pXvcMxl
Wcl4zo1xuroVfA17ON5hbARbzlazh+IZZMPZsrjvxTjHXJedwVbK16p7RN2P
4k35PmOUZMXiXSfeY9+ycqyU/IDjKxXv73hW2ZB4BvXXg81kt7DrWK65rM0e
Nt558smih7pl7El1X6rbzIqqq8UeUjdRfo7YYYxdaqqK3upasG/Ybnk10Yed
EPck2yevE+8M1oHtZPvl9cQg1jHOjR2Q1xeDWSf2HdsrryH6sVZxb7A98uqi
L2vJtrJt8iOuwVEx33Hu4JvYN/Ki6grF8YkX2Hcsl+XIP9H2LbafVY/HlBVx
vqWdb0s+kg0reBbOTifzE/P0rjF28f/a3qNtZXXl5R3UXRjXin/I3ol73Bh/
yeuKgax9fI9ibPkubSuxcvKv1O1k5UQX1ohtYz/Ky4uurGE8C3G/yYuJVqxZ
vE/jOZRn4n3ImsoPx/0hLy5as+by7fr7SV5BdGON2dfsV3m+yMY3PZtc0+0F
eXgddoJzm+Hc7pS/oe3LBW1/k1cRlePdqO4LtsN2yfi+q6ul7nP2tbyEaMNq
Ftz3w9LJ+zre269qu5t/avt316WKugp5yZqhWDp518c7/3p17bWdzx6Uf6Du
bXXt2Dz2AHufvcVyzGUOq8X6sz7Rv/4+kh8zRj1Wmm1mH7NU3IN+ysS5iefl
X+ck67eUvLD+CuuvNh+A+rI+xr2cPR217HPWm62MtUW8F9lW1outYBvZNraF
dWOXsnXsCTHDuXVmS9ga+WfqPlLXlV3CHmdb2SesJ1vONsR3gH3G0o4vwxqy
IWxg3KPO7cPCybMRz0glY2znz8Vx5PzzuU4d80BsY8/Gc5/zz2VIHc1N2n5Q
OPkuxvdxtrYtjTtTo7v4m+pe0a4Nm8vui2eDvVHwXX1R/oN2O8VMbT9mL7Of
5RXicqtrq+0F2t7P32Nvso5sUazD2KfsA7Yn5kn+p7ZV2fHyz/S3hRUVzVhl
toVtleeK5qwS66K/i/W3lm1hH7NObDFbzTazD9m+eA7lh41Rl9UoWG/8XXB/
x32+0nm01naOtvfK74nvCmvFzmd3y9/S9tX4VsTzLy8imrIG8r1x3PK/jFGN
VYxvY7zbWI5oxOrK54jZopR+G8X3xhglbTdMJ+vpWFfHGr2dOX8t1m7yK+1r
H/8fxALbt8VzZd/7+mnNLmK3slfYe3nJejnWzfn5ybq3SzZZ88baN8vqx7eP
dbd9me312n6h7af2XyQuFGXsaxrfZnXz5fNEadYk1nesvnGH2J6l7W3a3m//
BWKuOE5dY/t6xPVTN8v2deqeU/e6/QvFAlFWXbP4hqvLsV3F9gB1s9SNsf9X
8b78e9e0PDsujj+T9L0umxxTHNsuc5lmrdSOUndiXN9M0veGbLJ2iDVEyYL/
QGvYWvG4KJ5JrsfqbPI/Kf4vfSWe0dcVPP7rHfbM7DZGEXlrfibrl5fcL7PT
yToq1lOb9fG7ujzWTj5W3YAYN5NcyyezyXnH+cdirhI7Sd2Jor19+Znknngi
m1zHuJ579FeUtVEzWrOTWIlMMg/rs8lcxZztVZfL2qobo65/zEMmWS9tzCb/
deI/z07xhpo/Yk2sLhPPpbpV8R+HfxLfaXlRx1eDDY73OBuvrhkfz5ayR9kG
1pxNYJeyx9hG1oJNZlewdex51pJNZavYk+wFdkz8KS8rOrN28qPxbZCXEZ1Y
W/kR8bu8tOjI2sT1099BeUXRU9qFHYi1iTwd3yxWX74/1hzywvGdYfViTPGl
/G/XoA6rLi+kv0OskujFuha8x5emk3dBvBN2xPdS3RR2pXy9uk1xvuqmszvY
6+zFOAfxhfyQMWqzanGt1E1LJ890PNsvsXPFJJGXn6zHOhgjbbua7YHq5qgb
l5f874z/n8Xzk//GndUVsV3d9iB1c9WdZX8uq8lOYfPYBNbEMZ/JFrL72Jr4
5qmryk5ms9lY1ljdKLYgzpetZo3YSHZRvBPZYzEX8e2XH3RutVhVeUN1p6mb
w+9gD7IGbCibzW5nD+Ql69FYlxbLT/5Xd8oma89Yg2byk7VrR9ZU29G2F2l7
v7ZrY87c49/IS4l2rDb7P6wpDks=
               "]]}, "Charting`Private`Tag$323359#1"]]}, {
           EdgeForm[], 
           Directive[Lighting -> Automatic, 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           GraphicsGroup[
            Annotation[{
              Polygon[CompressedData["
1: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
j+CzBnkypaLjjuLVb8FnMfJn/ge+WM9a
               "]], 
              Polygon[CompressedData["
1:eJwtmnngVlP+x58n93zr3q6rjValTQtRhPZdi5RoRZvSQvuqXUlooyyJCUmS
RGWJSBlr9jXGNmZ+M/MbjHVQtmreL+/7x63zOuc+97nPved8Pu/P+3xrj5h0
wcRShUJhtP6J9P8vcaGwo1goHF9SKJyWFQo/i7eLa4ibiX8TPyKuJW4uflW8
WPxtKBTqiD8W3yQ+Ij5R/P3RhcIeXbie+sZrrKn6ztLYHeIfxaeKzxSvE/8g
3qDjMrX3q6+8xk7RcYbaf1LffzXWRNxcfLv4O/F3uv7Tun5d8TjxrzoeVrum
7u90nVsuKRReFjcXdxR/q/N36/w66rtM55bV+HNqn6rxdpnvaau4convNdH4
s+JTxG3Ff4/93UHcQPyP2PdWIm4ofl08k3vVPa4V3yO+XPy+uIK4tK63V3yS
zm8lLiN+RnyyuLW4svgtcRtxN3Ek3i1uIG4pXqzrnSPeqev9rt8Sa/zP4iYa
b6Px8uJXxGeIO4kril8TnyXuIj5GvE98uriDuIL4VfGZ4s7iY3X8quczXH0P
6LuKGt+ldj2Nn6mxUuInxfXFZ4lv0DkDxM/qfkqJV4sHiZ8XR+IbxReKXxAH
8U3ii8Qviksyv6N2at9T9Lu7Vsd5aj+pvkP6fUvFfcRPiQ+LV4kHip8TH6XP
rhD3Fe8RF8XLxOeLd4uP6Pzl4gvET4sLGr9TPEr8tvjozHO8rdobip77z+mY
p/a/1VdbY7fq/8f1PGqo71KNvadjhdoH1V8v8xpor/bGotfGXTpGq/2O+jKN
rROPFL8hTsW3xX62r4pj8Tvi5eID4rri28WXiF8TJ7wPPe83xK30vM8WH9H4
E+K64jPE3+g37tT9VVffSL5fn9srri+eID5Kn39K7RN1fgudv1Z9w8Sv6Lwy
4v/o8w/q/Irqu4i5pb5hGnteXE2fXa++MWq/q75jNHa3eKz4PXE58XHEhMj3
/KDG1ugYqvbLGi+tsa90/Yc0Xkl9g1krOkao/brGyzJ/9P82jR+rviHEA31n
TbV3MQc1/s/YsaG07r+RuIvGe4k/1/gscWfxubwv8RWZ19gBtS8ueu1xzz9E
npP8FmLKT5HnILGmgz7fRe2/qm9a5t/0Y+Q5y29tr/F2an+ovqka+0D3e1Dt
werbqPFK6vsl8jO9X3y2zu+n9jfqm62xl4LvjXu8WeMViamRn9G9secE5/IZ
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
eGBmDY4WXygeRKwQl2buBNcjVXQciuwB7CA/6ojVvjq4fkFjo7WvC9aXVXUc
Rsuq75HYc+pttduWeK5Rk78rbl/iWr2dzjmg3zdFnz83cw4iF00W92Quig+L
54j7Mb/FB8VTxb3E3cUFXW+eeACxQHxEXXPF/cWrUut7PBq8mq76/v7ibyPP
1zfQYOIfNH5b5hwxPNg/IHdMTV0b4ynhLU1L7X/gGeAdTE/tHfAOeBfT9Zn7
xJ2C4/3MPB90D853M3J9QMwi/s9K7ecw55n75LRh+foiXqNB8RvX5fELzdoi
OIegZaclzscdg/MfGrZlcI5F285PHTvR2Gjt2anXFnOMubZAPL7omExsnpc6
9hJzib0zUs8t5gBzYWbqucA75l3P0/fvEQ8Kznccg/J4SS4s0bFN7cZ637s0
tlBHmTz+b0Kr5fn8jxyVWTMNzOMp8fzKPF9wj5t1/tw8f3MO5+JnlOT5Ab9k
su5vSNEeBV7F1MT6qEOw/v5c56zm3ep+HhBPSaynqP/RCwc1vl5cXeOPZPY4
ewZ7BnifV+S/p0dwvl+kIw7OoVv02Tmp1y45ilw1JbVXgseC1zIhtZeDR4NX
c7WONDgnb4+9Pph7nXI9Mjnx/bQK1vvESGpHNDixkxxGLst0XEt8S+394BHh
Fc3Pr8ecYm4tEL9Q9BxnrpOzqwXXTOTypeJywTlyJ3owdS2Jx4PXMy51bY6n
g7czPrW3g0eFV7VMR3lyEzk0dg7Gm0LDkpvnps7d5Hhy/RIdRwdrlodja5Lq
wTUBWmVM6lqbGpVadVJq7wuPDK9sZGovA48Dr2OljkrBNcCe2DkTb4mcTS4d
nboWp4anlr9ex7HBNdszGh+VutamZqd2v1Tcu+ganFp8uY4KwR75kzp/hbhi
cAzZLR6bupamBqcWJ0fjBZEjyd1orCrB9RHaC41UNbgmQTuhqaifqJfQR7Nz
/donWN/PEe8Unx+sv5emrq2pqamtyVnP5P4puQx/ck++v4C2RDPuzfcz0JLk
pNsj5wxyFR7V3yN7WHhXaEq8BnImWhNNT+1PTkXr4y+/mPs71DLE8Jtzf4fY
/mjsPHBN5vnJwVydVvQYNeNLuX9ELUmOWxs5B5H7iPFrImsIYv9V4iRYY24V
LxaXDdagD8Vek6xNYi7anJp1X+5HUcuSw/GyyNHkdjTDxtwvQktQ0+KFkdOp
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

               "]], 
              Polygon[CompressedData["
1:eJwt13fcTvUbB/Cbep48d4/byKzMIoSoCGUWobLKzkhZKavsskJ2KDJKVEpp
IULJaG80frT3UAotlPze1+s8f1yv17ne5/O9z7nHuc65K/QZ0mFw/lQq9YHK
Ur3TqdTvNk5To/OlUu/lpFI92SF9ETWSvcO65qZSG/XfnZxKtWKT2Q1yR1lp
NYF9xK5lB/QF1S3sTdaP/aM/Q01ie9k1Xu9J/aderykbyzqyp9hnrBkbxzqw
Nexj1piNYVezJ9gnrAkbzTqxdWwPe18dLZhK9XDcg6ywGiH3tlwXuQ36b2Va
sknserkjrJQazz5kneWe1X8jdzmbyC5nU9kDbIXa7xi9rD3MiqpRcu/KrVaP
qqHye+OzyaRS3W0/b3u/dW3l7rS/j7V/suJqLNvNbpJ7X59f9WMPRI69ov/D
2i5sPuvL3mRHWU+2KD5n9hY7xnqxxaw/e5v9w3qzJfG9sTfYEdaD3cuuYy+z
31lnNo/dyHZnJT+UE3y89zGI7dHnU33llss9rh5Tw+37OL5juUf0q9Qwto9N
ZDfb/sD2Saq/tSvsH8w+1J+sBrCVbAj7SJ+lBrIH4ztir+r/dB5d2YI4Z5/f
H6yYGsN2sYFy7+qPy/Vhy9gkuedsd+BNs/129T3ktup/kWtv30y5Fmw8e5IV
ZVfGtcBeZAdYBzaL9WI72SF2UI3z3layBl57YLwPtZW1ZQ/ZfknmZXXY72UA
e4f9q7/O6y3N+11NYxvYs/GdWNuNbWE/6dvITZeb4rybOUZv/gqbqm8td09W
si7WH3CM3uwldljfSe6uuC7ZC+xn1o7NYO2s/5Kd7ngb9BtVe7lH2Idy9eWG
511b69nX7Cs1Un68tbWdS3u+Ua6g/iZ1MjubzWBfWnsxW6nfYd05bAhrwFaw
7awyG5x37DiH0Y71Vax3jIvkltjeLFdWrp/9d/JpalRucu7To7d9iuPW1S+T
+0buEmsf1O+0tgobyu6QO8FqqgXsY1ZPbql+i1w51p+dx2ay1awQ68zqssVs
EyvD+uZdH7uykt9A/BYKOpd7WTXn0ppfoRqwyew/2zVUdbWSzWVnyF2sv0TV
ZvUdY5nt571WeccY4Bjr1Fo1Uv5z+6bKPaN/Wo1gn7EprJa1s2w/bm1ha7vY
P8H+X1lGFVIV5S6UW2B7nVwpud5yL6qt6jb57+ybI7dFv1mNZd+wWWyktaWd
c/2Ygdb+Zf8y+89jPeOzZmmZUep01oCtYH/LTZXLZnXYUvYVqyN3t369cynN
rmPns3nsGVaC9WSb1HNqjNf42r6ZmeQa3JGV/B7jd5mfXWDtfLZWX9LaXtaM
l/uBlVDj2Musttxs/RNyRVhX9oJ6Xo2T/9a+2V5vu36bup19z+ayKbazvI8L
9Uus/dr+Gl5vuv7h+A2wjqwCGxG/R/aPEXopa5VO7genZZLZGDOyJXuP/SbX
0dr7Wet0MjOLZZK5GvP1UraJ7ZVrGNc+m+hc/mKV4jNh78esY3/rK8d3xvbE
fLH2df2P1l7FFrLK7Db2GMvHWrHL2Ga2jzVi01gT9jR7j9Vht7NmbC3bzS5i
E1gj9hh7g9VkI2Oesu3sS9aCzWUN2Wr2OqvBRrAr0sl9o7j3u0b/hGrKnmG7
5OrKjWfN2Tb2BWvO5sQ1wEr5Purx5exPVoVN1N8jl83asKpsElvETmFt866P
31hZVUYtdPyycsNjW+6I762J3JlsKJvP/mKNWDl2C7s3njVYU3YWG8MeYv+x
FqwiGx3XPDvOmrPy7Nb4/bBjrFnMNeeSm53Mh5gT1ZxLGblhtu+W+1uusVxN
NoM9wjLeRydWjU1mi1kB1o6dy+6Ia43lsPbsbDaWrWInvN7lrDqbwu5j6bhH
skpsHHuUpVjLnGSGHc/7nOLzquT8zpG73faauP7kWssNYid5H2fFbGZfsCvZ
J3ENWvOk/qm4llkFuabxXuSOs6vYp/qSmWS+xZyb77jl5NrEzJI7xu5iZdiV
MSfYEdYmnczCUplkXsbcjBl7ZnYyh2Mer88kx45zuDU3OdYdbIHts7KT54N4
Tkh5rW7qZ/2pahh73ZoO6WT+nJlJZmPMyNnWlrC2ecxeucNxv0wn86K83A79
TjVPrqzcVTGf5I6yLnI/6XPUEPYqmyNXUq5FfK7sd3Z1OpnBZTLJjIpZ1Zn9
yAqowXKv5F03cf3ckpt83pMzyfPBwqzk+SOeQ/qzK9iieIbQV7W2T3z27H72
NqvNBrL+jvFvvN94LbYvvku5+/RvydViN7IBcinnXD7uT+zT+D7kluvfkTuf
DYr7pVx+uYr8TvZ5PK+xfKwCm8Y+Yx3TyX2oXCaZvzGH+7Jj7HQ1Ue5/rDv7
RZ+rhrM3YsY67lz9VsetyLqxtunk3lna663XPxvPPnKr2Ady9eSGxbNPOnn2
OCOT3G/ivhPPcA9nJf8p4r/FEPu6yu1naTXU2tdijsvN0b8gU4F1Z7NYce/t
spiz7CC7Jp3cX8pmkntu3Huny2XkGsackPspvkO5ouz8mDHsVzacFWG1Y46x
A2yxtdVZd7aNnZJOnkHOZd1YV7XZsRaxc1ineL6QO0lugqrHurAXWTH9fXIX
sD7sNZZh97ML2fUxt1mhmF/qNHZBzB32m3MZwtKsGpvHfojnOVaeNYm5w/5l
S71eTdaD7WA5MedUYVYrZi/7RW6JXA12LdvOCsQcVqeyc2Mesx9zkmfv+tnJ
e4333Dzv+fCLrOR/S/x/iWfcsdZWlGsWs83a/6x9QK4u68veZEVkVrFG7Oa4
x7FS8ZzCzmZXs03shLUzWTF2KVvNDrF7WCV2TXzuLF/Ma1aINWIPsv1yN/MC
rEo8V7Dv8u4BBbOT58F4LlzjnAfL5bCq+rvkvo/nBrnGbDDbw0rHHFa1WDu2
geXql8vVYTfEfZkVZg+zhuymuLeykuwhdgkbFPd5VoItZJVZR7aF5Y9ndnYR
6xfXPysa9wlVhbVkT7GseO6Wu5jdyN5lxeNZQ1VlrdjTLFvfWD0en7vv6Dw2
ynv7P1ejI/w=
               "]]}, "Charting`Private`Tag$323359#2"]]}, {
           EdgeForm[], 
           Directive[Lighting -> Automatic, 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           GraphicsGroup[
            Annotation[{
              Polygon[CompressedData["
1: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
2wj+PFjzV8Pjg/PCysS1jHLQcnhMcA5aCg8L9ou+gEcF69iixPdSeW29dC9Y
G/fCo4O1ejE8NrivWQZ/HKyHS+CP4EbwAnhosMc4T3uK+9a92P3vB8G5YC7z
H8INlU/h4cH9xXz4m9w9z8zS7l9VG5QiLs1dT09gvkq0fyRNvivaA1LOqhbt
3fRRTsld745XfRLtSSl33B3tJUnnK0d7RspTlaK9LeW4++FeygFwLXhAsF/6
SHTuUy6rDveG+8H3wT21B+Cvctfr41TPMN83uG75K7XGDlC9l/m7DyFOYv5E
eAzHT06te2PhO6L1RbnstWj/SLXilIJnK+3flrofVB2+O7UfpevZkdqz0vWk
mZ/LW8S9qT2x/vCu1J6VvuPG1L6W7tvC3D3Jp/IWeP0U828T56Tu43Q/a3I9
rwXXYA/AfYK/1y3RuUce8qPwwGBP8uboPCe/+tZoHZTPeVN0npNfXRt+PbjH
rAO/EXx/6sKDgq+/bfS+Ut7vEK0pyuntozVFebxdtKYov78SrUeqAW6L1mL5
nDXgV4Pvw+3ReUV+adnoPCqv9epoXZYXek10HpV/Wz46J8mbrRjtgapGqhDt
gUonr43O0/JXr4vO6/Ler4rOPfKKb4zOnfLnr4+uD+S3Xx6dY+RlXRmdh+Qz
XxGdh+R3lYvO5fK3X4rWDtU/qn3O4xl1YR/N4nmdBn/C81qSuy/9HO4Tnafn
qz6M7jHUj9ydOXfPIVbJnN/nas0zphf7+KWpe9LJ0kn4UtVX0s9on1d14MLU
ve1E+KuCX6267uvUPexU5pen7nmnlLZnqL7nP/LJUl+/rrN6oX74QjVkdE0m
nZefrnx9v2qJ1PXJh8yfFZ3z9P/+qeuKoeoxc/dp6uneZ/4gjh8uLSr4+apr
9ubu8dQzhugcoHxxWHR/pZ7lzYKfL929LLpWUI2qWvVQ3qeh8ntmj3cecXZq
T1s6sCB17y/tmpa7rtK1qXa+lvmBietx6UBraWBqD0EaWDXaB1ddvSb18TPg
T1Ln7lHqQ+Gj4JHwuNS5fjQ8M7WXrr08suDbKP+PSH3NI5Q3o+tR9QLjC78R
qDZZm9q7UE27IrVvME3eXWrPQd7dT6k9Gfl783N7HNKxL3N7HNKxGbnrDN3z
H1L7EvISf4RvKbZnuCC336G1OjN3vaJnOjf3bwP6juot5AkM5f4sy+19aI3N
yf2bgb777Ny1o77XvNzek+7Dd4X+Qn3EC9E5WP3O+tReivzMbbm1Wt7CpdE+
iHytRtF5S33WRdG/Jej3nVbRuVm9Z5vonK2+b3tubZSnUS/6dwj1fX/m1jF5
ArvhwcGexv7cvpL8hG7RNYR6tD9y66F8gzW5/UE99+7RuVn96arcHpmey8rc
vqH21zPROVU9Y9foGkX96S+5/UF5NT2i6y3t9yeif8NQL/ZXbv9LPsbG3B6i
/J9m0TWE+uVfc/uP8oJaRtcc6q+fis796kOfi64P1I8/HV1zqCdtHl1DqHfe
lVvn5UU0ja4z1PM+G11PqG99Mvq3FvVcj0XfN+WjS6J9K/mTraNrIPX1TaJr
GvXIjaPrDPXUj0f/lqN+bV9uT1a+UP3o/kc+7fPRNZl8g025c7r8pT25fUB5
Vp2j62D17L/lzn3yrFbk9iilaZtz1w/yjnbmrh/knyzP7c1JM3/PnR/lsfSO
7rukG69G90LSvQbRvZM8hC256w15Vl/n9gGlwz2j62xp9YvRtaa8hU7Rdbw8
2I7R9b18jK25c588uv8D80BeaQ==
               "]], 
              Polygon[CompressedData["
1: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
               "]], 
              Polygon[CompressedData["
1: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

               "]]}, 
             "Charting`Private`Tag$323359#3"]]}, {}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line[CompressedData["
1:eJwt0TtIllEcwOF/funnp6auIihuEugqQa4S2CSIkFsIXgZdbVQEnYoIahVB
l7Ty3iSCrS7e7xbiJaWywlHwOSC8P57DC+95z6XmZV9L74OIGNBfpfFvneg2
G1HOksKIalayno/ZyCd8zmdsZxt72MkuvTIe4gjf8QPHOMFpznOZ39JcuYhT
/tO6/uinPmYiNjjJTU5xi5+4zc/c4Rfupnk5oz3jWe5zjgec5yEXeMRFHvMr
v/P1w4hz/tcPXetS+9a4xlWucIlz6d8c5yjf8y2HOcgB9Rt3sJutfMEmNrOB
T1nLOlawikUs401eRGlaCx+lu2FJOhcW8xeLeMVcOiv6NM54qmy6QxakvTCf
x7TFOGQm7YueeOPlxf393wFdkUzM
            "]]}, {
           GrayLevel[0], 
           Line[CompressedData["
1:eJwl0U1LlFEYgOEzWkKCi9y20V9gf0Dd6EaqRbtQF47fzTQuRV2FENYuYjAR
BVEZxb2uFb+yNMcRETXweyuClVaOXS8ubq5nceA8533L410vU7EQwludGq54
xB1VPgqhkM9YynqW8zWfsofVHOALDrKRGU4paV5kH3P8wGMO8TI6E11cHMIc
+7nLMy1H53SgpochrDDOVTbzC1u4xlZ+ZRu/sZ3r7GCnNqJ9+Z0JbjLJLN9w
iynmWFMUwh7Pta0T/dATuy2xhLPM2z3DC37mId8zy14ucF4J8wQbmOZzvmMV
u1kR7ckyvuJj1rGAMw9CiHGaIfqmvDNOMs9x3nKM/zjKEf01D/MPh3jDQV4z
zd/8xF/8yJ+s9e792P3//w9KY1DA
            "]]}, {
           GrayLevel[0], 
           Line[CompressedData["
1:eJwl0bsvnmEYwOGHOCQ+sZAURZ2mxsImFiZFhCIREYTEWP6BGkwGRjEwioFR
DK3zsdKIQ8RxElPrfGoNLK4vhl+u+17e93mfN6+rt6EnJoTQr+PYEP5YDvhb
A0khPNtHGG+fYBpnWMA1lnCfFTxnPR/4qA5zSiSEHmazj0UcYhnHWM0pbnOL
J/qpQ+3qQ2IIs0znHDM4z0wu8CMXmcWl6Hu4zBx+0oo5l6vM4xrzuc4CbrCQ
v/jCbZ5qU0faU7ez/WAzJ/mFoyzlID/ze/Qs/MZkRtRuvnUPdTxjefR5LOYK
8znNVI4zjsP87847E0L4xw4+sY2PbOUDW3jPZt6xiY26NX/lDet4zVpesYaX
rOIFK/mXr757J/b9/78BjYJJ4g==
            "]]}, {
           GrayLevel[0.2], 
           
           Line[{2045, 2358, 3336, 2268, 2044, 3337, 2269, 2046, 3338, 2270, 
            2047, 3339, 2271, 2048, 3340, 2272, 2049, 3341, 2273, 2050, 3342, 
            3024, 3440, 2051, 3025, 3441, 2052, 3343, 2274, 2053, 3344, 2275, 
            2054, 3345, 2276, 2055, 3346, 2277, 2056, 3347, 2278, 2057, 3348, 
            2279, 2058}], 
           Line[{2060, 3026, 3442, 2059, 3349, 2280, 2061, 3350, 2281, 2062, 
            3351, 2282, 2063, 3352, 2283, 2064, 3353, 2284, 2065, 3354, 3027, 
            3443, 2066, 3028, 3444, 2067, 3029, 3445, 2068, 3355, 2285, 2069, 
            3356, 2286, 2070, 3357, 2287, 2071, 3358, 2288, 2072, 3359, 2289, 
            2073}], 
           
           Line[{2075, 3030, 3446, 2074, 3031, 3447, 2076, 3360, 2290, 2077, 
            3361, 2291, 2078, 3362, 2292, 2079, 3363, 2293, 2080, 3364, 3032, 
            3448, 2081, 3033, 3449, 2082, 3034, 3450, 2083, 3035, 3451, 2084, 
            3365, 2294, 2085, 3366, 2295, 2086, 3367, 2296, 2087, 3368, 2297, 
            2088}], 
           
           Line[{2090, 3036, 3452, 2089, 3037, 3453, 2091, 3038, 3454, 2092, 
            3369, 2298, 2093, 3370, 2299, 2094, 3371, 2300, 2095, 3372, 3039, 
            3455, 2096, 3040, 3456, 2097, 3041, 3457, 2098, 3042, 3458, 2099, 
            3043, 3459, 2100, 3373, 2301, 2101, 3374, 2302, 2102, 3375, 2303, 
            2103}], 
           
           Line[{2105, 3044, 3460, 2104, 3045, 3461, 2106, 3046, 3462, 2107, 
            3047, 3463, 2108, 3376, 2304, 2109, 3377, 2305, 2110, 3378, 3048, 
            3464, 2111, 3049, 3465, 2112, 3050, 3466, 2113, 3051, 3467, 2114, 
            3052, 3468, 2115, 3053, 3469, 2116, 3379, 2306, 2117, 3380, 2307, 
            2118}], 
           
           Line[{2120, 3054, 3470, 2119, 3055, 3471, 2121, 3056, 3472, 2122, 
            3057, 3473, 2123, 3058, 3474, 2124, 3381, 2308, 2125, 3382, 3059, 
            3475, 2126, 3060, 3476, 2127, 3061, 3477, 2128, 3062, 3478, 2129, 
            3063, 3479, 2130, 3064, 3480, 2131, 3065, 3481, 2132, 3383, 2309, 
            2133}], 
           
           Line[{2135, 3066, 3482, 2134, 3067, 3483, 2136, 3068, 3484, 2137, 
            3069, 3485, 2138, 3070, 3486, 2139, 3071, 3487, 2140, 3384, 3072, 
            3488, 2141, 3073, 3489, 2142, 3074, 3490, 2143, 3075, 3491, 2144, 
            3076, 3492, 2145, 3077, 3493, 2146, 3078, 3494, 2147, 3079, 3495, 
            2148}], 
           
           Line[{2152, 3385, 2310, 2150, 3386, 2311, 2154, 3387, 2312, 2156, 
            3388, 2313, 2158, 3389, 2314, 2160, 3390, 2315, 2162, 3391, 3087, 
            3504, 2164, 3392, 2316, 2166, 3393, 2317, 2168, 3394, 2318, 2170, 
            3395, 2319, 2172, 3396, 2320, 2174, 3397, 2321, 2176, 3398, 2322, 
            2178}], 
           
           Line[{2177, 3511, 3094, 2175, 3510, 3093, 2173, 3509, 3092, 2171, 
            3508, 3091, 2169, 3507, 3090, 2167, 3506, 3089, 2165, 3505, 3088, 
            2163, 3503, 3502, 3086, 2161, 3501, 3085, 2159, 3500, 3084, 2157, 
            3499, 3083, 2155, 3498, 3082, 2153, 3497, 3081, 2149, 3496, 3080, 
            2151}], 
           
           Line[{2180, 3095, 3512, 2179, 3399, 2323, 2181, 3400, 2324, 2182, 
            3401, 2325, 2183, 3402, 2326, 2184, 3403, 2327, 2185, 3404, 3096, 
            3513, 2186, 3097, 3514, 2187, 3405, 2328, 2188, 3406, 2329, 2189, 
            3407, 2330, 2190, 3408, 2331, 2191, 3409, 2332, 2192, 3410, 2333, 
            2193}], 
           
           Line[{2195, 3098, 3515, 2194, 3099, 3516, 2196, 3411, 2334, 2197, 
            3412, 2335, 2198, 3413, 2336, 2199, 3414, 2337, 2200, 3415, 3100, 
            3517, 2201, 3101, 3518, 2202, 3102, 3519, 2203, 3416, 2338, 2204, 
            3417, 2339, 2205, 3418, 2340, 2206, 3419, 2341, 2207, 3420, 2342, 
            2208}], 
           
           Line[{2210, 3103, 3520, 2209, 3104, 3521, 2211, 3105, 3522, 2212, 
            3421, 2343, 2213, 3422, 2344, 2214, 3423, 2345, 2215, 3424, 3106, 
            3523, 2216, 3107, 3524, 2217, 3108, 3525, 2218, 3109, 3526, 2219, 
            3425, 2346, 2220, 3426, 2347, 2221, 3427, 2348, 2222, 3428, 2349, 
            2223}], 
           
           Line[{2225, 3110, 3527, 2224, 3111, 3528, 2226, 3112, 3529, 2227, 
            3113, 3530, 2228, 3429, 2350, 2229, 3430, 2351, 2230, 3431, 3114, 
            3531, 2231, 3115, 3532, 2232, 3116, 3533, 2233, 3117, 3534, 2234, 
            3118, 3535, 2235, 3432, 2352, 2236, 3433, 2353, 2237, 3434, 2354, 
            2238}], 
           
           Line[{2240, 3119, 3536, 2239, 3120, 3537, 2241, 3121, 3538, 2242, 
            3122, 3539, 2243, 3123, 3540, 2244, 3435, 2355, 2245, 3436, 3124, 
            3541, 2246, 3125, 3542, 2247, 3126, 3543, 2248, 3127, 3544, 2249, 
            3128, 3545, 2250, 3129, 3546, 2251, 3437, 2356, 2252, 3438, 2357, 
            2253}], 
           
           Line[{2267, 2363, 2362, 3560, 2266, 3558, 3141, 2265, 3557, 3140, 
            2264, 3556, 3139, 2263, 3555, 3138, 2262, 3554, 3137, 2261, 3553, 
            3136, 2260, 3552, 3135, 3439, 2259, 3551, 3134, 2258, 3550, 3133, 
            2257, 3549, 3132, 2256, 3548, 3131, 2255, 3547, 3130, 2254, 3559, 
            2360, 2359, 2361}], 
           
           Line[{2365, 2688, 1391, 2364, 3659, 2588, 2366, 3660, 2589, 2367, 
            3661, 2590, 2368, 3662, 2591, 2369, 3663, 2592, 2370, 3664, 2593, 
            2371, 3665, 1399, 2372, 3666, 2594, 2373, 3667, 2595, 2374, 3668, 
            2596, 2375, 3669, 2597, 2376, 3670, 2598, 2377, 3671, 2599, 
            2378}], 
           
           Line[{2380, 3142, 3561, 2379, 1407, 2381, 3672, 2600, 2382, 3673, 
            2601, 2383, 3674, 2602, 2384, 3675, 2603, 2385, 3676, 2604, 2386, 
            3677, 3143, 3562, 2387, 1415, 2388, 3678, 2605, 2389, 3679, 2606, 
            2390, 3680, 2607, 2391, 3681, 2608, 2392, 3682, 2609, 2393}], 
           
           Line[{2395, 3144, 3563, 2394, 3145, 3564, 2396, 1423, 2397, 3683, 
            2610, 2398, 3684, 2611, 2399, 3685, 2612, 2400, 3686, 2613, 2401, 
            3687, 3146, 3565, 2402, 3147, 3566, 2403, 1431, 2404, 3688, 2614, 
            2405, 3689, 2615, 2406, 3690, 2616, 2407, 3691, 2617, 2408}], 
           
           Line[{2410, 3148, 3567, 2409, 3149, 3568, 2411, 3150, 3569, 2412, 
            1439, 2413, 3692, 2618, 2414, 3693, 2619, 2415, 3694, 2620, 2416, 
            3695, 3151, 3570, 2417, 3152, 3571, 2418, 3153, 3572, 2419, 1447, 
            2420, 3696, 2621, 2421, 3697, 2622, 2422, 3698, 2623, 2423}], 
           
           Line[{2425, 3154, 3573, 2424, 3155, 3574, 2426, 3156, 3575, 2427, 
            3157, 3576, 2428, 3699, 2624, 2429, 3700, 2625, 2430, 3701, 2626, 
            2431, 3702, 3158, 3577, 2432, 3159, 3578, 2433, 3160, 3579, 2434, 
            3161, 3580, 2435, 1463, 2436, 3703, 2627, 2437, 3704, 2628, 
            2438}], 
           
           Line[{2440, 3162, 3581, 2439, 3163, 3582, 2441, 3164, 3583, 2442, 
            3165, 3584, 2443, 3166, 3585, 2444, 3705, 2629, 2445, 3706, 2630, 
            2446, 3707, 3167, 3586, 2447, 3168, 3587, 2448, 3169, 3588, 2449, 
            3170, 3589, 2450, 3171, 3590, 2451, 1479, 2452, 3708, 2631, 
            2453}], 
           
           Line[{2455, 3172, 3591, 2454, 3173, 3592, 2456, 3174, 3593, 2457, 
            3175, 3594, 2458, 3176, 3595, 2459, 3177, 3596, 2460, 3709, 2632, 
            2461, 3710, 3178, 3597, 2462, 3179, 3598, 2463, 3180, 3599, 2464, 
            3181, 3600, 2465, 3182, 3601, 2466, 3183, 3602, 2467, 1495, 
            2468}], 
           
           Line[{2472, 3711, 2633, 2470, 3712, 2634, 2474, 3713, 2635, 2476, 
            3714, 2636, 2478, 3715, 2637, 2480, 3716, 2638, 2482, 3717, 2639, 
            2484, 3719, 3720, 2640, 2486, 3721, 2641, 2488, 3722, 2642, 2490, 
            3723, 2643, 2492, 3724, 2644, 2494, 3725, 2645, 2496, 3726, 2646, 
            2498}], 
           
           Line[{2497, 3616, 3197, 2495, 3615, 3196, 2493, 3614, 3195, 2491, 
            3613, 3194, 2489, 3612, 3193, 2487, 3611, 3192, 2485, 3610, 3191, 
            3718, 2483, 3609, 3190, 2481, 3608, 3189, 2479, 3607, 3188, 2477, 
            3606, 3187, 2475, 3605, 3186, 2473, 3604, 3185, 2469, 3603, 3184, 
            2471}], 
           
           Line[{2500, 3198, 3617, 2499, 3727, 2647, 2501, 3728, 2648, 2502, 
            3729, 2649, 2503, 3730, 2650, 2504, 3731, 2651, 2505, 3732, 2652, 
            2506, 3733, 3199, 3618, 2507, 3734, 2653, 2508, 3735, 2654, 2509, 
            3736, 2655, 2510, 3737, 2656, 2511, 3738, 2657, 2512, 3739, 2658, 
            2513}], 
           
           Line[{2515, 3200, 3619, 2514, 3201, 3620, 2516, 3740, 2659, 2517, 
            3741, 2660, 2518, 3742, 2661, 2519, 3743, 2662, 2520, 3744, 2663, 
            2521, 3745, 3202, 3621, 2522, 3203, 3622, 2523, 3746, 2664, 2524, 
            3747, 2665, 2525, 3748, 2666, 2526, 3749, 2667, 2527, 3750, 2668, 
            2528}], 
           
           Line[{2530, 3204, 3623, 2529, 3205, 3624, 2531, 3206, 3625, 2532, 
            3751, 2669, 2533, 3752, 2670, 2534, 3753, 2671, 2535, 3754, 2672, 
            2536, 3755, 3207, 3626, 2537, 3208, 3627, 2538, 3209, 3628, 2539, 
            3756, 2673, 2540, 3757, 2674, 2541, 3758, 2675, 2542, 3759, 2676, 
            2543}], 
           
           Line[{2545, 3210, 3629, 2544, 3211, 3630, 2546, 3212, 3631, 2547, 
            3213, 3632, 2548, 3760, 2677, 2549, 3761, 2678, 2550, 3762, 2679, 
            2551, 3763, 3214, 3633, 2552, 3215, 3634, 2553, 3216, 3635, 2554, 
            3217, 3636, 2555, 3764, 2680, 2556, 3765, 2681, 2557, 3766, 2682, 
            2558}], 
           
           Line[{2560, 3218, 3637, 2559, 3219, 3638, 2561, 3220, 3639, 2562, 
            3221, 3640, 2563, 3222, 3641, 2564, 3767, 2683, 2565, 3768, 2684, 
            2566, 3769, 3223, 3642, 2567, 3224, 3643, 2568, 3225, 3644, 2569, 
            3226, 3645, 2570, 3227, 3646, 2571, 3770, 2685, 2572, 3771, 2686, 
            2573}], 
           
           Line[{2587, 2693, 2692, 3774, 2586, 3658, 3238, 2585, 3657, 3237, 
            2584, 3656, 3236, 2583, 3655, 3235, 2582, 3654, 3234, 2581, 3653, 
            3233, 3773, 2580, 2687, 3772, 2579, 3652, 3232, 2578, 3651, 3231, 
            2577, 3650, 3230, 2576, 3649, 3229, 2575, 3648, 3228, 2574, 3647, 
            2690, 2689, 2691}], 
           
           Line[{2695, 3018, 1829, 2694, 3873, 2918, 2696, 3874, 2919, 2697, 
            3875, 2920, 2698, 3876, 2921, 2699, 3877, 2922, 2700, 3878, 2923, 
            2701, 3879, 1837, 2702, 3880, 2924, 2703, 3881, 2925, 2704, 3882, 
            2926, 2705, 3883, 2927, 2706, 3884, 2928, 2707, 3885, 2929, 
            2708}], 
           
           Line[{2710, 3239, 3775, 2709, 1845, 2711, 3886, 2930, 2712, 3887, 
            2931, 2713, 3888, 2932, 2714, 3889, 2933, 2715, 3890, 2934, 2716, 
            3891, 3240, 3776, 2717, 1853, 2718, 3892, 2935, 2719, 3893, 2936, 
            2720, 3894, 2937, 2721, 3895, 2938, 2722, 3896, 2939, 2723}], 
           
           Line[{2725, 3241, 3777, 2724, 3242, 3778, 2726, 1861, 2727, 3897, 
            2940, 2728, 3898, 2941, 2729, 3899, 2942, 2730, 3900, 2943, 2731, 
            3901, 3243, 3779, 2732, 3244, 3780, 2733, 1869, 2734, 3902, 2944, 
            2735, 3903, 2945, 2736, 3904, 2946, 2737, 3905, 2947, 2738}], 
           
           Line[{2740, 3245, 3781, 2739, 3246, 3782, 2741, 3247, 3783, 2742, 
            1877, 2743, 3906, 2948, 2744, 3907, 2949, 2745, 3908, 2950, 2746, 
            3909, 3248, 3784, 2747, 3249, 3785, 2748, 3250, 3786, 2749, 1885, 
            2750, 3910, 2951, 2751, 3911, 2952, 2752, 3912, 2953, 2753}], 
           
           Line[{2755, 3251, 3787, 2754, 3252, 3788, 2756, 3253, 3789, 2757, 
            3254, 3790, 2758, 3913, 2954, 2759, 3914, 2955, 2760, 3915, 2956, 
            2761, 3916, 3255, 3791, 2762, 3256, 3792, 2763, 3257, 3793, 2764, 
            3258, 3794, 2765, 1901, 2766, 3917, 2957, 2767, 3918, 2958, 
            2768}], 
           
           Line[{2770, 3259, 3795, 2769, 3260, 3796, 2771, 3261, 3797, 2772, 
            3262, 3798, 2773, 3263, 3799, 2774, 3919, 2959, 2775, 3920, 2960, 
            2776, 3921, 3264, 3800, 2777, 3265, 3801, 2778, 3266, 3802, 2779, 
            3267, 3803, 2780, 3268, 3804, 2781, 1917, 2782, 3922, 2961, 
            2783}], 
           
           Line[{2785, 3269, 3805, 2784, 3270, 3806, 2786, 3271, 3807, 2787, 
            3272, 3808, 2788, 3273, 3809, 2789, 3274, 3810, 2790, 3923, 2962, 
            2791, 3924, 3275, 3811, 2792, 3276, 3812, 2793, 3277, 3813, 2794, 
            3278, 3814, 2795, 3279, 3815, 2796, 3280, 3816, 2797, 1933, 
            2798}], 
           
           Line[{2802, 3925, 2963, 2800, 3926, 2964, 2804, 3927, 2965, 2806, 
            3928, 2966, 2808, 3929, 2967, 2810, 3930, 2968, 2812, 3931, 2969, 
            2814, 3933, 3934, 2970, 2816, 3935, 2971, 2818, 3936, 2972, 2820, 
            3937, 2973, 2822, 3938, 2974, 2824, 3939, 2975, 2826, 3940, 2976, 
            2828}], 
           
           Line[{2827, 3830, 3294, 2825, 3829, 3293, 2823, 3828, 3292, 2821, 
            3827, 3291, 2819, 3826, 3290, 2817, 3825, 3289, 2815, 3824, 3288, 
            3932, 2813, 3823, 3287, 2811, 3822, 3286, 2809, 3821, 3285, 2807, 
            3820, 3284, 2805, 3819, 3283, 2803, 3818, 3282, 2799, 3817, 3281, 
            2801}], 
           
           Line[{2830, 3295, 3831, 2829, 3941, 2977, 2831, 3942, 2978, 2832, 
            3943, 2979, 2833, 3944, 2980, 2834, 3945, 2981, 2835, 3946, 2982, 
            2836, 3947, 3296, 3832, 2837, 3948, 2983, 2838, 3949, 2984, 2839, 
            3950, 2985, 2840, 3951, 2986, 2841, 3952, 2987, 2842, 3953, 2988, 
            2843}], 
           
           Line[{2845, 3297, 3833, 2844, 3298, 3834, 2846, 3954, 2989, 2847, 
            3955, 2990, 2848, 3956, 2991, 2849, 3957, 2992, 2850, 3958, 2993, 
            2851, 3959, 3299, 3835, 2852, 3300, 3836, 2853, 3960, 2994, 2854, 
            3961, 2995, 2855, 3962, 2996, 2856, 3963, 2997, 2857, 3964, 2998, 
            2858}], 
           
           Line[{2860, 3301, 3837, 2859, 3302, 3838, 2861, 3303, 3839, 2862, 
            3965, 2999, 2863, 3966, 3000, 2864, 3967, 3001, 2865, 3968, 3002, 
            2866, 3969, 3304, 3840, 2867, 3305, 3841, 2868, 3306, 3842, 2869, 
            3970, 3003, 2870, 3971, 3004, 2871, 3972, 3005, 2872, 3973, 3006, 
            2873}], 
           
           Line[{2875, 3307, 3843, 2874, 3308, 3844, 2876, 3309, 3845, 2877, 
            3310, 3846, 2878, 3974, 3007, 2879, 3975, 3008, 2880, 3976, 3009, 
            2881, 3977, 3311, 3847, 2882, 3312, 3848, 2883, 3313, 3849, 2884, 
            3314, 3850, 2885, 3978, 3010, 2886, 3979, 3011, 2887, 3980, 3012, 
            2888}], 
           
           Line[{2890, 3315, 3851, 2889, 3316, 3852, 2891, 3317, 3853, 2892, 
            3318, 3854, 2893, 3319, 3855, 2894, 3981, 3013, 2895, 3982, 3014, 
            2896, 3983, 3320, 3856, 2897, 3321, 3857, 2898, 3322, 3858, 2899, 
            3323, 3859, 2900, 3324, 3860, 2901, 3984, 3015, 2902, 3985, 3016, 
            2903}], 
           
           Line[{2917, 3023, 3022, 3988, 2916, 3872, 3335, 2915, 3871, 3334, 
            2914, 3870, 3333, 2913, 3869, 3332, 2912, 3868, 3331, 2911, 3867, 
            3330, 3987, 2910, 3017, 3986, 2909, 3866, 3329, 2908, 3865, 3328, 
            2907, 3864, 3327, 2906, 3863, 3326, 2905, 3862, 3325, 2904, 3861, 
            3020, 3019, 3021}]}, {
           GrayLevel[0.2], 
           
           Line[{731, 954, 3337, 732, 969, 3349, 760, 3447, 984, 775, 3453, 
            999, 790, 3461, 1014, 805, 3471, 1029, 820, 3483, 1044, 835, 3497,
             1059, 3386, 850, 1074, 3399, 865, 3516, 1089, 880, 3521, 1104, 
            895, 3528, 1119, 910, 3537, 1134, 925, 3547, 1149, 940}], 
           
           Line[{733, 955, 3338, 734, 970, 3350, 761, 985, 3360, 776, 3454, 
            1000, 791, 3462, 1015, 806, 3472, 1030, 821, 3484, 1045, 836, 
            3498, 1060, 3387, 851, 1075, 3400, 866, 1090, 3411, 881, 3522, 
            1105, 896, 3529, 1120, 911, 3538, 1135, 926, 3548, 1150, 941}], 
           
           Line[{735, 956, 3339, 736, 971, 3351, 762, 986, 3361, 777, 1001, 
            3369, 792, 3463, 1016, 807, 3473, 1031, 822, 3485, 1046, 837, 
            3499, 1061, 3388, 852, 1076, 3401, 867, 1091, 3412, 882, 1106, 
            3421, 897, 3530, 1121, 912, 3539, 1136, 927, 3549, 1151, 942}], 
           
           Line[{737, 957, 3340, 738, 972, 3352, 763, 987, 3362, 778, 1002, 
            3370, 793, 1017, 3376, 808, 3474, 1032, 823, 3486, 1047, 838, 
            3500, 1062, 3389, 853, 1077, 3402, 868, 1092, 3413, 883, 1107, 
            3422, 898, 1122, 3429, 913, 3540, 1137, 928, 3550, 1152, 943}], 
           
           Line[{739, 958, 3341, 740, 973, 3353, 764, 988, 3363, 779, 1003, 
            3371, 794, 1018, 3377, 809, 1033, 3381, 824, 3487, 1048, 839, 
            3501, 1063, 3390, 854, 1078, 3403, 869, 1093, 3414, 884, 1108, 
            3423, 899, 1123, 3430, 914, 1138, 3435, 929, 3551, 1153, 944}], 
           
           Line[{741, 959, 3342, 743, 974, 3354, 765, 989, 3364, 780, 1004, 
            3372, 795, 1019, 3378, 810, 1034, 3382, 825, 1049, 3384, 840, 
            3502, 1064, 3391, 855, 1079, 3404, 870, 1094, 3415, 885, 1109, 
            3424, 900, 1124, 3431, 915, 1139, 3436, 930, 1154, 3439, 945}], 
           
           Line[{745, 3441, 961, 746, 3444, 976, 767, 3449, 991, 782, 3456, 
            1006, 797, 3465, 1021, 812, 3476, 1036, 827, 3489, 1051, 842, 
            3505, 1066, 3392, 857, 3514, 1081, 872, 3518, 1096, 887, 3524, 
            1111, 902, 3532, 1126, 917, 3542, 1141, 932, 3553, 1156, 947}], 
           
           Line[{747, 962, 3343, 748, 3445, 977, 768, 3450, 992, 783, 3457, 
            1007, 798, 3466, 1022, 813, 3477, 1037, 828, 3490, 1052, 843, 
            3506, 1067, 3393, 858, 1082, 3405, 873, 3519, 1097, 888, 3525, 
            1112, 903, 3533, 1127, 918, 3543, 1142, 933, 3554, 1157, 948}], 
           
           Line[{749, 963, 3344, 750, 978, 3355, 769, 3451, 993, 784, 3458, 
            1008, 799, 3467, 1023, 814, 3478, 1038, 829, 3491, 1053, 844, 
            3507, 1068, 3394, 859, 1083, 3406, 874, 1098, 3416, 889, 3526, 
            1113, 904, 3534, 1128, 919, 3544, 1143, 934, 3555, 1158, 949}], 
           
           Line[{751, 964, 3345, 752, 979, 3356, 770, 994, 3365, 785, 3459, 
            1009, 800, 3468, 1024, 815, 3479, 1039, 830, 3492, 1054, 845, 
            3508, 1069, 3395, 860, 1084, 3407, 875, 1099, 3417, 890, 1114, 
            3425, 905, 3535, 1129, 920, 3545, 1144, 935, 3556, 1159, 950}], 
           
           Line[{753, 965, 3346, 754, 980, 3357, 771, 995, 3366, 786, 1010, 
            3373, 801, 3469, 1025, 816, 3480, 1040, 831, 3493, 1055, 846, 
            3509, 1070, 3396, 861, 1085, 3408, 876, 1100, 3418, 891, 1115, 
            3426, 906, 1130, 3432, 921, 3546, 1145, 936, 3557, 1160, 951}], 
           
           Line[{755, 966, 3347, 756, 981, 3358, 772, 996, 3367, 787, 1011, 
            3374, 802, 1026, 3379, 817, 3481, 1041, 832, 3494, 1056, 847, 
            3510, 1071, 3397, 862, 1086, 3409, 877, 1101, 3419, 892, 1116, 
            3427, 907, 1131, 3433, 922, 1146, 3437, 937, 3558, 1161, 952}], 
           
           Line[{757, 967, 3348, 758, 982, 3359, 773, 997, 3368, 788, 1012, 
            3375, 803, 1027, 3380, 818, 1042, 3383, 833, 3495, 1057, 848, 
            3511, 1072, 3398, 863, 1087, 3410, 878, 1102, 3420, 893, 1117, 
            3428, 908, 1132, 3434, 923, 1147, 3438, 938, 1164, 3560, 1165, 
            1166}], 
           
           Line[{939, 1148, 3559, 1163, 924, 1133, 3536, 909, 1118, 3527, 894,
             1103, 3520, 879, 1088, 3515, 864, 1073, 3512, 849, 3385, 1058, 
            3496, 834, 1043, 3482, 819, 1028, 3470, 804, 1013, 3460, 789, 998,
             3452, 774, 983, 3446, 759, 968, 3442, 730, 3336, 953, 1162, 
            1167}], 
           
           Line[{946, 1155, 3552, 931, 1140, 3541, 916, 1125, 3531, 901, 1110,
             3523, 886, 1095, 3517, 871, 1080, 3513, 856, 1065, 3504, 3503, 
            841, 1050, 3488, 826, 1035, 3475, 811, 1020, 3464, 796, 1005, 
            3455, 781, 990, 3448, 766, 975, 3443, 744, 960, 3440, 742}], 
           
           Line[{1169, 1392, 3659, 1170, 1407, 1198, 3564, 1422, 1213, 3568, 
            1437, 1228, 3574, 1452, 1243, 3582, 1467, 1258, 3592, 1482, 1273, 
            3604, 1497, 3712, 1288, 1512, 3727, 1303, 3620, 1527, 1318, 3624, 
            1542, 1333, 3630, 1557, 1348, 3638, 1572, 1363, 3648, 1587, 
            1378}], 
           
           Line[{1171, 1393, 3660, 1172, 1408, 3672, 1199, 1423, 1214, 3569, 
            1438, 1229, 3575, 1453, 1244, 3583, 1468, 1259, 3593, 1483, 1274, 
            3605, 1498, 3713, 1289, 1513, 3728, 1304, 1528, 3740, 1319, 3625, 
            1543, 1334, 3631, 1558, 1349, 3639, 1573, 1364, 3649, 1588, 
            1379}], 
           
           Line[{1173, 1394, 3661, 1174, 1409, 3673, 1200, 1424, 3683, 1215, 
            1439, 1230, 3576, 1454, 1245, 3584, 1469, 1260, 3594, 1484, 1275, 
            3606, 1499, 3714, 1290, 1514, 3729, 1305, 1529, 3741, 1320, 1544, 
            3751, 1335, 3632, 1559, 1350, 3640, 1574, 1365, 3650, 1589, 
            1380}], 
           
           Line[{1175, 1395, 3662, 1176, 1410, 3674, 1201, 1425, 3684, 1216, 
            1440, 3692, 1231, 1455, 3699, 1246, 3585, 1470, 1261, 3595, 1485, 
            1276, 3607, 1500, 3715, 1291, 1515, 3730, 1306, 1530, 3742, 1321, 
            1545, 3752, 1336, 1560, 3760, 1351, 3641, 1575, 1366, 3651, 1590, 
            1381}], 
           
           Line[{1177, 1396, 3663, 1178, 1411, 3675, 1202, 1426, 3685, 1217, 
            1441, 3693, 1232, 1456, 3700, 1247, 1471, 3705, 1262, 3596, 1486, 
            1277, 3608, 1501, 3716, 1292, 1516, 3731, 1307, 1531, 3743, 1322, 
            1546, 3753, 1337, 1561, 3761, 1352, 1576, 3767, 1367, 3652, 1591, 
            1382}], 
           
           Line[{1179, 1397, 3664, 1180, 1412, 3676, 1203, 1427, 3686, 1218, 
            1442, 3694, 1233, 1457, 3701, 1248, 1472, 3706, 1263, 1487, 3709, 
            1278, 3609, 1502, 3717, 1293, 1517, 3732, 1308, 1532, 3744, 1323, 
            1547, 3754, 1338, 1562, 3762, 1353, 1577, 3768, 1368, 1592, 3772, 
            1383}], 
           
           Line[{1181, 1398, 3665, 1183, 1413, 3677, 1204, 1428, 3687, 1219, 
            1443, 3695, 1234, 1458, 3702, 1249, 1473, 3707, 1264, 1488, 3710, 
            1279, 1503, 3718, 3719, 1294, 1518, 3733, 1309, 1533, 3745, 1324, 
            1548, 3755, 1339, 1563, 3763, 1354, 1578, 3769, 1369, 1593, 3773, 
            1384}], 
           
           Line[{1185, 1400, 3666, 1186, 1415, 1206, 3566, 1430, 1221, 3571, 
            1445, 1236, 3578, 1460, 1251, 3587, 1475, 1266, 3598, 1490, 1281, 
            3611, 1505, 3721, 1296, 1520, 3734, 1311, 3622, 1535, 1326, 3627, 
            1550, 1341, 3634, 1565, 1356, 3643, 1580, 1371, 3654, 1595, 
            1386}], 
           
           Line[{1187, 1401, 3667, 1188, 1416, 3678, 1207, 1431, 1222, 3572, 
            1446, 1237, 3579, 1461, 1252, 3588, 1476, 1267, 3599, 1491, 1282, 
            3612, 1506, 3722, 1297, 1521, 3735, 1312, 1536, 3746, 1327, 3628, 
            1551, 1342, 3635, 1566, 1357, 3644, 1581, 1372, 3655, 1596, 
            1387}], 
           
           Line[{1189, 1402, 3668, 1190, 1417, 3679, 1208, 1432, 3688, 1223, 
            1447, 1238, 3580, 1462, 1253, 3589, 1477, 1268, 3600, 1492, 1283, 
            3613, 1507, 3723, 1298, 1522, 3736, 1313, 1537, 3747, 1328, 1552, 
            3756, 1343, 3636, 1567, 1358, 3645, 1582, 1373, 3656, 1597, 
            1388}], 
           
           Line[{1191, 1403, 3669, 1192, 1418, 3680, 1209, 1433, 3689, 1224, 
            1448, 3696, 1239, 1463, 1254, 3590, 1478, 1269, 3601, 1493, 1284, 
            3614, 1508, 3724, 1299, 1523, 3737, 1314, 1538, 3748, 1329, 1553, 
            3757, 1344, 1568, 3764, 1359, 3646, 1583, 1374, 3657, 1598, 
            1389}], 
           
           Line[{1193, 1404, 3670, 1194, 1419, 3681, 1210, 1434, 3690, 1225, 
            1449, 3697, 1240, 1464, 3703, 1255, 1479, 1270, 3602, 1494, 1285, 
            3615, 1509, 3725, 1300, 1524, 3738, 1315, 1539, 3749, 1330, 1554, 
            3758, 1345, 1569, 3765, 1360, 1584, 3770, 1375, 3658, 1599, 
            1390}], 
           
           Line[{1195, 1405, 3671, 1196, 1420, 3682, 1211, 1435, 3691, 1226, 
            1450, 3698, 1241, 1465, 3704, 1256, 1480, 3708, 1271, 1495, 1286, 
            3616, 1510, 3726, 1301, 1525, 3739, 1316, 1540, 3750, 1331, 1555, 
            3759, 1346, 1570, 3766, 1361, 1585, 3771, 1376, 1602, 3774, 1603, 
            1604}], 
           
           Line[{1377, 1586, 3647, 1601, 1362, 1571, 3637, 1347, 1556, 3629, 
            1332, 1541, 3623, 1317, 1526, 3619, 1302, 1511, 3617, 1287, 3711, 
            1496, 3603, 1272, 1481, 3591, 1257, 1466, 3581, 1242, 1451, 3573, 
            1227, 1436, 3567, 1212, 1421, 3563, 1197, 1406, 3561, 1168, 1391, 
            1600, 1605}], 
           
           Line[{1385, 1594, 3653, 1370, 1579, 3642, 1355, 1564, 3633, 1340, 
            1549, 3626, 1325, 1534, 3621, 1310, 1519, 3618, 1295, 3720, 1504, 
            3610, 1280, 1489, 3597, 1265, 1474, 3586, 1250, 1459, 3577, 1235, 
            1444, 3570, 1220, 1429, 3565, 1205, 1414, 3562, 1184, 1399, 
            1182}], 
           
           Line[{1607, 1830, 3873, 1608, 1845, 1636, 3778, 1860, 1651, 3782, 
            1875, 1666, 3788, 1890, 1681, 3796, 1905, 1696, 3806, 1920, 1711, 
            3818, 1935, 3926, 1726, 1950, 3941, 1741, 3834, 1965, 1756, 3838, 
            1980, 1771, 3844, 1995, 1786, 3852, 2010, 1801, 3862, 2025, 
            1816}], 
           
           Line[{1609, 1831, 3874, 1610, 1846, 3886, 1637, 1861, 1652, 3783, 
            1876, 1667, 3789, 1891, 1682, 3797, 1906, 1697, 3807, 1921, 1712, 
            3819, 1936, 3927, 1727, 1951, 3942, 1742, 1966, 3954, 1757, 3839, 
            1981, 1772, 3845, 1996, 1787, 3853, 2011, 1802, 3863, 2026, 
            1817}], 
           
           Line[{1611, 1832, 3875, 1612, 1847, 3887, 1638, 1862, 3897, 1653, 
            1877, 1668, 3790, 1892, 1683, 3798, 1907, 1698, 3808, 1922, 1713, 
            3820, 1937, 3928, 1728, 1952, 3943, 1743, 1967, 3955, 1758, 1982, 
            3965, 1773, 3846, 1997, 1788, 3854, 2012, 1803, 3864, 2027, 
            1818}], 
           
           Line[{1613, 1833, 3876, 1614, 1848, 3888, 1639, 1863, 3898, 1654, 
            1878, 3906, 1669, 1893, 3913, 1684, 3799, 1908, 1699, 3809, 1923, 
            1714, 3821, 1938, 3929, 1729, 1953, 3944, 1744, 1968, 3956, 1759, 
            1983, 3966, 1774, 1998, 3974, 1789, 3855, 2013, 1804, 3865, 2028, 
            1819}], 
           
           Line[{1615, 1834, 3877, 1616, 1849, 3889, 1640, 1864, 3899, 1655, 
            1879, 3907, 1670, 1894, 3914, 1685, 1909, 3919, 1700, 3810, 1924, 
            1715, 3822, 1939, 3930, 1730, 1954, 3945, 1745, 1969, 3957, 1760, 
            1984, 3967, 1775, 1999, 3975, 1790, 2014, 3981, 1805, 3866, 2029, 
            1820}], 
           
           Line[{1617, 1835, 3878, 1618, 1850, 3890, 1641, 1865, 3900, 1656, 
            1880, 3908, 1671, 1895, 3915, 1686, 1910, 3920, 1701, 1925, 3923, 
            1716, 3823, 1940, 3931, 1731, 1955, 3946, 1746, 1970, 3958, 1761, 
            1985, 3968, 1776, 2000, 3976, 1791, 2015, 3982, 1806, 2030, 3986, 
            1821}], 
           
           Line[{1619, 1836, 3879, 1621, 1851, 3891, 1642, 1866, 3901, 1657, 
            1881, 3909, 1672, 1896, 3916, 1687, 1911, 3921, 1702, 1926, 3924, 
            1717, 1941, 3932, 3933, 1732, 1956, 3947, 1747, 1971, 3959, 1762, 
            1986, 3969, 1777, 2001, 3977, 1792, 2016, 3983, 1807, 2031, 3987, 
            1822}], 
           
           Line[{1623, 1838, 3880, 1624, 1853, 1644, 3780, 1868, 1659, 3785, 
            1883, 1674, 3792, 1898, 1689, 3801, 1913, 1704, 3812, 1928, 1719, 
            3825, 1943, 3935, 1734, 1958, 3948, 1749, 3836, 1973, 1764, 3841, 
            1988, 1779, 3848, 2003, 1794, 3857, 2018, 1809, 3868, 2033, 
            1824}], 
           
           Line[{1625, 1839, 3881, 1626, 1854, 3892, 1645, 1869, 1660, 3786, 
            1884, 1675, 3793, 1899, 1690, 3802, 1914, 1705, 3813, 1929, 1720, 
            3826, 1944, 3936, 1735, 1959, 3949, 1750, 1974, 3960, 1765, 3842, 
            1989, 1780, 3849, 2004, 1795, 3858, 2019, 1810, 3869, 2034, 
            1825}], 
           
           Line[{1627, 1840, 3882, 1628, 1855, 3893, 1646, 1870, 3902, 1661, 
            1885, 1676, 3794, 1900, 1691, 3803, 1915, 1706, 3814, 1930, 1721, 
            3827, 1945, 3937, 1736, 1960, 3950, 1751, 1975, 3961, 1766, 1990, 
            3970, 1781, 3850, 2005, 1796, 3859, 2020, 1811, 3870, 2035, 
            1826}], 
           
           Line[{1629, 1841, 3883, 1630, 1856, 3894, 1647, 1871, 3903, 1662, 
            1886, 3910, 1677, 1901, 1692, 3804, 1916, 1707, 3815, 1931, 1722, 
            3828, 1946, 3938, 1737, 1961, 3951, 1752, 1976, 3962, 1767, 1991, 
            3971, 1782, 2006, 3978, 1797, 3860, 2021, 1812, 3871, 2036, 
            1827}], 
           
           Line[{1631, 1842, 3884, 1632, 1857, 3895, 1648, 1872, 3904, 1663, 
            1887, 3911, 1678, 1902, 3917, 1693, 1917, 1708, 3816, 1932, 1723, 
            3829, 1947, 3939, 1738, 1962, 3952, 1753, 1977, 3963, 1768, 1992, 
            3972, 1783, 2007, 3979, 1798, 2022, 3984, 1813, 3872, 2037, 
            1828}], 
           
           Line[{1633, 1843, 3885, 1634, 1858, 3896, 1649, 1873, 3905, 1664, 
            1888, 3912, 1679, 1903, 3918, 1694, 1918, 3922, 1709, 1933, 1724, 
            3830, 1948, 3940, 1739, 1963, 3953, 1754, 1978, 3964, 1769, 1993, 
            3973, 1784, 2008, 3980, 1799, 2023, 3985, 1814, 2040, 3988, 2041, 
            2042}], 
           
           Line[{1815, 2024, 3861, 2039, 1800, 2009, 3851, 1785, 1994, 3843, 
            1770, 1979, 3837, 1755, 1964, 3833, 1740, 1949, 3831, 1725, 3925, 
            1934, 3817, 1710, 1919, 3805, 1695, 1904, 3795, 1680, 1889, 3787, 
            1665, 1874, 3781, 1650, 1859, 3777, 1635, 1844, 3775, 1606, 1829, 
            2038, 2043}], 
           
           Line[{1823, 2032, 3867, 1808, 2017, 3856, 1793, 2002, 3847, 1778, 
            1987, 3840, 1763, 1972, 3835, 1748, 1957, 3832, 1733, 3934, 1942, 
            3824, 1718, 1927, 3811, 1703, 1912, 3800, 1688, 1897, 3791, 1673, 
            1882, 3784, 1658, 1867, 3779, 1643, 1852, 3776, 1622, 1837, 
            1620}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1: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
fKlkJdqTznrEU2wMfuEHw93z5qBXVNZEz68CFet+Vjj8cQwYL3CMJtrOwa/F
fxw3awC1BYZNeEmMg+73qhMD2+fg3bXzn26FlaOedf6U43R/Cm7bafvqnh6o
Ddi65IDVP2e+7vmRd6UWScdMJnCTe2HXDkM7t0NYvXHC9/tERg3aUXl385VN
/YBTuKZb/5sM2s9WeJhWsPXiKuR/ZP8A1PGWX0qpIoNGpJLqSwMciql13XTG
cBCkb5ziNn1C/n/qOtNoqvq3jyNDJYnKEI2GjEkSRX63DM1pQoUiKpE5VCpR
SWhSpKRuQ4ZkKkXiXI55nmUoOdPe+xxzRclw389+1tr/57/WaT1vz5uzz/4N
1/f74nw+EHM6flwyoRzZ/z8ezPt8XpUcyquS5/FI73dlP3wxGvfYSM5TGSGf
0lIRMg+sq3FLOMeArZ0+5U1ryXu7rMsLP1OKHl6i59V9Z0C2gMjI370DkLav
Y7HLM0BPdh+4oubPBN1yxbaFUQOgwbzhl+NDQymmbWleP5hwolHx+QXjAVhw
y7BdcH8JEuLzqoxSXhWLt4nvZzu64NC0wKp/ENnfzy3dsTG6ApE9lvDkdoMD
bjlzV2IY4i/SHo8Nl6Ps0XfZgQK9EMukGWKfhmCtc6Hb+K5yxLbNkJxd9hke
ibGCzZ4NAUtT79zrjD/9lRsof+V/fCs45VtRp3wrdmPRH0NNGcBUTv9+fAeZ
u2Z2XxlzAfSub8ZyXiUDnkwLeJ6dHYAs47xhie00dEBznqe0BRMcVArxeXkD
0HpqozNvfQlavL3rjTWdCUN9g+ueOg9Ay1T9j5Y1xegbn2/FlPKtcBNCNfNr
u8HIdnt8AtlzPwxOSr8l+/KrKLU8t54e0P8u+eo0bwg4hnkXBuzKkN/usYe1
g71wfptUz9ncIfj2b+bhlCo6Ok55JFX4PJL8HhZRysMSQNuitpo8L99r9u0T
WDEI/e+mtdRFStDMsmdHvsgw4VLndfOK9gH4fteIxRIsRiKLvRsVHzCB5RrE
9ggfAN5EjnK9yEc0RnlY3CgPSwzlYdlUcNFz9m0PpKkHHrYn9/kDlxu5Alfo
KHxCryqB1gsFPWduTpL7/KxM8vnk76V/+Blxys/I72dpoPwsy7Ti3P0GGOCl
5/rz7PgAbJXjOl1kFyGLMJnAtyeZILX/9JcVmQNw5IPc3W+/PiBfPj/LV8rP
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
RWiIj2v9m+Ja83tPtlLeE34edQLFo/4fnnJEZw==
         "]], {
       DisplayFunction -> Identity, 
        Ticks -> {Automatic, Automatic, Automatic}, 
        FaceGrids -> {{{0, 0, -1}, {{0, 
             Rational[1, 10], 
             Rational[1, 5], 
             Rational[3, 10], 
             Rational[2, 5], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[3, 5], 
             Rational[7, 10], 
             Rational[4, 5], 
             Rational[9, 10], 1}}}, {{0, 1, 0}, {{0, 
             Rational[1, 10], 
             Rational[1, 5], 
             Rational[3, 10], 
             Rational[2, 5], 
             Rational[1, 2]}, {0, 1, 2, 3, 4, 5}}}, {{1, 0, 0}, {{
             Rational[1, 2], 
             Rational[3, 5], 
             Rational[7, 10], 
             Rational[4, 5], 
             Rational[9, 10], 1}, {0, 1, 2, 3, 4, 5}}}}, DisplayFunction -> 
        Identity, Axes -> True, AxesLabel -> {
          Style["", 15, Bold, 
           RGBColor[1, 0, 0]], 
          Style["", 15, Bold, 
           RGBColor[1, 0, 0]], 
          Style["", 15, Bold, 
           RGBColor[1, 0, 0]]}, 
        AxesOrigin -> {Automatic, Automatic, Automatic}, Boxed -> False, 
        BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, 
        FaceGrids -> {{0, 0, -1}, {0, 1, 0}, {1, 0, 0}}, FaceGridsStyle -> 
        Automatic, ImageSize -> {473., Automatic}, 
        LabelStyle -> {FontSize -> 13.5, Bold}, 
        Method -> {"DefaultBoundaryStyle" -> Directive[
            GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
        PlotRange -> {{0., 0.5}, {0.6, 1.}, {0., 4.949999488928592}}, 
        PlotRangePadding -> {
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
        ViewPoint -> {-1.963961, -1.03555567, 0.70428}}], 
      Placed[
       Unevaluated[
        SwatchLegend[{
          Directive[Lighting -> Automatic, 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[Lighting -> Automatic, 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[Lighting -> Automatic, 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(r\)]\)", 
          "\!\(\*SubscriptBox[\(M\), \(r\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(r\)]\)"}, LegendMarkers -> Graphics3D[
           Sphere[{0, 0, 0}], ViewPoint -> {0, 0, 
             DirectedInfinity[1]}, 
           PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 0], 
         LabelStyle -> {FontSize -> 13.5, Bold}, LegendLayout -> "Column", 
         LegendMarkerSize -> 12]], {0.1, 0.1}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.957401593045293*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"7b410a0e-d5b1-491b-9e0f-fe18103f0232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "^", "3"}], "+", 
           RowBox[{"b", "^", "3"}]}], ")"}], "/", "2"}]}], "-", 
       RowBox[{
        FractionBox["5", "10"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "3"]}]}], ",", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["a", "4"], "4"]}], "+", 
          FractionBox[
           SuperscriptBox["b", "4"], "4"]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "a"}], "+", "b"}]], ",", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "b"}], ")"}], "/", "2"}], ")"}], "^", "3"}]}], 
       "+", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "a"}], ")"}], "^", "3"}], "/", "32"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "0.5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0.6", ",", "1"}], "}"}], ",", 
    RowBox[{"ImageSize", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"473.", ",", " ", "Automatic"}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRange", " ", "->", "Automatic"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "13.5`"}], ",", "Bold"}], "}"}]}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"FaceGrids", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.963961`"}], ",", 
       RowBox[{"-", "1.03555567`"}], ",", "0.70428`"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", "5", "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "15", ",", "Bold", ",", "Red"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "15", ",", "Bold", ",", "Red"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "15", ",", "Bold", ",", "Red"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(R\), \(c\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(M\), \(c\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(L\), \(c\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9574016305292115`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"cd66b294-c6e0-4cd0-b7b5-66e583becb41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1580036`", ",", 
   TagBox[
    GraphicsBox[{InsetBox[
       Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
95n3shDyyJZBo2a6kWr0XCCef3lkuMHPU3K7qtHzJ/H8yyNkdnaF+mWac0Ku
tatT/iZ+Hkw0/rlhFVa5fWn+Nkc8L5QSF7skX+1NNH8bIJ4XSokg92LDbswt
00iVeF4oJY59BFKCXvXo+a94/uURQfdgufJj9ej5gXj+FX1faQe3P5NuQM8n
xfMvj/Rz1XI5coXmnOceRNUeWM4nY1+MeTPMgeZvuyyy1KdM4ZPJzYrHF4fV
oOd54vsXPrm4t6jHFW4Neh4W1+V4WEMpUVc78tl4QC16bjyj+tQ+s5R8VfQt
u2Vci56TxfNvKZk/O7OhcH8ten4qnn9LicdXdYMNd2nOCbnWzE752xrxvMAn
lwM22F5dQPO3ieJ5gU9eLzzvu/RCA3pWEs8LfLJnlLrSuaIG9MwRzwul5Nac
pJm3jBvRc7h4/i0lw65sORHxphE9B4jn31LyR89rhv6MJvR8QDz/lhLXCX3D
l/2lOeeJTyf8TumXkfG/ekx29KT526YD/t8Mh5aRbv9ihPNi69Czrvi+hk/u
eCr4RCrS/K0355PalwI+ia44vtWQ1KNn/vV40yM/+cSiR11MnUM9ev4lnn/5
ZE7ZKJ1xd2jOGSief/lktn9KrmYizTkh19rVKX9bIJ4Xykje5qkbLQNp/jZS
PC+UkcM3hAphmMulkBbxvMAnyqd9tAYYNqPnFPG8wCdHh0b1LrzbjJ6fi+df
Prm5d+vo1ZjbZBEv8fzLJyYeA6PC/FrQ8w7x/Msnm+2fLdUf04qe94v7hpaT
g5Ev+x+PakDPSz2Wbl0uX07C9dw3DetN87fRhtvO9SwtIyNi1vnLrmhEz10a
HT/HxJSRg+4lagc8G9Fz9jMPvmdYGblxoM7sRXgjen4nnn9F3m4YXe9STXPO
i+L5t4x8kPcxCdVqQs+Yy3XK3/TE80I5ObJY5ZnVMJq/qYjnhXIy6q2v8z67
VvQsEM8LZWTifJuoCd9b0XOUeF4oI/vaLFvzNdvQc5B4/i0jkfw5jn8vt6Fn
V/H8W0YU+3/w0R3Qjp7XieffMqJyxv/e1lCac1pxqxMCewqIldzLHCttmr8Z
3JKXshCWk6fO8fpSh5rR8yCzweOHJpcTBzf7O/s/N6Pn2h4TNmW+KSeeUxc5
yDY3o+e4n0aeAQHlJMlXS65+Sgt6fiSef8vJ6JvfPp/b1YKeT4vn33Jibp1T
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
6f/f3e92peeeiP7+uvvdxvS8bCsOy++eRfPTlSy/O0p0HZiZVs3yu4uZvv3d
/e6/jbvn8AfWs/xu958tiZ7fGlh+9/tZemm/Ljey/O6KBRNe9XBsZvndt5h+
+939bo34tAfb6ytYfvdaY9EFbkI1y+/ev0F0Q71dw/K7ezP98Lv73Y7DRTe2
TCHL766hfZagJpbfrV4XWFLt08Lyu+8y/eq7+91PqRWmf8u5LL/70LN5W9bp
8lh+dxzTN7673y04NVN+fW4zy+8+peJpk5DTyvK7NzP927v73dTkv6rRo/ks
v9uO6Zfe3e/2rJv5IHFUO9Xd757C9Cfvuq4Sv3tJwMQW44gYjMeA03NyJ55g
+93f2q4PG7alnOV3L/ufvt/E726n43Dtcpbf3ZfpB97d754pei6I7iNh0tX/
hMRjnfuVpb7kFFO3xO+hJyE3zr00QhAoisvEfYQeYPzQFGD78urIIqbvB4ln
jrwYOcpHpowyFPeRSEJes1PT6lV+GfP5Kcif6Q7bsi2tnLp2cNxOx+w7eH8f
NVR5idpkUfwo7pMQgFxfZWrO4dISpr8HiTc+7PX+mbuBQ2WJ+zYkIf8x00fy
jFEFs54U5L5yF5ym6lVSd8TrSSV+3x7vz/4rq6hocZ+lG3h/n2tprf9sRxll
IdbhNXnvdZfGQOUJ5dRjcX+PUOTlDeWtL0vKmX4aJN6YYKMl7ZtVSZ0U92FI
Qj6p3X304whRnCZefwqJKy7GcfpHVFNG4s9JRb75gS7vaT6X8hSvPx35s/h+
KcO0aylB0lPPTw5upF9KS96eRd84lI24X8dL5E/yAs963q1g+lG8Rz5c20ne
dksl5SveVyTy2c6nn+8bXcX0kSBxy9yxK8oHn+NSo8R9G0gfYC+Tcwl6DjXM
flNIH+DZZ2NHi+K3XPF+U5H3K0iYbmHBY/rnpCOfpDXg/TMBj9kv8cVSTXUf
H3/Lp6zM/3aMXXCW9Ll9Marf9LlV1FnxefUMufNAm2ljtKuZfhHvkFfm3p3X
0IPLnG8RyG/dk0rblMqlVon7X0Uhv5DTcGLYkxqmfwWJrwzHZMwOmcBj+gWR
Pr2Ry2XlQp7wqNFifYhvJVHlNWjReD51WqxPKvl84zCd9C98Kl+sTzry5GsX
1ENs6xh9iG+1S3f8t+laAuqBWB/iW2XZx/37LVlPXXDi/9YWXWcgritrjFR7
WMulvJNCOhfceIK87lmhWWVFDTVPfJ6HIP/8rCTiWEotFSnW7TPyMeZuiufX
8aiH4vOE+FBrhEUX/X7xqNVi3X6RvruBav2dDflMPEnizH6f7A9u9OdTtuK+
GaTvrveWqvNB4+qoaLGexId6U/uzb+zbOkpDrCfxoeKCNXNkFgmYvkbpyA/W
6ET8ahBQBWI9iQ+lI+hz0jq0npol1pP4UOf75FXpXWtg9CQ+VPOx5JT7F8T9
MD//t1/uU6Zfbli3vrvfmb67/7r1y5VU7OqXa9GtL2410xe3qFv/W2mm/613
tz63yUyf2/Xd+tlmMf1srcScxMm9jjeZzj7bQMmJ9Sf9bJ8z/WztuvWt/cD0
rf3VrT/tPaY/rWa3PrRxTB/ac936zWYy/WYLu/WVNWf6ylLd+sd6Mv1jq8XX
sQcYH/K23B5iPaKeuS6ROFa+7OJ4qzWNVPCiKQfo+w7wz79W2LRwG6lRV8L+
7BXdXyDuks28GRmS3UA1cVbE5YjuL8Cvx127mXdISFWI9Sfx4e5nY+/1Nm+m
Vor1TCLviykdte5T1Mx8bwqpY7xvtJh3uYWyFF+XbmC8NPTn+4UlwY3UQPPc
HR9F9xHg3+f1//dmdRPlIr5ehSKf5FVS5iBooqaIr0skriuQHe2ZvaSVaiy6
uY6+jwDnFgRtfsxrpSzF60xBnrvg6anjXm3UW/E6U0md5LVx0TFr2yklyZht
kaL7BfbDcTKLvuTdTE3ys+m8KbpfAE+yDjq4fmkLNcCvRjdHdL8Abul1tWSh
sIW6IF5/JPLiPX2L3t9ppZzF/YJIvDdy67dJu/e3U/fFvyPpeznqxCybNcM6
mH2lII9/OlznUlwHcz1JRf5a88Ly9Vc6qffifaUjf+y39O8tHQmTY+Lr3lmM
35r03Q0MnrZSCyXqPPeI7gvAD9qHn3DY2sZcD9+R+NB2/WfBgHZqoHi/Ecgz
D13/ohHRzlwno5AnFV603LCtg/oivk6SODNfuNR2yZtOauZRIUXfF7A/pMpH
k4JJEiYPxDqQfOzfE4cm/3OTMGkW65BK6i1/Cysm10iYrBXrkI5c1Tdu5ZO1
kiZdOpB8rEagm2VOnKTJuo3HdReJrvMQB24POtF4yr2D0pQ4Ekdf5zF/uOjq
ofYFnZSXWIfPyE8cmMpf1dFJuS4/PNQxm+RRP32cf79utYSJuViHX8j7zOdc
kA6Efk0kTubKyz+V6yVpki/++yJ9I1/7z8v+uEXSpEsfkkc9F6ej8OmLJKMP
yaOGKa4aH6YhxeiTjvzWqCUKu65LmawR60PyqMsfB7w41Fva5J1YH5JHNTTo
neV+SdqkUPwcSuJb7rEPUtlNaUyekMSxzv17LVruVkR9Fz8HkXi1bdIvBV2X
TGqf+HgSr+5de2OMfGcWkx8gcalMsIxfqloJ8/kkLs28m6cWH1JK+XUlnjCu
i/n6aUn8zByqSPw5JP78mrhMqXd8LvNcRuLP7/ITfKddzmeeu0mcOfDmrMnL
EkqZ9ZA408FuUd5gx3JmPSTOLLw+uJ5nWEH1ESe8SDw5VWvOix6i59iufAWJ
J/eYOHKvby9g8jwkntSh65wXFzLrJPFk9eeP2lnLipjnZRI3uumf4ey+Vc6s
n8SNPV9veWY2u4JZP4kbO8Iad50aUsWsn8SNsjVPQ8tUudQfsZ4kPlQIvtzD
U7WQ+iH+XhIfrppyUG9jSyGTZyDxoV3m/otGtUXMvkh8WDS59ERzezFVIF4P
iQ9Xfx3vaTeulHmOJnGg9cBX39IPVDD7/U+/jsxGx546Vcx+SRz49IzwW+EA
LrNfEgfq3e45w0izltkviQNtl8yZWB3Co1SY50qIWwyn7A1c+aWI0hevh8R7
kh9vWl5/UUwViz+fxHuSgT8+T31ZQmmLjyfx3p8H1ja9f0BejsR7Qvr9qdYy
RgcS7ymd2eZycCWHeX4ncd15/xtvjB2qGH1IXNe5r3KilD6X0YfEddHW1TVR
Y2sZfUhc9176+PSxori6Sx8S15keNFD7EMdn9CFxneW8VE5jPwHVKn6+9jOG
eOMs0+/iWbc6Ilumb8bDbvU/FWZd/S5Ku9X53Gf6WtztVs+jyPSvCO9Wt1PC
9KnI71af48v0o5DqFqdVM30nbnWrtzFj+kuM6VZX85rpI/GxW/1MKtMvYuGN
/62TcWD6QuR0q4cJY/o/OHare5Fj+jx0XR9InHZ6VdC+gp0VzPWQxGMbXYc1
e8rUUZXM9RP7AxxZs1/oVkW5MNdP4D77Nk5X/1rN6EPirsHnxshaLhYw+VUS
dy2g66a21zN/7yTu8llnJPkynksJmesn8MB36v4X+tdSUcz1E/hX0WXpigGP
WsxcP4GvmsvbO+9xPZO3JPHVJOuMZbe+Qr6XxFdC+r2SRiG1jrl+Yt/C6cqy
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
dD/6F3zUvYU=
         "], {{
           {RGBColor[0, 0, 1], Thickness[Large], EdgeForm[None], 
            StyleBox[GraphicsGroup3DBox[
              TagBox[{Polygon3DBox[CompressedData["
1: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
gLT9keS4L82/Jzk3UPx6FL4tWNsfSs495O8PwhuDdUC1SH2tyeicuh5cmvHe
5NxDevVGci6hWPBl8lpVPvlFsr9IZxSrtE5UA6xL1g3p3pvJeY50e3ly/i+N
XQ0vCNa9lcm5tPRnVXIeLg38IXlNSuuk5TXgAsbvsX8QrIeqZ+SP8su5mfOq
PtKffOvGY8z/lO+eDM6xX8zFlxrKb/muk9YP49PYj8NeGfvLcFvFAviFXGyq
Dj+Xqymqws/n4lo1+Bm4mWKctAg+Hj4afikXK2vC/8vFi1rw3XBVuAB+EK4N
l4QfguvApeCH4bpwafgBuBZcAr4Xrg4Xg++Da8DF4afgpnAl+Am4MVwBvh+u
CWfws3BzxVn4HrgafBT8Wi6u1YFXw/+ojiFurocT9r/g2+GKcGHm3AqXhyN8
B1wJLgLfkjmHy4M3Zc7tCsE3wgXwYc6zAS4J/wNvhEvBgTm3wRXgfPhJuAlc
Eb4TrgwXhdfCefAB/nYNXAj+E14HF4EPwtfDAd4Pr4IPqjaCr4UPwHvhlZnf
/R54ObwH3gUvg3fDO+EV8F54N3wDXJRzHoJvhkvAf8OPwQ3gclzbo3B9uGxx
39MI6Vv0fQ+Wb0afY6B8MPoZ95COMXZhfXYJrvf1bIZLJ7GPxD4yuEYeojwp
uBY+FT41uF7uphojuI+hZ9NbuhT9DHpKM+GazKkZXI+oV3E8XJnxM46fCq5D
j4WPDa6t+uoT3E/oA/cJ7pnoefeSZkY/7wHSELgfc/oF1+xaL4OkS9HPaZhi
HDyUOUOD63f1Qo6TrjJ2wN4huAfSDm4X3GNpD7cP7nu0gFsE93Dawm2DezJ6
PydID6Pf7YnSnOh33llxhLEl81sG94Waw82De0eP8L7qcX1livv9t5HGRr//
1tJextrMrx3c91CvQs+hJfauHHcN7v80hhsH94sawY2CexFN4CbBvYgGcIPg
nklDuGFwT6YZ3Cy4f1UHrhPCv70X9Rg+BZ+Pzm2l1Yuja/pP4OdULzD/rGBf
ngGfHaxFg5LvXb72OHx9cD17H7wsuG49N3PPopn0Afvy4Po9w3YS3JHz92ZO
cY6PKOdnTvfgNa8ew2fwC8zpn6yf8osRyWtD/j48ee3Jr09OXpPShFP425vg
q/nbYcnrXzowMPndSWf+jv6tpoyvcg3tlJfyt7czZ2FwzX4NfGFwjb8Mvji4
P7AEvii4J7AGnhHcE1gIXxBcNy2ApwVr3Qp4enC/YiZ8TrDO3wFfHdwTeI9r
6MM1NJH+Y98Q3Ed6Al4b3KP4KPO96Xk+i/3m4B7gM8n3qx7gY/Ca4J7JpHzn
Ztdzj9Mz1/ltsHeFj2Dbx3PozvxWwTrcI3lNStPOhk8LjheTkutlxYWJyXW0
dP7MZL+TtvfnnFU4f4KPYRyHvT+/MS75XSsGjU/WHMWUCcnapZiykL/9nrm/
8rs/ZM5TlVvOhz/E/hP2LzLfj65/KbwL+2/Yt2eOwYrFo5I1QTFif+b6QXXB
3/DN+e4Tjk7WSen8FPj04Dh4WrLOKC5MhccE6+0ZyVqqeHQ63D84Hl0OTwmO
0b2S9UHx4jx4dLA+D4A7BseLnsm+rzgyPBf3td7OxT4qWB8GYm+Ivbz6GNgn
BOcJF8Ljg2PuxfDE4Lh/DnxGcOyeDk8Kzg0a5XvtncYzmpb8LhSjL4DPDI53
u3QtfH4KXvtzGKeoz8Cc84JziTbJOZtik3q9igvtmdM0OUdSL1p9U8WURthb
Ya8bHNfacS87c++odXK+p9in+1Ou2y/6nWt+KcUK5n+XWwPvRPfjd1HHvQ2o
R/9bnnvq0uTa0X10xazu0njOXz247611ofVcXefGXjG4f1svuTZUP1w9ZtVQ
+/Lc65XGNlbel1w3qZavkfm3VZdpXSumdOC4euZetvYIKvHh37/9ijrYP8it
Va1Z/e6hPPebFeNaRfebFWvqKlZmvk/VpLXgd6Nrurrwx9E1nXrtilN1lC9j
/yS6xknRuahy0vrYP42uZ6WjitFN9Hywvxddc9WG34+uxdTX/LcWznMfUbXn
7jz341Wj7Yc7Ma9pcN6iPQ3F64yxY3I8VW6j/RDF+mLR+xWKNeWj9xAUmypE
72koHpVTzEzOB5QjaV9F9V3x6L0Uxb4S6j8wZ2pw7notfElwz1M9UcWOy6LX
lOJXScabktet+qXaY1Hsrhqto4pBM6Q/mXtG0lVpnmJ0teh9FcXoY6L3QBQf
q0Q/pyLSwzz3kJTmFY72F/nKluCeq/aJduZ5j0I1uBasnndh3WOe17Lq34N5
3htRfZrHOJtrPje4LtA7V1q6J8/vHHkKR/K8V6NYXzF6n0HvWu9c+0XqVxSJ
3otQHyM/el0cpRiX5zVYVL6d575XcV1a9Brh0YdC0b2XA8H9l8lcz+TgPamd
ev/yEd2/rkt+p/sJvv/tue81r5D8J/hcO4LrBuUJQ6NrBWnU4OiaQLo0JLrm
UOwbHq09OmfJ4J698sNN2B/PrF/SQNUryjeGRdci0sNB0dexK/cuDuSu4aNg
jVe99gxzlsAfw89GX5/mqNc0UD0axv4F3kv6Occb893X3cDYj+Nq8F88m035
1h/tW/2Yu/fNuWezNXj/SX64JTf/rszxT3FQtZf0dkB0DihdPTm6vpHm94re
F1JfZUP0fpF6ODdH14jKN0ZH13nKH8ZE76+VgItKO3LXo+vSfqB6I2uj9xbU
g1oeXS/Kj8ZG76XcCa+I3vdQX2hl9P6h+jZroms75Tajoms75TOnR9dJyoXO
iK7DFON6R9dMY+A+8HWZ8yrlFarbFFt7RNdbilM9o9fTntxzU90pXxiB/Sqe
3fnBtbBqHfHI6FpHmnBK9N6aej7r5PuZ80jljao1L8U+DvvB3Pl/CK47FTcH
Ru//qDbfGP39wdz725Vb31qH2ttR7ndB9HPd9v/e9R+5c8q+N7f+tZ+jXOvK
6H0e5Wlzo/dtlJstzPnavtz61P7VBsZF2P8PzCOjEA==
                 "]], Polygon3DBox[CompressedData["
1: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
3+hvVRPUBjXlNMa+RX9W4PXCvHchY3Py+U078f/rWL84Zjn4P/Barh+O7w/P
Dp9p/WJ8bbib84+BL4OPgMfA21ofOd/6nfQbo3qyBlwLrhF7lVkYX4vXg3lv
Dcamh5du9XAYPIPPDJ4PXgHu6sr19IVXUm9q/MLn8MrwXvA28CC+f72erEHX
ohp3vV6Bzx/C6+14byJjc8AbwMPh0fAX/L4Bnfifs+DZGV8XXg4eAX/N+PLw
gvD5Ptua+rwD37c/vF53tE1NU9t68/mx8PLwSHg2eJ1O+oe14THdmTvOAefC
uvD9nWiwWvwp37dgJ/7rNK+P75utk36uHzy8K2vbNb4vPLI7a19NUBtW7Yrf
OU+NhFeBb4LPdQ7AIzj+rk40Q+0Y1x0tVIPUolHd0RY1QW2ofH5ZeH54xZ6s
Ydeya/6YmjXv2rcHO66mRlmrrGkn1dQoa5We8dc+q5r7Px/3bxxjw/i+izrR
fLXfNepatcbdWuNh9DJqxhE1NdJaac07pUaT1eaDO/GqEzjfX/0u3vtXT2qg
tfBA70lNTbO2WSPPgSdy/EOd1ABrgZqkNqlZRzE+ujva6Jp37c/dlfmm/xsL
LwAfDu8IT4JnhtfsxN+uDs/blWvzGifAM8Erw4vCq8CzdmU9DYHXVB/ho9p6
MRnu15X1tRO8oXoKHw3vBm8Mzwiv1IlfHQ73wKvAi8Orwd3wcHgxeNWeaLLa
7D2/p6ZmW7vV7LtqapTf7TXYi83P5w/l9fa8tz5jfeHDnP/wBj25x95r7+E7
HL9Gjb//vom/2aXGPy5akg/8P4NoohFTajIPsw8ziq1rMhSzFDORrWp6AHsB
e7KpNT2ZvZkZxXY1Pby9vBnMljU9tFqmptlbm2GYZZhhbF9zDWYVZhBemxmB
WYEZxe41HlGvqKfbv6bHs9ebCu9Tk2GYZdjj7lGTYZhlmDnsVpMJmI2YqZgV
2JPZm9mD7VvTc9l76Ul/WdOT2ZvZk+1X4yH1knr6A2o8vdquxh9Yk8GYxZjB
7FCTOZg98Fg689T0qPqHR9v64vNQX39o5+M6NfOvlOjbmJr505Tok/fMe7dI
ST1Zs0aPf2z1et2a+TRdib6tVaMPP7Xzd5MavetdUk82rdHTPiX+2UzAbGAK
7+1ZMwecC/OWrCczBL21HntAjSarzfaoK9ZkFve39fWtmh7/vrZ+6ifNEMwS
zCT612QoZilq6tCaGmYtU/NXqNFYtdaed6mazEytVXP71Xh2vbs1cJh6UbO+
Zyypb/aAaoGaYC0yQzBLsMaOqm1NbeeD98Z7MKKdn96bse3np7TrwTW9W7v+
Tq7RANfjkZ30XuPb+bBTO7/1vHrfY+DTazyv3leNOLXGo+vV9fDn1mSKZov6
uQdrMkizSDPHP9b0xPbG+vNnanpee1975mdrMglrnTVPP2hPYG+gRz+7puZY
e6w599bUKGuVfk0/bw2yFlnDfleTwZjFmIn+qSYz1G/qB/Wfen69vx7/zBoN
VAvV3GNrNFVt1aMfWtMz2jvaY61ek8mYzZjJjKvJYM1iR8OT4avgZZpkfBvX
aJZexDXj2rHmW/vNiEbW9HT2dvaoq9Z4KL2UmcHomsxALXZNubbMEM0Sx8Ob
12SIeoF12vmg5ljbFi/RImuItUSNPbpGc9VePczhNR5mu7beHVyTaZptmjFv
VKPJarOafWRNxmItcs46d73H5mF7lNx7MyqzKjOq9WoyKrMqNXyC31/j12Yq
8Uu31eQ9W5T079Z0a/vmJf37wJq8590m+ZZr2LX8TpN8aVBNfvNek7xlcE1+
836T/n7hmjzytSb5kZmk2aQZX2/GFq3Jv99okhctUpMnvt4kDzNTNFv0HH1q
MnKzco+Zo0YDB7W/z+c7vH1eK7b6MqqtTxPb++VvHt7WK+/FkJo86oMm+a01
fNH2ea9UU2OttWrsyjWaaG33HqqVaujg9nmordZoa7WaOrwmw/y81Z/Zaq5J
7ft3W9/9DvPDr1r/MH/9/xZD58Um+dd8MBay80KTfMyaYG34e5O8wnvIy86T
Te5tX7jHWtEkX/Oeua/xVJN7OS88I/x8k/xuTnh6taHJ/ob3dDq1oMm9tibo
fdV8a4W/wf2SJ5r8tn6tvrpHYb+1dE1e90kTv+89M4/7uvUrarLa/HGT/sDP
2Ks93uRcy9TkjZ828acL1cyVV5vkf8vW5KWfNekfzHS+75WM1KxHjfdev9Ik
77QmLteuT2vl2u16HdOuZ5+RedQ3TZ7dNTXaOrEk/9KDujbXLslX7EHsRSaV
5INqovna9iVaeWWNdo8vyeOuqtG69UryrWk1Wj6uJF+9ukZrJ5TkxRfVaMOI
kvxEz2btGFuSz6qx5m/blWivGn81vHuJ9t9Qk79sWJLP3VGTr21VkpffXpMX
blmSr6nhZjNTS7T9xpo8ZKOSvPDOmjx765L9pZtq8qDJJXmmNcf8b7eSWqTG
mzXsWqL97jHYG9kjmV9cXKNlI0vylktrtH90ST/uHDcLVnOc+85RJ7ia49x1
jroXp2Y4d9UUs2nnnFrjmjE7VpNcS86ZmVo/4FxyTZg9q1GuFeeYvZCeyLnn
nJmx9RfOpUtqtHtUSf7lmvu59SOuRTXK7N45q3apYWbfzlG1Tc3s0/odtVTN
7N36FbXUOWwvrOdybquhZtdqgtqqJrm35BxVq9RUs1PXlFo7rK1v1kfXlmtu
vrbeuRbNrM2uzScerdljc6/NPbQN4V90p3ZaM62dL/N3YpM9mvtrMoMlmvQ0
Zgn26As06eHt3e35xrZ+yV7Qnt182/5R//QP11CTPbnHazKUt3h9cUm2Yuaw
SpMe0izCPaBdWn/k3tDf4IOaZD631PQQevu5SnqLT/i7tknP/YrPq0RPPubv
qpLM7yVen1WSBZrJvAlfVJLVLADPDF8KX9ZmLJeX9JxmL9NKssaP+LuS198w
fleTjP/DmszeY/xN/jYznjd4fWFJ9mPG8zp8QUn2Y8bzGnx+SfbjHsavmuwx
uLdhBnF+k57fbMKMz2xu55Ls7wHGPu0k7zITOp73vuuVPcu5a/YE/swxL3eS
N54E/9Are3KL16xPvdguJdmge1C/aZJPvtzqp3P/5Sbe2TxsAbg2uT9mjGZ5
O5Vkj36H33V2Sdap553i2ijpDc3cXoXPK8niZuA8n3SSsXnPvYev8Prc9t5O
6Mr9ntbuh+j59er/aNILOCedSzuWzFX3xGZpkiG5V+YewQlNMh33DlyjrtW/
Nemt9Lh65UNKvK+e0V5y1hIvqWe0F5utZD3o8ewt5yjxfno8vf/sJd7PHvl5
+PSS3lnPZi87S4mXM4N+AT6jJI/Qg+hFukq83PI1edQ/ub7Te7Im7Y1nLlmr
k2r2z3rgy9v66Vr/qEmv4zN1P+KtJs/ankgv+2GTXslM+kX4zJKsWg+tN/yu
ibfWj+iVvmzSm+mB9dbfNvHG9kh65S+a9E72WPZC/2rSe+kx7dVnKPGeI2r2
839m/LyeeGy15r9NvLc9nb3IKSW9nj2t2nRMSa9rz2/vPWdJFuCelPtkJ9T0
S/aI9i6nlvSOapq9yX4lWmdPY+9xWEmvY89jL3RoSS9kDbJX2bekNrlmXBvP
NVlLemSzilrinb3nQ5v8Jp+F1+LenXs4XtPd8Lgme8h71/SIendNl72jPcp4
cPqS3uUG73GTZ7ptzT3q12QOeO/sOdTjX5T0Is6JWZs8Y+eKnmUMr3uV9CZm
0OaFe5Zk09YUa8vbTXpvM3Tzv71KsnUzGbOOuUuyGv2M2dEGJVmrv8HfNrjk
t1mj3RvRU1i71XS1fWBJr+weg3stR5bki3oW9370SHoZa6Z7R3oKa6kex71x
PYneZyN45yaZ2PE1ewbunRxUspfg89I77FOyF6Inc29ST6JXM7N/hNdHleR5
7qGYXR1Rkp9ac6wN+5fUItf/g/DBJXsh7nmYlx5YshfiHoV7ZweU7F3o+cyf
zbv1gmZGZqFDSrIkMyCzyyVKsiGfqXNh/pJnbcY1Fe5bkn3p+dxbt8fSC5p5
mSUtUJKF6bH8f3ns6fReekj3du3R9JZmRGZNC5ZkR2ZgZk39SrIxPaZ7qXo8
vaee0bzW/FUvaabl3tNiJVmXmZV7b0uWZFl6MPdGTuvEm5lhudcwtCTbcv2a
zZxcko+b+ZgdDyjJgszY3NtZqiR7M+Myq12mJPsyYzOL7V+SvZmJmd0uXZKV
qQdmXUeX5OnugVmLDy/Jt/XcZsvOWeeuPar7W9M66V31uP6/IXpiva8e171k
Pare1z1R94KOL8nn9bjujeup9b6ew3NtVpJ16yms9ceVeA33qMyP9y7Zu9I/
m4VsW5J3m7m6NzSlJIvVg7tXrsfWm7tH+aTaUbJ3qYf2/w2wh9Bbu2fv3r0Z
60E1ezAHNtmzcm/GHt29dj22vbt7jO4lnViS95sBXw9vU5IN65n0cpuUeCkz
ePcKNy3J5t3DdW/qpJK93f8BjE3Xeg==
                 "]], Polygon3DBox[CompressedData["
1:eJwt2HW8FFUUAOCF98CH7FPp7pJukO7ullYkFAlBwiAUSUVQBMTC7u5GRUIF
7O4uRGlFQf0Os3+c35vzzbl3difOnX2Vxk0fOC1vKpX6SuQTVdOpVIvsVGpL
biq1VWwTNQqkUp3Y+KxU6mI11+WkUj8WTKXekx81uAQryY6xXHVteGvR3djm
5pvIlsmXi0/YX+ryskbybsZ2M7aCY5zGXrV/iXypqMW6sknqFqi7kbViZ7HF
7Ab2LDuVdWYT2Dx2PdvjGH/IK4jyoqV5q6lrr26n7WvUrBXlWXO2mV0mXyx+
MvYTYwrEePNVZJXUtVb3mror5CtFXd+tOztH3WTxln3V1XVgu2yvU7M+c17S
rK6aemKjfVXVtWM7bF+tZo3IMV+Z7OTcxTm8176Dxh7LfIf4LutYOWObqXvF
9qXGLRIVWSu2na2QXy4amm8Yu8C4C8V79v1gvndt/+26HRHVWFljm6p72fZC
4y4Rh9T9p66+6OwcdGa72c/ykvE9WH3W1Nihxs5lq9gD7Hd1e+UVRVPWNCf5
Hv9mvn+ch46O1c7nm23sevm14ht2WF2KNZB3sdnF2AaO0Y+dx5ayO9hRdQVY
C9aP9Yvvq64/m8GWsTvZXnX75ZVFc9aclVbXWN0mx7tQfpE4mf2jpqxorK4j
22fsn/IacT1YW7af/SU/VbRlbVgZY5uY7yXzzZcvEAfUHVFTU7RT1479wr6R
FxLVWXVW09guxk5k89kNOck1ekf+p+vzl1hq3l/Zt6xwfB51NdQ1M3aksfPY
GvYIq8/6sulsCbs97lPWm01ll7FbWUs2ll3C1rMn2J+OkYc1ZF1ZV3aautFs
AVvLHmO/qftFXiruD1aPtVA3Rt3CuEfZ46w5G8Xms2vYo+wPY/fJK4lmrBlr
om6IujnsSnY/6+HeWMzuZHeJ3c7BEWPzs2by3ur6qKtjbC82hS1it7BixtZi
vaJOPGVsbXXd2NnyhepuUveP+XLYaawv68v+Ziew5qwP683qGduHTWOL2W2s
MRvMZrOV7D7WiA1is9gV7F72s/m+lp8iThYNfJYcdb/ZzhVV1TVWV4W1NfYN
+1fLr8r0ouhJldNJbxycm/Sd6D81WBt2Omtse4Tty813s/kesn+VuDJ6YzqZ
d7i6RraH214RPUjdg/YvF8tEtXTSP4bmJr0jekj1dNLzhuUm/Sn6VK100kNH
slK269sea75Z5ptlfzYrzrqyUWwky8dKsG5sNBud+X7xPWumkz44wnz5bZe0
3V3dGHVj7D+BlWI92Fg2lpVgddloNpPNzPTOstnJ9T5+3c2XxYqxLvKR6kZl
euLp2claFGvSVHWlWQN2hny2utmZ9SfWoSqZ9XCIuqKu0Ym2a0f/UjfA/iIs
H6seax7rFfcfK8jqsE5sICvMslk11or1ZN3MfSl7lG1nH7IubCF7mG1l72X6
cfTliumk7w/MTXpM9JoK6aR3D2D1bQ+wfWn0U2Pvtn+euFiUSyc9r19ussa3
zE7WrFi74ruVZY3YOPlcY+dGX2MN2ZlsDpuT6ZXRM8unk57XPzdZf2IdqpRO
1tJBLI/tQrY7GDvU2KH2F2DlWB82jo1jeVlh1pENY8PieWM92UVsNduYk7xH
TMpO1olYL+bkJutvj+xkbYs1bhxrxaazm+VPGrs1ehg7m21gD7IXoneycWwN
u4c9zVqz89gt0TPYFtaWzWS3sWfYdtaZLWAPsS3s/ZxkLZuTnfSq6FnzfZb2
bC67W/6Cuh3RJ9k57Dr2EHuRtWEz2K3sabaNdWQXsnvZJraLdWIXsfvYS+xN
1oFdwO5hL7Kd0dvZZHY9e5htij7JOrKZbDnbwLqyS9gjbBv7INM7a8fzzUZE
X4z7ntWMHiKfrm66uuKsDhvFZrAZLM0qxj3BJrAJrCSrx8aw89n5sZ6zgWwR
28DuYiey8qwvO4udFc+5Z6YoaxrPNBsRz5u6U6PvsWlsGivEqkfvYlPYlFhT
2Bnsqlg/2FOxxrOq0UfZZHZuPJesRvS46AVsKjuJVY7njE1ik1guqxTPGZvI
JrJTWLXoDexcNpkVZBXiOWPj2fjo3wWSXv16btKTozcXYlmsqrqW6nrEcdnf
8jKiEesQzwzbIz9JVGNN4pqzacaujnuNvRr3EJvAlrKb2PMsi/0gz473Glab
5WHfyVOitD81WVOf+Uxjr2Z3syej76rbLU+LKqwRa8+mqlvF7mCb475nU9iV
7Hb2Sty77Hy2lt3PXo81gP0kzxHlWd143xAfyP/zjhOvfWWiH6j7nuWN88Bq
sfzsV3lBUZk1jOeSnesYK9lt7OVYe9iP8vyiHKsTzwybpW4de4C9EWu8+Fie
L84rKy/vp+5mdS+wd1l/eXdxBXuAbWZfx3sJW8keZK+yb6KPs8vYHex59klm
3f8qK3nHjnftFa59a3Xj1S3hN6p7Tt2/6k5ibdkgNoj9x05m7dhgNpilXKNT
WPvo19IhYeb7Un7Y/MWl1XKS3z2/Z9414p1jVfze4h/azpN1fJpUWfkR8ZE8
K95DWDn5UfGp/HfzFWaV4vOJz9l+VpRVic8nvmAHWTFWVX5MfMb2siKscqxl
Pt88n/km/jh7hx0W78uPqTuRlY4+pG6+uo38CfYu6+6DLmKPsdfYR2wYu5Zt
Z5+zX9npbAN7jX3BdrOhbD3bxj5jv7BBbA3bzD5mP0bPcdwD8qKiFmsRPYwd
khcXdVgr1rtA0uej32+M9Uu+l++Q3yCP38+Foh/wo3HviSasExvsuNeoeSLW
o7hWTvYQto5tlX+q7ufop8YWYU1YTzY8eicrzVqxgexMVopVYZ2jP7Nzouew
g/JiojZryYY7xnXRc9iX7Dc2gl0f75hZye/9PWyf2Cnfk/d4S0gVie+rbrm6
Z8Au9jnrw1awZ9mb7As2gF3FXmYfsu9ZX3Y5e469xb6MZ4utYpvY++zbWEN9
5ovZjewx9jbrr241e4l9wL6LvqvusLyEqMta5yS/DZZkJ+czzusi57QnW8qe
ku9Q96m6/WKX/I+8x39SporKD4m32SF2Aish72XsMgVP853sM3ZQvCU/oC4/
K565lmvVbYlnXyxx3IHsavaK/CN1P6g7IN6U78ub/E+lWE7yv4b4n0PtdPL/
gVHG/g8j9AKE
                 "]]},
               Annotation[#, "Charting`Private`Tag$323468#1"]& ]],
             Lighting->Automatic]}, 
           {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
            EdgeForm[None], 
            StyleBox[GraphicsGroup3DBox[
              TagBox[{Polygon3DBox[CompressedData["
1:eJwtmXW8VcUahveGtQ7O5jCigEUooogCooJ1Ma+tWJQo3dItSgkonRIGCgYd
0o1KqIigIILdfcW4tte+z/t71x+LeZgze+3Zs754v29VbderYc8SuVxuGv+U
ZBwQcrnT87ncNYVcbkfM5aoV5XKj4Z1wTXg8/AJcC54APw+fBo+Dn4VPgsfA
2+ET4VHwZrgCfDf8HHwyPBbeAh8FD4efgo+DR8BPwxXhkXDU/dhPnTSXK6O9
wKfDh+se8BnwRtaX4/9DWf8m++/L/PTiXG4T8+WZH8b8Yvgf1vaGn4ErMX8P
vBWuDN8Lb4CPhIfAy+EU7g8/CSdwP/hV7nEd9/8xyeUOwA3gn+CX4abwX/Ae
1tdj/WTW72f+WuZ/YH4vfAv8N/wS3AT+E94HN4P/gV+Bb4VzqfcyHq4L7+ae
dfn/JO65Bi6G74JXwEXwAHgpXALuAy+DS8J94Rfhs+CJ8Eq4FHwHvC76fAfD
q+ACPBBeDZeG74TXRp/7IN2HfdzMfn5LfN4T4HqpP3cPXBP+i+sOuEpqu5gL
X5fadubBDVLbznz4erg2vAC+Af6TawBcmfEjrtvgEowfczWHSzL+zTUQPp4x
pzOAq6Z+tnfCJzB+z9UVPjK1rc2Gr4QXRX++F7/lS8a2zBdSn+tSuHHq57YM
bpL6zJbAjeA/uPrDlRh/5+oHV2T8F2vWwM1Tn/0guFrqsx8Mn5TaBifCZ6f2
g0nwOaltfzJ8LvxveDPcHq4Pr4VbpH5Wd8M14AvgdXDL1M98GHxK6md1L1wr
tV2Mgmun9r9Z8GWp/fhh+PLUvjUDviC1jQ+Fq6e28SHwyan9+BH4itR+OR2u
n9pvZsIXwpfBW+AOcBX4Afji1P50P3wR/FZmM79jM2/DDeE/4J3wDfAv8KHg
/cjevgz+Ltnh0dznMfgqPeuCn4XiyZGKF3n711fB+5EvHKf4Ak9lPFbxCJ7C
+HXwfmTD3wTvUzb/GTwlb1/4I9gmFRN+D7ZVxZ8/g+1T8eGIgn+vfPCT4Oeo
+PBx8PNVfPg0+JnKHz8K9hH54IfBvizfLFvws5Y/llR8yTse5gu2Q8XbB4PP
TT73UPC53cL8LLgR3Ay+Lzi2NIYPYNtNOa+H4FeCn2lneG/wM+0E7w62zw7w
S8H22RH+LdhPFXunB8e0pvCiYB/RMyxdsO0p5oeCbV4xv0TB/qKYPy04NjaB
CwXbsPLFE8H+exv8XnA8lw8uhtvJd+DHg/39Vvi7YLtVHP4h2A4Vw78PtmHF
+S8Y/8v1CdeXXN9zfcj1PnvtzBgZDynucn3M9R+u7/R3rnf5W0fGYsb3uDrB
ZRhf52oFFzG+w9UBLs34BldruBTjAfbQG55GftkjH4C/VvyP9lvZ3r5of75P
uZI1N7LmV9a8BreEU8b9rLlWfqXnFe1L0/RcomOK7Ha34gLrv+Kzu+Cb4P/B
C6JjZQ/lO8Y2zB+mWMf8Z4wj2NsqxSbmP2L9Bvhi+At4I3yJzgPeBF+q84NX
wOfBH8Ancp8P+f8w7nMS/Ck8HP4xOJYqj/8Ez8k7d7+VxdLA+DTXlfA33Gcl
fL6eC7wIPgN+E14Mnym7grfCV+tZws/AV8Hfwo/CNeB98OPKJfB++DH4VPgV
eDl8rp4pvA2+Rs8YfjU4Nt7O3m5k/+crvrP/hvDF8HL4Csa98tPU9iPb+UB5
gvl9ignMz+Lze+A6jFcx/4riUur77YC7wDPkD3BDvvNS5l+Uj+ss4e3ag/YI
b5M/au/watm5fje8X3FPe4dfVRzL7PZbrrcVQ5nfydiT+bPhZ+SzOj94E9wW
PgfeKh+H68Ab4NY6b3gj3EbPHN4F9059Bi/IB5WrOZPZjJfzO/rDD8vm4E7w
WH0nPAB+RLYOD4TnwFfA3eEpsjO4KzxJvxvuBk/WOcG3wxO0R7gLPFHnUfCZ
f8P1kuIO86uVD5gfCa+Rz8B3wXNlE/AgeJ7ODB4Mz0+tUYfDT8LXw3fCT8j+
4GHwUvg6eCi8BL4WvgdeK1+C74aXwQ3gHvA05diC96X9fSbfzmLHp1y/8feR
jKcyHqFYC18KnwKvVHxOHZe+4vqdlPWgtCx8v2xE/g2fz5pGcCn4mcRr9Zl3
5cOKGYznsaY6vEJxOLVP94ArpNYtfeBjGauyZjF8M3wM/Dh8NTxTuROuz/if
1PHqGMYTWLMIvkn75OoFH834OVdP+KjUvt4dLs/4QME+of2P5P8FeG7i/Sru
vpPF10OZrX6e8UfZ2X2Z+dT3Gb+UxWCd52FZ/P4iO6t3M9Y9m7HPt3SejLdy
/cHfGxbZJw5l3/Npdp/3uGrwt1X6nOwAfg0eKnuCX4eHpV77dfa9usfH2T5v
ZM0bimmyCfhNxTRplmwPI1Ln1d1wP/kJ/DLcX2eGzUxnvJDz6QfPUjyF+8D3
y+eUo6WfWL+dczud+f/y//HEnzrwd/AE+LLo5/0ofHm0PT0Gnwn/yJpJ8JXR
seMJxa7o3/w4PJW/H8v9t3H/2sx/y//HMV8L/gYeC58GfwWPhs+Cf4Inwx3g
0XBd9nlbdAxax/yp8CHmR8GnRNvKPXCNaHu6F64Jfw2PgatH29BI+NbouLYW
bhYdN9fAt0TH1tVwg+iYtQi+OjpmzYOvjY5rC+BrouPX/GLnSWm5bnq+0fF0
MfPXRcfEhfDN0bHySbhRdLxbAdeFf+ZzU+DG0TF6Jdw0OgesgltF28EmuGW0
3WyEW0Tb0wZ9V5G1ZXfu1Y75exWDObe28D2KtXB7eBR8Ftwm2oa28NnW0ba1
GT4b/pU198EXw8dKl8MXRfvwLHh+dL3RnfvMi643usGPZb9Fuu7R7DlK182F
/wd3ldbK7t9Fmgr+JXUefCCzhzbSlpmdtIXvz55ja3hOZm/ShLMy+2wPj4I3
yyfg3vBM5RC4FzwDvgh+KLPtdvBoeAvcEB4Lb0+tUcfATyn+ab3iF+f5InY7
m/kfUuvSG6Jz5xLOoS85tWbe8Xw888+m1qXnZL9XGuzc6Lisev/86Bg6E/5X
dMy9H74gOl4/CF8aHQdnwxdG1xgPwU9xHcV3teI7/x0dW+cwNzFah0l718vO
cyrzHeExcD3mJ0VrQWnycfCO1Bp4cnT9L027MLo27glPie4jSA/PyHytJTwz
89NWihvR9ZK08bToergFfDC4HtTzle08AV/D394N7o3o/sdGa80B7LNcdK+h
V7FrCem9Q5x5+eieRW/mj4vWvnfAJ0Rr6CFwVfgDeChcJVo3D4KPj9bNg+Gj
o3sW/eAK0T2OPjrL6L5G32LHQOWO+YlzbGl4YeLYWQwvTqwdEnhjYk1RBD8F
38R9LlRNXuw8fzLze5m/OfieI7PY/n6WCypHa/e7im2bZZhbyvqK0Tp+IPPP
KWYrRyX+fbfDhysWc8/L87ZP2Wk93TOx7Z+l3JTYPmQn0jzN4XJ565nzuH9e
dTX3v435I/PWPC3g8nnrovqsKas6udg+IX3+cWJ7qa+cmlib1IZfg9el7sW9
ntj2L1DeS6yPasEHE+sm+cgB+IzMjyYW2//qSldkOl96++3EdYG09Ktwpej6
4U7FbfZ5BPPjU2u3FN7MmuasacCe1xe7JujCfFnGkswvVNxgvhefPYb5lnDP
4HzUCh4fXB8pDrwOD887Rkk/6gy3JtabOsNNiXVoBfhpuHdw3pT278t3PSD7
554PSscwv4s1Q4NrhHbMD4NPgdvCA4Nji+qM4cG/V7/77uDaoT1rhnDPBdn+
O2e/XTHpMObXKxYV+/fVYf6NxLldz3RDYg1bEl6fWBfr+W5JrD0rws8mzqt/
o1uWJI4T/8DLEmvqHGuWw+PgPLwycd74iz8tSpxPpHnmJdbOJVizNrFWPQl+
OXH++ZM1CxLH48j8k4l1x+HwisRnVhZenVj/ngjvSayLq0mPJdbXleDnsrpM
57Y78dkcD7+Q+Fx0PusS6+4q8M7Eerwy/Dx8Ced2vHpGxX5menY7mG8Z/ExV
C7TNnqniQafg+0sjqZ5RXdOkyHG4MeNB5dVgm1ctcCrX83nnYtVc72S+X7vg
mkt59q5gP5XOr1lwjaOcflrBNZRyekV4fd464dXovC7brlJwPSVtcFLB9Zp0
i2z/IDwkdT0ozagey8kF13fSOdULrgelnaoVXItJ51QuuP6SDhkbHHvliycW
/HulPWoVXJdJG4wLrveVZysVXMepVi1TsG6XFqpQcK0h/XNUwbpXubJ7cGxU
Hdct2E5Ur5UruI6Q1ioPL89bL/XJ/ELPql9wPFGd1T84/qjOOrrgWlW1cw/m
q+dd9yke61n0UOwIji2ynV3R/dy5rD+9yOfcivlSBecpaddU2iVvrZsU3N+T
1o0F1zLSfsXKl3lrwqKC6xpp3b3RPVDlgnuDY7jquCXRvWDFXsXgccyfyff+
HFxPSVOVie41dIF/YX5q3nn/iOgeTQ94W3QfUzb8d3B9Jw3wF/xg3pqhOLpP
cXux7V37vFGxIbpH05P5stH9ze76XdG9ia5wu+D4oBqzfbDfqXboEOxH0lHN
gn1Wdfctwb4sjdEkOJdJWyqHaD+XcN/10e9ClFO+Df7t0jmlo3sxneFfg2tP
6czGwTlX2rVRcC6Wdv0CHpG3duoaHB/UB+gY7O/Se12CY4hqnCHw2XnX3YOD
c6Xq6JHBuUy1/KDgHKQafERwvlMczkf3d5Qv7giO523g27O4rXhTIrrXozwS
ontYHeHPg2tw6Tr5v+KAasNCdG+rk2wsujekXFAU3dtSjmgaHCdV7yTRPSl9
b6noXpXywj9lXFM1h3PR+UZ556pom5Ztrw3uE6reWRfcG1R9tCHrl6pGP5z1
zzN2k24Jfu8jTbUs+D2RtNOS4HdA0lSjg/tj2v+LcLe8674TCq491Uvcwnz7
vOuyl4N7Aqprngt+JyI9vye4fld9txRunLcWWh78jklabkXwOyb195TrLoI/
V06J1hzKfZ2j85P0wDPB7z6kSzcHv/uQXh0VnB/1XNYH9yFVG36Sev/lGDcG
9yt0Jsdwz4OM/VmzJrgXql7larhF3j3G6dHve+6G9wX3JaS3twW/G1Kdsj+4
d6EaqmrBPTr1TnXe18M/Kw8G9znlj/pO3T9hfDS4Tyi9OjX6HZ72Mzf4s9LM
E6I1op7d5OC+qOLGmCzWKYZPCe5tyq9nBJ+h/H1icE9S8WFmcN9VsWVOcJ9T
eviBLBdIj88Lfg8i7f1wcO9UmnxTcP9ZNfvTwf1q1drqyShPNpF9Besx9RC2
BvexVe8/G6xp1WeYHdxTlSafH9yLlgZeENxPlvZbGPyuQX3c7cH9c/UQHoGv
yLt2eDj6vZq05fhMD6yRbmfNOXnHmVXB791Up7wf/H5W71tbZ1pdeb8G/z+Q
d9/7reD3hqptdwW/y1O92Sa4pyofrBZtT7KHHcHvFlXDvhP8nks9cPXTpP2l
G3YGvwdUHfp28Hsx1dH/B/gP++0=
                 "]], Polygon3DBox[CompressedData["
1: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
P3Us/i8ibrgO
                 "]], Polygon3DBox[CompressedData["
1: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
HWO12L05yZ61YXayJ4m9SQe/+1/zmi2d
                 "]]},
               Annotation[#, "Charting`Private`Tag$323468#2"]& ]],
             Lighting->Automatic]}, 
           {RGBColor[1, 0, 1], Thickness[Large], Dashing[{0, Small}], 
            EdgeForm[None], 
            StyleBox[GraphicsGroup3DBox[
              TagBox[{Polygon3DBox[CompressedData["
1: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
8F1wOfhZuBZcVWs7sX/dyrNVT+xTtd4eVA6Z+jm13uX799L+TOI1vlBzwnU3
7UVsI9rvhMvCT8O3wyn8FHwHHOAGiWPXdsZ5TL4lem0NZ32uz/aG9sXGbO/M
zX57Xt7rv1vquVIc7J56rhQHe6SeK8XBLqnnSnHhs9Tvq/jSNfVcKY58l3oO
Pwre/1q3ipvfpF63evaeqedNMahv6ndU7LuX/zsSfpfnn5baf35C+/TUvrEj
3Cf1PCiWTU3tr7S+9E4bs304JPX8f0yf3qnnRzGxV+p5u0JrLXjfDcAOTv1N
m8mPpf7WzYPjwwPw6MQx51GtvcQ+Tft3TOK48Qg8IXENNwg+pODYeC88InHu
8y78e+I4eR88MnFsuR8elTguVYfHJY4/D8Pjs72jd/wE/jp1DqncaWDqvf8h
vJM+g+HDsANor5B3TvVF6r2mPfFl6v2lfEM16zdwRew9wXXxfOxXqfevcsgZ
qeNOp+Bvpm/3Os8wJ3X80h49IFgT+Cq4XhwGVy24XvwBPrzgenE4fETB9esY
+LiCa82hcOWCa+Wx8PEF19Dfw1UKzptmwGcXnIPMhs8ruJ4eB59QcB08Gj62
YN8iP/M+z7khb38hX7E8Y8WAFdn6l6+en+0L7YHf8t570j2WZaw9WDrz4ecX
7Hvll1omvm9pdu91mgtsk8Rjr8v2l3LDmdhzCs4HZ8HnwiNT+9hWzNuo1H67
NTw6tY9tA49P7WPbwsNTv5feb0Jqf9uO9hGp/XNLeCh8ONwCngSfBneAJ6b2
w+3hcamfX+9RPjjWfBmcS06BTys4l/wJPr3gfHYqfEbB87c4m0PlpJOxpxSc
q/4In5r12ZD1W5XN6cJsjtdn83Uf/Y7SGpPvCq5bldM+WPC6fZn2FtE51o/8
/7Ki4+5EcrD5Rc/1SLgYHDu+wP6Wuo5WDvkrfV6mz3R4RdG6wGTlqKlrT+V7
S4uOrxPgn4vOFcYpp01dqyrfey06Hv+gtU2fZvAC2hcV/Q5j4IVF+6zR8JKi
c4jx8B+p62jlw3+nzn/kMxanzh+UD69LrQOoHlmTOpfrwW8l/G4/+v5B+6ps
rylnXJY6J+lOn7XwpXnnyZvhB+E+tK9MrZMor14On5fP8u3U2ovqnV9T6yqq
if5J7cf0bJqza7UeFOOi887/5jC1rjJTuXrqPsr560TnSZqTssG5X3/srNR5
14+0z87Wm3xFv+gcaA19FtJ+Ou1T6HO+asu86+XJBdcX23mGBanzMWllzaO1
j51wtehcZJJqasUbzTO2RPC7KLfal9qvqh7PBftw1fj1C56TLtJD6HNC3mvj
p2x/yddeFqzvqY64XLVl3vXFGcGap2r/Ralzs6nwmaqf89YZtEbugYcz/o7U
upPqoMqZryvL+09Jvf61nn+Ej8h7zXxf8Dys597JqeOg1ufDBT/nx9JkMn8u
P3BndP43lj6vR+uz2+CxWZzVHh8DH5r32t6WWpNRjfN9an+lNbyTdduJvqvg
C4O1I9XvlwTrqKrZTwvWxKQVHBesHUkTODZYm5JWcFGwZqt6vxj9Pnqei4P1
Ye3lKtG6qjTeYTzD/nnvnbOD9UDV/mcF64Gq/c8N1uVU458XrPWp9q8WHO8W
qD4N1gxV+x8TrKFJ9+iX5VeKfZfydwetJWz/1LWPfMhdwVrl3KwGkb8P2LuD
9eF52KODtThpI8cH64rSPU4Orpelh5wSXA9KY7kiy83qKR+LzrnVdkKwdid/
cmpwPiAd5nSu9/PWN04K1ieVs21Jra2pDt2eWnNTzTsfvkRrOLiu0Zo6md+p
F1xfLMFWDdb0BmOP4GoKf4u9MVjrnondmLo27AXfonxOPgG7KXU92Bs+k3H3
Y/yKfK9n+Xua1g92Sep6syu8rmiNT/5hdebr5K9+gW+Ge9JnAX1uo20UfW4K
1o1nYZcXvSe1l68NPjuYEVxXKj7LV+g+reHXmM/9o32E/MD10fm3xhyU5XXK
U24O1pxnYytEawfSahYXvZe0X54MrluXYq8JPqeYrrVN/y3KuXnfpanrvm60
1wyu3xdjrwo+E5mKvTr4XGMatlZwzf4zthCcv0lj3Mo4t+StOdQOPlOQbt87
+kxCv9UgOHeSnnNTdC2h/PmG6PxeeenKonVw+dWKwXrsQMXA4PxKupPqeuUj
yutvjq4flAM/FnxWIt2+dLAO8Dn2sGBdepDWRnSNobz39uh4rJykZLAO0Dd4
bkbBxygXCj6L0bnAU8H+TTrVXdE1kvKWB6NrRdXIVwSfoUiTyQdr7/LVd0Rr
o8p56gfnftK+Gmdart6xYXA+KY2rTvBZj85BHg/OY3W2Ujc499aZi/QH7eP+
jHFbdF2qXKtJcN4oDadGtP6imFsvWh/WOzbINFXlFY9G6zKKuQ0z3VX5kvbE
dMY5i7/rZ7qxYt9Tmbas86xGmS6ts5UnMz1Zc/5c8BxKD3wui/WqQZ7OdGbl
0qW4Hspbr34+04f1jWpFaz3as6uKPiNRDF1T9PmK4tEt0XqB8sDng/NqaXe3
RtfYyhUbB+fh0ifrRmtJyh+qR9ft8i01o7Uk7d/a0TqIfEKj4Hxbmucj0TqX
9sjj0XrTZ/ruwTrVQr1HtEag877Po7Ut+ZMHojUL1RefRJ/5ySeE4DpLmnbP
6PMk7btO0Wd78lEdo88dtcd7RZ/nad8dpbnOWzPfmfrsRvphl+jzSNU43aLP
/BQ7ukefY+k5m2Yau/zkE9G6mGLi7tQxXXpyleAzIOnwlYLPfaTht4k+05If
aBd9niQ/Via4NtSZwqfR56CKKW2jz7rkcw4NPjOS5t8h+vxG/rlz9PmrYtNt
mqO8zwT7RNd78vN9o7VF+eTPovVB+TTF81qKd/jM66L1DtWJTaLPF3Rusl9w
vakzjnuitQ/VCDFYz9R5R4/oMzzlV3tS17PSUe+O1kRUgxwSfM6l84vW0ed5
8o2tos/SFHP3pq55dQ5SLlgj1fnFvdFaieqUA4OfWec490VrT6r974/WpFT7
Hxx87qbznYej9UrFoBeiz1MU73al1iq1Dp+J1i6VS/8fnNphVw==
                 "]], Polygon3DBox[CompressedData["
1:eJwtmnfgVuMbxt9eOc+39zlvb1pSZEay988me8+yVzYJkZBRSbQ0tXeiCKkQ
2kNTQ0VDhYqU7FQKv+vjOn+cOte5nzPec577vq/rer77N3r46ib5XC53n/4p
r/8vDLnczYn2hd8q5HJdYi53kPbb6djlpVzuUOHWwuM1rqLwuoq5XC/FjtWx
FRrfTfGDtd9Bx65U/Hsdu0K4jcZv0thNwlcLvyS8RbirxtcRbq/xV2j8Izre
VfuH6djnGvulxjQXrsw9OVfj39L+1xq3t8Z/rXgXxevp2GLF91e8hfZHK15U
/GzhvsILhasKdxc+RLijzrlKeJnOv1H7u+nYSJ1/oeJDtP+lxu+p+GQdqyF8
i/DVwhuFrxR+UXizzl2u7UmdX0XHPlZsrXBn4UOFFwlfpeu9qf21Gl9L5//A
MeG2wj9qbIWyXG6p8FfaKmn/PI3vrP2lir+q8RcIDxb+Qri68PX6/yldv6qO
faJrXaT4UO0v1/Eain+ja76q+NGco3h9xfvxLIpX43zh94S/F95X+AXhisJN
dc7ZwkN1zl/lcrmzFD9d+HnFKyh+j+KnCd+u4620X0vHpmlsa8WL2n9Ex85S
/EzhPsILNK6KcCvhVLiJ4mcKtxSOwo2FzxD+n3BX4Vkav4fwc8Jlwncpfqrw
s8JBuJHwKcI3CI8R3qjx+wmfK/yK8BLhHsJXCo8UXiNcU/grvY+XdO4BOjZH
z7tKuK3w/txT+DqNH6397zS+tsY/I5wI364xJws/HZ0L5MRJwi2Edxe+Vfh/
wm2ES8KPC9cXvli4h/BKXa+38OXCI4RXC+8lPC3V/8ItNX6lnuVoxdsLT1a8
pPh9wblGzs3T89Uq5nJTtH+Ijh+v+D7C04QPFT5ReC/hScJ1hI8Vrik8Wfhg
4eOEv9U9eup6xzBHdL1Ldb+ezDfF+yq+WvGXFT9Qx+YqvqfO/0T7+yt+tOLV
hT8W3k/4KOEqwh8K7yN8uHBV4fHCtYWPEN5beKpwXeETSv6N/NaaOjZV1z9W
9++g/SmKV1K8kfAo4V+FhwpX0/kfCe8rfKTwyYp3E54tXFm4sfCnwjuFDxO+
RPhV4VXCfYR3Kzrfc1m+7dL9J+n+1+vYv7r/LwXvv6L4r4odrvOfEJ4g3Ebj
6wk/Ti4Ltxa+Ufg14U3Cg4UPE25G7gm/IPyO8GPUPt3jMeEjhJsLT1T8ReFD
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
4p8G1zbuwb245t5wr+jcIyfJzf8DjJElDw==
                 "]], Polygon3DBox[CompressedData["
1:eJwt13nYVdMaAPCj+jr5ztd3JA2GMhaPW+EiHrNrvEhK4dKgVCjNE5GUFEkZ
GqUiTaSBolBKc2miWSONaKJRGu7vfXZ/vM+z3t9+91n77L32WmtfWL959WYF
UqnUCpEjfslLpQamU6lvCqdS34q/81Op/KKp1H52lighymdTqT3qRmsvULNQ
FGarWA82Rv6Z2OPcxexF9oF8sNjGTrCV7JD8sCjp3Bx9bGU5orAow0qzAkVS
qYvll4ir2PRMKjVNe6PznnfhleR/+725bAfbKYqpayVanrrOTxxrrX2G2qzY
zUaxFixfXlTsYiNZc5YrP138zoazpqyIPC1+Yx+z59hW7cHai/XZyLWcyPX/
2BC2hD3NTrLtbChbyp6Jm+13trAP2CLWkB1Xl8cz4g/HRjjWTB+/ag/S/kFd
A3XH1G1m/dk8Vo/9zVaznmwqq8l2szXsLTaNPcL2sI2sL5vD6rLDuclzezOd
PO947o30+yN7lU2UV1G3Xd1PrCubxB5k29hK1p1NZtXYb2wF68a+Yg+xnWw5
e419yaqyHayQ/1pQ7HRsmGNN9FtYniN2sI9Y42wyJt9PJ+MsxtuzbBnrxMbL
7/V7m/3eWc4rLvY69qljbdTN1W6aTsZejMHH2TzWjA2RX+fcpc4t6bwSYp9j
Yxxrqy5j/O3RLiumqKvreC7bHeMz/jOrHeOH7ZNfEO8Nq8fy2F75+eJr9mSM
KbZLfl7cG1aHzddfc/lQ13I9W+ZaNrF+bC57kh1hs1kj1o9dyeblJu/WS+nk
XYt3rp5r/p7VYb3kb4nqbCary3rLL3PuDOcuYR3ZWHY328iWspfZOHYP28Rm
sYasL7uCzWc/sHZsJLuNrWGLWHs2it3O1rIFrA0bzm5hq9lC1paNYLeyVWwO
e5r1Z1exBbnJnHPg1Hsf7/9w/2O9uve0Z6mrre6AunXsXTaT1WIHY/y5r7+y
gvGMWQ35ZDFRvkJdc1ZOPkVMYitZC1Ze/rX4kq1iLdml8uXiF1YgxhF7WP6T
WC8/rq4/qyJfGe81KxTPk9WUr455RJ6J/8yekP8o1smPObcfe0D+lfiCLWcx
IV8S1yE+Zz+xpuziuF4xnuW5H+drXyBmiO/YJnUvqLsicjGVbWDtWcWYN8W3
bD1rxyrIp7t/j7Bu7AL2tfs3lX/D1rG27F/Rh7pHWXd2IZui7pu4braatWKX
yWdGsC3sZXZN9Bn3lf3M2rDL5Wtinov/EeOI1ZKvivlVnhvPmz0uXyZ+lv/j
3L7sfvk8sZD9wV5jN8b/dX1VWafoN+YE92cau4e1jzVB3aeuea3aP9mZMfbZ
U/H74i958Rj7rEE8W3FUfm7MWaxJPLNYa+TnxBzIGsvX6qOX/Dt9PMr26uNn
1ptNZ4+xfWyD2tOsZRfFfMxayb+PkP+qriO7Wr7BuX3YbFaHHYp3K8Yb2896
sTvli2NcsgOsN7sr5hLxA9vFurGb5HMi2HbWmV0nnysWsN9ZV3aDfFYE28o6
sWvlsyPYNvYKqxzniUVsN+vObpYvjfvAjrI+7D75ErGCHWRvs7vjmcV1sz3s
dXZLXG+8D+yvmK/YHfJD7sFktoatFfmx/poPdrLS4nN1j8XawTbJs+IT9hDr
IarIGznvdDbB/evO7mNPxj6FjWWvs/tZfZZm49gb7AHWgBVh49mbrFqsxSyP
TWTd2H9ZHZbDPmO9WU3Wjp3BJrOerHrsM1hRNon1YjVibWJZ9hUbwp5nA9k1
bB0byl5g77Nr2Xo2OpOsk6lssheJPcn4TLLWpbPJ+hXr2NhMsr/JYcW0zxSf
ZZL9TaFssgeKvdDn4ex0drb2OWJMJtl7FMwm+6LYH03IJGtiEVZKu3T0mUn2
RgWyyZ4l9i6fZJK90WnZZP8U+6hRmWQdP5mfrPWx5r8lHmat4tn6b1/6b13Z
3aw1S7HR7EV2I6vNDp3mPrEO7Ab2BDvIBrP3WC3WkZV27nQ2gD3LerBybBEb
zFqzPqwSW8neYY+zF2Mfyqaxd9kT7CVWin3H+rL67FVWhs1m/VkD9ho7n81l
/dhTrCsry+awPqwe68LOY7PYQNaYvcnKs8VsJBsQ+wVWg/3DPmCt2HusIlvB
3mdNWE92KVvCXma3sKdiz+6+fMQ6sptZPXaEfcheYjexurH3ZkNZJ3Yra8iO
smHsVXYXa8lOslGsC7uTNWcn2Ej2Nvsf68BKuJaprDO7gzVlx9WNYK+w/7Am
7BgbzgaxluxdVsG5y2NP6J3ezM4Qn7Jqaj4UHeSD1FVmG9QNY13Yx+xmtpUV
d+4xVkHMZc+pOZsVMu9ewxaz1jHOWQ67li1hbdi5rDCrzJaytuwsdlxeUcxj
TeP9YiflV4gFrDkrwU7IK4n5rBkrxVJ+70q2kLXIJN8zBdnV7N9itPdkCy/K
Lo85P/6HfKIYF3sGx8tolxXnOTet7jq+TF07Vphtl5cU49kjLM12yEuJCexR
VoBtlOdHn+zBTPK9tS2dfM/Fd92QmBfYQe1ysZ6paxhrFtsgLypGsaqsDCvi
Wq5nP7L2McewI/LLxPfsmZhj2CF5+VgLWSNWjB2WXypmsKdPzfdT0sm3W3zD
vZJN5piYa/7MS+aodtlkfop56i82Ntb1bLLuP6j9rPMai1X5ydwRc0iua8yI
svocl0m+A+M7Nb4R4lshvg2eSyf75Ngvb8xP9s+108keIvYSa9kXmaS/XOee
G88i5jTRmQ1Tc5O+tuhzOHsjxi27i+1iI9g77Av2ANvPjupjPjvC3mHXx7wp
Xo91jN3J/shNvmvnpZNv5PhW7qn/Y2xpzKfygepuPTU+YpwcyEv2hi+oO6g9
QXuzug7qLjp13XH9+/OS8fW8usPa07X3qntD3VWOH2Ez2D7Wg13JjrNlsfbE
msRuZyfZ6lh7xIfsHpZyr9fEWiE+Yvdmku/9Venkuz6+7/vp9x+2RPuEPgao
u03d5kzyXRTfR3me2y/y/wML3FKt
                 "]]},
               Annotation[#, "Charting`Private`Tag$323468#3"]& ]],
             Lighting->Automatic]}, {}, {}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0stOU0EAgOGBthRELuEBuDxA4QXAF+CyYFlYuSskui3BrYEXoLCVpPIC
hZ1yaRVwCQqIoBBiCKAh3DXE4DcJyfnzTSYnZ2bOOR3PXw6+qAohvNat4vhS
R2qpDaGZ7WxjFzv5jD3sZx+HOcRRjnCcrzRmPMNJznGaC3zLD5znZ1Y4UBfC
Mf9oU9f6pXcJ9/A9v3CRW1ziNpe5wxV+ZZkV7cY1+I0fucdV7nON37nOH/zE
A75JhnDCvzrUjX7r3B434hzL3GAprsUiSyywyAkWOKW8cZ455phllr3sZTe7
mWGGrXHee/jJOzXpSmdK22MjU2xggk/j92I9H6pDeMJ/9Ihwz9r4PnmndDwP
a+IzmeIFk/F8TMSz0hVmTZ4+/g//AXXMUGU=
             "]]}, 
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0kkvnVEAx+FzcU1LkdT2blha8Qn4Aliwa1gjxFRTWViJsJE00rBpxBwS
EeHqFyhqntKI0LIwi3RhKM9NF788/9XJed+cWGVtSU0khNCjW+OJl/ylkowQ
MviROaxlHjtZyD4W8yvLOMkqLjOuevuA3bzgAP9yhNHMEGaYzRV+4Qnvtapr
/VFDNIQ1NnKdTfzJZm6whZv8xC22cpttbNeO3cHdxL25x8/cZxcP2M1DlqeG
cMoHHelG58p3tx+MMc4sTjOZw3z0Tf2J+7KLe9xVnb3ISo6zlEMsYi8L2M5c
VvMDB515zDul60q/9T0lhDTGmcolRhPnM4ULTOY8kzjHWUXsGQZO8c2c4D+O
8ZWjfOE3PrPCfziL/H8P73t+Ugs=
             "]]}, 
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LVFEcwOEzA01hC6dPMKNby7dS2yh+AEVw6xsmoTToIOJi3Av2CWrh
WsG9insdJ83yhRhETZAxy5Y5qVnqc2nx4zkXLvcc/udWvcp2j8VCCNP6Hg/h
l4cSv2i2IoQ4F/iEK0yzwDoW2cZv7GSZvXzwOISEMtbVnGID37Kd79nFefZz
iSfc57nWom/qq2oehpDnU67zGQus5QfWcYP13Iz24Uc28rm2rF/wE5v4mc3c
Zgt3+JK7rHwUwgF/ak9nOlbO2VaZ4SJ7OcdOvmMbZ6KzMMc0U3pjHWdPNFez
6WCJrdF8Wcs8U1xmMtrP+0X+UEynOtJkwgVxgnfuaJy3zPIfR/mXGd5whMP6
Y/2a1xziFQd5yQH+Zh/L7OEFk+ZwGP//P9wDHbtN0A==
             "]]}, 
           {GrayLevel[0.2], 
            Line3DBox[{2066, 2378, 3359, 2288, 2065, 3360, 2289, 2067, 3361, 
             2290, 2068, 3362, 2291, 2069, 3363, 2292, 2070, 3364, 2293, 2071,
              3365, 3045, 3462, 2072, 3046, 3463, 2073, 3366, 2294, 2074, 
             3367, 2295, 2075, 3368, 2296, 2076, 3369, 2297, 2077, 3370, 2298,
              2078, 1181, 2299, 2379}], 
            Line3DBox[{2080, 3047, 3464, 2079, 3371, 2300, 2081, 3372, 2301, 
             2082, 3373, 2302, 2083, 3374, 2303, 2084, 3375, 2304, 2085, 3376,
              3048, 3465, 2086, 3049, 3466, 2087, 3050, 3467, 2088, 3377, 
             2305, 2089, 3378, 2306, 2090, 3379, 2307, 2091, 3380, 2308, 2092,
              3381, 2309, 2093}], 
            Line3DBox[{2095, 3051, 3468, 2094, 3052, 3469, 2096, 3382, 2310, 
             2097, 3383, 2311, 2098, 3384, 2312, 2099, 3385, 2313, 2100, 3386,
              3053, 3470, 2101, 3054, 3471, 2102, 3055, 3472, 2103, 3056, 
             3473, 2104, 3387, 2314, 2105, 3388, 2315, 2106, 3389, 2316, 2107,
              3390, 2317, 2108}], 
            Line3DBox[{2110, 3057, 3474, 2109, 3058, 3475, 2111, 3059, 3476, 
             2112, 3391, 2318, 2113, 3392, 2319, 2114, 3393, 2320, 2115, 3394,
              3060, 3477, 2116, 3061, 3478, 2117, 3062, 3479, 2118, 3063, 
             3480, 2119, 3064, 3481, 2120, 3395, 2321, 2121, 3396, 2322, 2122,
              3397, 2323, 2123}], 
            Line3DBox[{2125, 3065, 3482, 2124, 3066, 3483, 2126, 3067, 3484, 
             2127, 3068, 3485, 2128, 3398, 2324, 2129, 3399, 2325, 2130, 3400,
              3069, 3486, 2131, 3070, 3487, 2132, 3071, 3488, 2133, 3072, 
             3489, 2134, 3073, 3490, 2135, 3074, 3491, 2136, 3401, 2326, 2137,
              3402, 2327, 2138}], 
            Line3DBox[{2140, 3075, 3492, 2139, 3076, 3493, 2141, 3077, 3494, 
             2142, 3078, 3495, 2143, 3079, 3496, 2144, 3403, 2328, 2145, 3404,
              3080, 3497, 2146, 3081, 3498, 2147, 3082, 3499, 2148, 3083, 
             3500, 2149, 3084, 3501, 2150, 3085, 3502, 2151, 3086, 3503, 2152,
              3405, 2329, 2153}], 
            Line3DBox[{2155, 3087, 3504, 2154, 3088, 3505, 2156, 3089, 3506, 
             2157, 3090, 3507, 2158, 3091, 3508, 2159, 3092, 3509, 2160, 3406,
              3093, 3510, 2161, 3094, 3511, 2162, 3095, 3512, 2163, 3096, 
             3513, 2164, 3097, 3514, 2165, 3098, 3515, 2166, 3099, 3516, 2167,
              3100, 3517, 2168}], 
            Line3DBox[{2172, 3407, 2330, 2170, 3408, 2331, 2174, 3409, 2332, 
             2176, 3410, 2333, 2178, 3411, 2334, 2180, 3412, 2335, 2182, 3413,
              3108, 3526, 2184, 3414, 2336, 2186, 3415, 2337, 2188, 3416, 
             2338, 2190, 3417, 2339, 2192, 3418, 2340, 2194, 3419, 2341, 2196,
              3420, 2342, 2198}], 
            Line3DBox[{2197, 3533, 3115, 2195, 3532, 3114, 2193, 3531, 3113, 
             2191, 3530, 3112, 2189, 3529, 3111, 2187, 3528, 3110, 2185, 3527,
              3109, 2183, 3525, 3524, 3107, 2181, 3523, 3106, 2179, 3522, 
             3105, 2177, 3521, 3104, 2175, 3520, 3103, 2173, 3519, 3102, 2169,
              3518, 3101, 2171}], 
            Line3DBox[{2200, 3116, 3534, 2199, 3421, 2343, 2201, 3422, 2344, 
             2202, 3423, 2345, 2203, 3424, 2346, 2204, 3425, 2347, 2205, 3426,
              3117, 3535, 2206, 3118, 3536, 2207, 3427, 2348, 2208, 3428, 
             2349, 2209, 3429, 2350, 2210, 3430, 2351, 2211, 3431, 2352, 2212,
              3432, 2353, 2213}], 
            Line3DBox[{2215, 3119, 3537, 2214, 3120, 3538, 2216, 3433, 2354, 
             2217, 3434, 2355, 2218, 3435, 2356, 2219, 3436, 2357, 2220, 3437,
              3121, 3539, 2221, 3122, 3540, 2222, 3123, 3541, 2223, 3438, 
             2358, 2224, 3439, 2359, 2225, 3440, 2360, 2226, 3441, 2361, 2227,
              3442, 2362, 2228}], 
            Line3DBox[{2230, 3124, 3542, 2229, 3125, 3543, 2231, 3126, 3544, 
             2232, 3443, 2363, 2233, 3444, 2364, 2234, 3445, 2365, 2235, 3446,
              3127, 3545, 2236, 3128, 3546, 2237, 3129, 3547, 2238, 3130, 
             3548, 2239, 3447, 2366, 2240, 3448, 2367, 2241, 3449, 2368, 2242,
              3450, 2369, 2243}], 
            Line3DBox[{2245, 3131, 3549, 2244, 3132, 3550, 2246, 3133, 3551, 
             2247, 3134, 3552, 2248, 3451, 2370, 2249, 3452, 2371, 2250, 3453,
              3135, 3553, 2251, 3136, 3554, 2252, 3137, 3555, 2253, 3138, 
             3556, 2254, 3139, 3557, 2255, 3454, 2372, 2256, 3455, 2373, 2257,
              3456, 2374, 2258}], 
            Line3DBox[{2260, 3140, 3558, 2259, 3141, 3559, 2261, 3142, 3560, 
             2262, 3143, 3561, 2263, 3144, 3562, 2264, 3457, 2375, 2265, 3458,
              3145, 3563, 2266, 3146, 3564, 2267, 3147, 3565, 2268, 3148, 
             3566, 2269, 3149, 3567, 2270, 3150, 3568, 2271, 3459, 2376, 2272,
              3460, 2377, 2273}], 
            Line3DBox[{2287, 2384, 2383, 3582, 2286, 3580, 3162, 2285, 3579, 
             3161, 2284, 3578, 3160, 2283, 3577, 3159, 2282, 3576, 3158, 2281,
              3575, 3157, 2280, 3574, 3156, 3461, 2279, 3573, 3155, 2278, 
             3572, 3154, 2277, 3571, 3153, 2276, 3570, 3152, 2275, 3569, 3151,
              2274, 3581, 2381, 2380, 2382}], 
            Line3DBox[{2386, 2708, 1410, 2385, 3681, 2608, 2387, 3682, 2609, 
             2388, 3683, 2610, 2389, 3684, 2611, 2390, 3685, 2612, 2391, 3686,
              2613, 2392, 3687, 1418, 2393, 3688, 2614, 2394, 3689, 2615, 
             2395, 3690, 2616, 2396, 3691, 2617, 2397, 3692, 2618, 2398, 3260,
              3796, 2619, 2709}], 
            Line3DBox[{2400, 3163, 3583, 2399, 1425, 2401, 3693, 2620, 2402, 
             3694, 2621, 2403, 3695, 2622, 2404, 3696, 2623, 2405, 3697, 2624,
              2406, 3698, 3164, 3584, 2407, 1433, 2408, 3699, 2625, 2409, 
             3700, 2626, 2410, 3701, 2627, 2411, 3702, 2628, 2412, 3703, 2629,
              2413}], 
            Line3DBox[{2415, 3165, 3585, 2414, 3166, 3586, 2416, 1441, 2417, 
             3704, 2630, 2418, 3705, 2631, 2419, 3706, 2632, 2420, 3707, 2633,
              2421, 3708, 3167, 3587, 2422, 3168, 3588, 2423, 1449, 2424, 
             3709, 2634, 2425, 3710, 2635, 2426, 3711, 2636, 2427, 3712, 2637,
              2428}], 
            Line3DBox[{2430, 3169, 3589, 2429, 3170, 3590, 2431, 3171, 3591, 
             2432, 1457, 2433, 3713, 2638, 2434, 3714, 2639, 2435, 3715, 2640,
              2436, 3716, 3172, 3592, 2437, 3173, 3593, 2438, 3174, 3594, 
             2439, 1465, 2440, 3717, 2641, 2441, 3718, 2642, 2442, 3719, 2643,
              2443}], 
            Line3DBox[{2445, 3175, 3595, 2444, 3176, 3596, 2446, 3177, 3597, 
             2447, 3178, 3598, 2448, 3720, 2644, 2449, 3721, 2645, 2450, 3722,
              2646, 2451, 3723, 3179, 3599, 2452, 3180, 3600, 2453, 3181, 
             3601, 2454, 3182, 3602, 2455, 1481, 2456, 3724, 2647, 2457, 3725,
              2648, 2458}], 
            Line3DBox[{2460, 3183, 3603, 2459, 3184, 3604, 2461, 3185, 3605, 
             2462, 3186, 3606, 2463, 3187, 3607, 2464, 3726, 2649, 2465, 3727,
              2650, 2466, 3728, 3188, 3608, 2467, 3189, 3609, 2468, 3190, 
             3610, 2469, 3191, 3611, 2470, 3192, 3612, 2471, 1497, 2472, 3729,
              2651, 2473}], 
            Line3DBox[{2475, 3193, 3613, 2474, 3194, 3614, 2476, 3195, 3615, 
             2477, 3196, 3616, 2478, 3197, 3617, 2479, 3198, 3618, 2480, 3730,
              2652, 2481, 3731, 3199, 3619, 2482, 3200, 3620, 2483, 3201, 
             3621, 2484, 3202, 3622, 2485, 3203, 3623, 2486, 3204, 3624, 2487,
              1513, 2488}], 
            Line3DBox[{2492, 3732, 2653, 2490, 3733, 2654, 2494, 3734, 2655, 
             2496, 3735, 2656, 2498, 3736, 2657, 2500, 3737, 2658, 2502, 3738,
              2659, 2504, 3740, 3741, 2660, 2506, 3742, 2661, 2508, 3743, 
             2662, 2510, 3744, 2663, 2512, 3745, 2664, 2514, 3746, 2665, 2516,
              3747, 2666, 2518}], 
            Line3DBox[{2517, 3638, 3218, 2515, 3637, 3217, 2513, 3636, 3216, 
             2511, 3635, 3215, 2509, 3634, 3214, 2507, 3633, 3213, 2505, 3632,
              3212, 3739, 2503, 3631, 3211, 2501, 3630, 3210, 2499, 3629, 
             3209, 2497, 3628, 3208, 2495, 3627, 3207, 2493, 3626, 3206, 2489,
              3625, 3205, 2491}], 
            Line3DBox[{2520, 3219, 3639, 2519, 3748, 2667, 2521, 3749, 2668, 
             2522, 3750, 2669, 2523, 3751, 2670, 2524, 3752, 2671, 2525, 3753,
              2672, 2526, 3754, 3220, 3640, 2527, 3755, 2673, 2528, 3756, 
             2674, 2529, 3757, 2675, 2530, 3758, 2676, 2531, 3759, 2677, 2532,
              3760, 2678, 2533}], 
            Line3DBox[{2535, 3221, 3641, 2534, 3222, 3642, 2536, 3761, 2679, 
             2537, 3762, 2680, 2538, 3763, 2681, 2539, 3764, 2682, 2540, 3765,
              2683, 2541, 3766, 3223, 3643, 2542, 3224, 3644, 2543, 3767, 
             2684, 2544, 3768, 2685, 2545, 3769, 2686, 2546, 3770, 2687, 2547,
              3771, 2688, 2548}], 
            Line3DBox[{2550, 3225, 3645, 2549, 3226, 3646, 2551, 3227, 3647, 
             2552, 3772, 2689, 2553, 3773, 2690, 2554, 3774, 2691, 2555, 3775,
              2692, 2556, 3776, 3228, 3648, 2557, 3229, 3649, 2558, 3230, 
             3650, 2559, 3777, 2693, 2560, 3778, 2694, 2561, 3779, 2695, 2562,
              3780, 2696, 2563}], 
            Line3DBox[{2565, 3231, 3651, 2564, 3232, 3652, 2566, 3233, 3653, 
             2567, 3234, 3654, 2568, 3781, 2697, 2569, 3782, 2698, 2570, 3783,
              2699, 2571, 3784, 3235, 3655, 2572, 3236, 3656, 2573, 3237, 
             3657, 2574, 3238, 3658, 2575, 3785, 2700, 2576, 3786, 2701, 2577,
              3787, 2702, 2578}], 
            Line3DBox[{2580, 3239, 3659, 2579, 3240, 3660, 2581, 3241, 3661, 
             2582, 3242, 3662, 2583, 3243, 3663, 2584, 3788, 2703, 2585, 3789,
              2704, 2586, 3790, 3244, 3664, 2587, 3245, 3665, 2588, 3246, 
             3666, 2589, 3247, 3667, 2590, 3248, 3668, 2591, 3791, 2705, 2592,
              3792, 2706, 2593}], 
            Line3DBox[{2607, 2714, 2713, 3795, 2606, 3680, 3259, 2605, 3679, 
             3258, 2604, 3678, 3257, 2603, 3677, 3256, 2602, 3676, 3255, 2601,
              3675, 3254, 3794, 2600, 2707, 3793, 2599, 3674, 3253, 2598, 
             3673, 3252, 2597, 3672, 3251, 2596, 3671, 3250, 2595, 3670, 3249,
              2594, 3669, 2711, 2710, 2712}], 
            Line3DBox[{2716, 3038, 1849, 2715, 3895, 2938, 2717, 3896, 2939, 
             2718, 3897, 2940, 2719, 3898, 2941, 2720, 3899, 2942, 2721, 3900,
              2943, 2722, 3901, 1857, 2723, 3902, 2944, 2724, 3903, 2945, 
             2725, 3904, 2946, 2726, 3905, 2947, 2727, 3906, 2948, 2728, 3358,
              4010, 2949, 3039}], 
            Line3DBox[{2730, 3261, 3797, 2729, 1864, 2731, 3907, 2950, 2732, 
             3908, 2951, 2733, 3909, 2952, 2734, 3910, 2953, 2735, 3911, 2954,
              2736, 3912, 3262, 3798, 2737, 1872, 2738, 3913, 2955, 2739, 
             3914, 2956, 2740, 3915, 2957, 2741, 3916, 2958, 2742, 3917, 2959,
              2743}], 
            Line3DBox[{2745, 3263, 3799, 2744, 3264, 3800, 2746, 1880, 2747, 
             3918, 2960, 2748, 3919, 2961, 2749, 3920, 2962, 2750, 3921, 2963,
              2751, 3922, 3265, 3801, 2752, 3266, 3802, 2753, 1888, 2754, 
             3923, 2964, 2755, 3924, 2965, 2756, 3925, 2966, 2757, 3926, 2967,
              2758}], 
            Line3DBox[{2760, 3267, 3803, 2759, 3268, 3804, 2761, 3269, 3805, 
             2762, 1896, 2763, 3927, 2968, 2764, 3928, 2969, 2765, 3929, 2970,
              2766, 3930, 3270, 3806, 2767, 3271, 3807, 2768, 3272, 3808, 
             2769, 1904, 2770, 3931, 2971, 2771, 3932, 2972, 2772, 3933, 2973,
              2773}], 
            Line3DBox[{2775, 3273, 3809, 2774, 3274, 3810, 2776, 3275, 3811, 
             2777, 3276, 3812, 2778, 3934, 2974, 2779, 3935, 2975, 2780, 3936,
              2976, 2781, 3937, 3277, 3813, 2782, 3278, 3814, 2783, 3279, 
             3815, 2784, 3280, 3816, 2785, 1920, 2786, 3938, 2977, 2787, 3939,
              2978, 2788}], 
            Line3DBox[{2790, 3281, 3817, 2789, 3282, 3818, 2791, 3283, 3819, 
             2792, 3284, 3820, 2793, 3285, 3821, 2794, 3940, 2979, 2795, 3941,
              2980, 2796, 3942, 3286, 3822, 2797, 3287, 3823, 2798, 3288, 
             3824, 2799, 3289, 3825, 2800, 3290, 3826, 2801, 1936, 2802, 3943,
              2981, 2803}], 
            Line3DBox[{2805, 3291, 3827, 2804, 3292, 3828, 2806, 3293, 3829, 
             2807, 3294, 3830, 2808, 3295, 3831, 2809, 3296, 3832, 2810, 3944,
              2982, 2811, 3945, 3297, 3833, 2812, 3298, 3834, 2813, 3299, 
             3835, 2814, 3300, 3836, 2815, 3301, 3837, 2816, 3302, 3838, 2817,
              1952, 2818}], 
            Line3DBox[{2822, 3946, 2983, 2820, 3947, 2984, 2824, 3948, 2985, 
             2826, 3949, 2986, 2828, 3950, 2987, 2830, 3951, 2988, 2832, 3952,
              2989, 2834, 3954, 3955, 2990, 2836, 3956, 2991, 2838, 3957, 
             2992, 2840, 3958, 2993, 2842, 3959, 2994, 2844, 3960, 2995, 2846,
              3961, 2996, 2848}], 
            Line3DBox[{2847, 3852, 3316, 2845, 3851, 3315, 2843, 3850, 3314, 
             2841, 3849, 3313, 2839, 3848, 3312, 2837, 3847, 3311, 2835, 3846,
              3310, 3953, 2833, 3845, 3309, 2831, 3844, 3308, 2829, 3843, 
             3307, 2827, 3842, 3306, 2825, 3841, 3305, 2823, 3840, 3304, 2819,
              3839, 3303, 2821}], 
            Line3DBox[{2850, 3317, 3853, 2849, 3962, 2997, 2851, 3963, 2998, 
             2852, 3964, 2999, 2853, 3965, 3000, 2854, 3966, 3001, 2855, 3967,
              3002, 2856, 3968, 3318, 3854, 2857, 3969, 3003, 2858, 3970, 
             3004, 2859, 3971, 3005, 2860, 3972, 3006, 2861, 3973, 3007, 2862,
              3974, 3008, 2863}], 
            Line3DBox[{2865, 3319, 3855, 2864, 3320, 3856, 2866, 3975, 3009, 
             2867, 3976, 3010, 2868, 3977, 3011, 2869, 3978, 3012, 2870, 3979,
              3013, 2871, 3980, 3321, 3857, 2872, 3322, 3858, 2873, 3981, 
             3014, 2874, 3982, 3015, 2875, 3983, 3016, 2876, 3984, 3017, 2877,
              3985, 3018, 2878}], 
            Line3DBox[{2880, 3323, 3859, 2879, 3324, 3860, 2881, 3325, 3861, 
             2882, 3986, 3019, 2883, 3987, 3020, 2884, 3988, 3021, 2885, 3989,
              3022, 2886, 3990, 3326, 3862, 2887, 3327, 3863, 2888, 3328, 
             3864, 2889, 3991, 3023, 2890, 3992, 3024, 2891, 3993, 3025, 2892,
              3994, 3026, 2893}], 
            Line3DBox[{2895, 3329, 3865, 2894, 3330, 3866, 2896, 3331, 3867, 
             2897, 3332, 3868, 2898, 3995, 3027, 2899, 3996, 3028, 2900, 3997,
              3029, 2901, 3998, 3333, 3869, 2902, 3334, 3870, 2903, 3335, 
             3871, 2904, 3336, 3872, 2905, 3999, 3030, 2906, 4000, 3031, 2907,
              4001, 3032, 2908}], 
            Line3DBox[{2910, 3337, 3873, 2909, 3338, 3874, 2911, 3339, 3875, 
             2912, 3340, 3876, 2913, 3341, 3877, 2914, 4002, 3033, 2915, 4003,
              3034, 2916, 4004, 3342, 3878, 2917, 3343, 3879, 2918, 3344, 
             3880, 2919, 3345, 3881, 2920, 3346, 3882, 2921, 4005, 3035, 2922,
              4006, 3036, 2923}], 
            Line3DBox[{2937, 3044, 3043, 4009, 2936, 3894, 3357, 2935, 3893, 
             3356, 2934, 3892, 3355, 2933, 3891, 3354, 2932, 3890, 3353, 2931,
              3889, 3352, 4008, 2930, 3037, 4007, 2929, 3888, 3351, 2928, 
             3887, 3350, 2927, 3886, 3349, 2926, 3885, 3348, 2925, 3884, 3347,
              2924, 3883, 3041, 3040, 3042}]}, 
           {GrayLevel[0.2], 
            Line3DBox[{749, 972, 3360, 750, 986, 3371, 778, 3469, 1001, 793, 
             3475, 1016, 808, 3483, 1031, 823, 3493, 1046, 838, 3505, 1061, 
             853, 3519, 1076, 3408, 868, 1091, 3421, 883, 3538, 1106, 898, 
             3543, 1121, 913, 3550, 1136, 928, 3559, 1151, 943, 3569, 1166, 
             958}], Line3DBox[{751, 973, 3361, 752, 987, 3372, 779, 1002, 
             3382, 794, 3476, 1017, 809, 3484, 1032, 824, 3494, 1047, 839, 
             3506, 1062, 854, 3520, 1077, 3409, 869, 1092, 3422, 884, 1107, 
             3433, 899, 3544, 1122, 914, 3551, 1137, 929, 3560, 1152, 944, 
             3570, 1167, 959}], 
            Line3DBox[{753, 974, 3362, 754, 988, 3373, 780, 1003, 3383, 795, 
             1018, 3391, 810, 3485, 1033, 825, 3495, 1048, 840, 3507, 1063, 
             855, 3521, 1078, 3410, 870, 1093, 3423, 885, 1108, 3434, 900, 
             1123, 3443, 915, 3552, 1138, 930, 3561, 1153, 945, 3571, 1168, 
             960}], Line3DBox[{755, 975, 3363, 756, 989, 3374, 781, 1004, 
             3384, 796, 1019, 3392, 811, 1034, 3398, 826, 3496, 1049, 841, 
             3508, 1064, 856, 3522, 1079, 3411, 871, 1094, 3424, 886, 1109, 
             3435, 901, 1124, 3444, 916, 1139, 3451, 931, 3562, 1154, 946, 
             3572, 1169, 961}], 
            Line3DBox[{757, 976, 3364, 758, 990, 3375, 782, 1005, 3385, 797, 
             1020, 3393, 812, 1035, 3399, 827, 1050, 3403, 842, 3509, 1065, 
             857, 3523, 1080, 3412, 872, 1095, 3425, 887, 1110, 3436, 902, 
             1125, 3445, 917, 1140, 3452, 932, 1155, 3457, 947, 3573, 1170, 
             962}], Line3DBox[{759, 977, 3365, 761, 991, 3376, 783, 1006, 
             3386, 798, 1021, 3394, 813, 1036, 3400, 828, 1051, 3404, 843, 
             1066, 3406, 858, 3524, 1081, 3413, 873, 1096, 3426, 888, 1111, 
             3437, 903, 1126, 3446, 918, 1141, 3453, 933, 1156, 3458, 948, 
             1171, 3461, 963}], 
            Line3DBox[{763, 3463, 979, 764, 3466, 993, 785, 3471, 1008, 800, 
             3478, 1023, 815, 3487, 1038, 830, 3498, 1053, 845, 3511, 1068, 
             860, 3527, 1083, 3414, 875, 3536, 1098, 890, 3540, 1113, 905, 
             3546, 1128, 920, 3554, 1143, 935, 3564, 1158, 950, 3575, 1173, 
             965}], Line3DBox[{765, 980, 3366, 766, 3467, 994, 786, 3472, 
             1009, 801, 3479, 1024, 816, 3488, 1039, 831, 3499, 1054, 846, 
             3512, 1069, 861, 3528, 1084, 3415, 876, 1099, 3427, 891, 3541, 
             1114, 906, 3547, 1129, 921, 3555, 1144, 936, 3565, 1159, 951, 
             3576, 1174, 966}], 
            Line3DBox[{767, 981, 3367, 768, 995, 3377, 787, 3473, 1010, 802, 
             3480, 1025, 817, 3489, 1040, 832, 3500, 1055, 847, 3513, 1070, 
             862, 3529, 1085, 3416, 877, 1100, 3428, 892, 1115, 3438, 907, 
             3548, 1130, 922, 3556, 1145, 937, 3566, 1160, 952, 3577, 1175, 
             967}], Line3DBox[{769, 982, 3368, 770, 996, 3378, 788, 1011, 
             3387, 803, 3481, 1026, 818, 3490, 1041, 833, 3501, 1056, 848, 
             3514, 1071, 863, 3530, 1086, 3417, 878, 1101, 3429, 893, 1116, 
             3439, 908, 1131, 3447, 923, 3557, 1146, 938, 3567, 1161, 953, 
             3578, 1176, 968}], 
            Line3DBox[{771, 983, 3369, 772, 997, 3379, 789, 1012, 3388, 804, 
             1027, 3395, 819, 3491, 1042, 834, 3502, 1057, 849, 3515, 1072, 
             864, 3531, 1087, 3418, 879, 1102, 3430, 894, 1117, 3440, 909, 
             1132, 3448, 924, 1147, 3454, 939, 3568, 1162, 954, 3579, 1177, 
             969}], Line3DBox[{773, 984, 3370, 774, 998, 3380, 790, 1013, 
             3389, 805, 1028, 3396, 820, 1043, 3401, 835, 3503, 1058, 850, 
             3516, 1073, 865, 3532, 1088, 3419, 880, 1103, 3431, 895, 1118, 
             3441, 910, 1133, 3449, 925, 1148, 3455, 940, 1163, 3459, 955, 
             3580, 1178, 970}], 
            Line3DBox[{775, 1180, 1181, 776, 999, 3381, 791, 1014, 3390, 806, 
             1029, 3397, 821, 1044, 3402, 836, 1059, 3405, 851, 3517, 1074, 
             866, 3533, 1089, 3420, 881, 1104, 3432, 896, 1119, 3442, 911, 
             1134, 3450, 926, 1149, 3456, 941, 1164, 3460, 956, 1183, 3582, 
             1184, 1185}], 
            Line3DBox[{957, 1165, 3581, 1182, 942, 1150, 3558, 927, 1135, 
             3549, 912, 1120, 3542, 897, 1105, 3537, 882, 1090, 3534, 867, 
             3407, 1075, 3518, 852, 1060, 3504, 837, 1045, 3492, 822, 1030, 
             3482, 807, 1015, 3474, 792, 1000, 3468, 777, 985, 3464, 748, 
             3359, 971, 1179, 1186}], 
            Line3DBox[{964, 1172, 3574, 949, 1157, 3563, 934, 1142, 3553, 919,
              1127, 3545, 904, 1112, 3539, 889, 1097, 3535, 874, 1082, 3526, 
             3525, 859, 1067, 3510, 844, 1052, 3497, 829, 1037, 3486, 814, 
             1022, 3477, 799, 1007, 3470, 784, 992, 3465, 762, 978, 3462, 
             760}], Line3DBox[{1188, 1411, 3681, 1189, 1425, 1217, 3586, 1440,
              1232, 3590, 1455, 1247, 3596, 1470, 1262, 3604, 1485, 1277, 
             3614, 1500, 1292, 3626, 1515, 3733, 1307, 1530, 3748, 1322, 3642,
              1545, 1337, 3646, 1560, 1352, 3652, 1575, 1367, 3660, 1590, 
             1382, 3670, 1605, 1397}], 
            Line3DBox[{1190, 1412, 3682, 1191, 1426, 3693, 1218, 1441, 1233, 
             3591, 1456, 1248, 3597, 1471, 1263, 3605, 1486, 1278, 3615, 1501,
              1293, 3627, 1516, 3734, 1308, 1531, 3749, 1323, 1546, 3761, 
             1338, 3647, 1561, 1353, 3653, 1576, 1368, 3661, 1591, 1383, 3671,
              1606, 1398}], 
            Line3DBox[{1192, 1413, 3683, 1193, 1427, 3694, 1219, 1442, 3704, 
             1234, 1457, 1249, 3598, 1472, 1264, 3606, 1487, 1279, 3616, 1502,
              1294, 3628, 1517, 3735, 1309, 1532, 3750, 1324, 1547, 3762, 
             1339, 1562, 3772, 1354, 3654, 1577, 1369, 3662, 1592, 1384, 3672,
              1607, 1399}], 
            Line3DBox[{1194, 1414, 3684, 1195, 1428, 3695, 1220, 1443, 3705, 
             1235, 1458, 3713, 1250, 1473, 3720, 1265, 3607, 1488, 1280, 3617,
              1503, 1295, 3629, 1518, 3736, 1310, 1533, 3751, 1325, 1548, 
             3763, 1340, 1563, 3773, 1355, 1578, 3781, 1370, 3663, 1593, 1385,
              3673, 1608, 1400}], 
            Line3DBox[{1196, 1415, 3685, 1197, 1429, 3696, 1221, 1444, 3706, 
             1236, 1459, 3714, 1251, 1474, 3721, 1266, 1489, 3726, 1281, 3618,
              1504, 1296, 3630, 1519, 3737, 1311, 1534, 3752, 1326, 1549, 
             3764, 1341, 1564, 3774, 1356, 1579, 3782, 1371, 1594, 3788, 1386,
              3674, 1609, 1401}], 
            Line3DBox[{1198, 1416, 3686, 1199, 1430, 3697, 1222, 1445, 3707, 
             1237, 1460, 3715, 1252, 1475, 3722, 1267, 1490, 3727, 1282, 1505,
              3730, 1297, 3631, 1520, 3738, 1312, 1535, 3753, 1327, 1550, 
             3765, 1342, 1565, 3775, 1357, 1580, 3783, 1372, 1595, 3789, 1387,
              1610, 3793, 1402}], 
            Line3DBox[{1200, 1417, 3687, 1202, 1431, 3698, 1223, 1446, 3708, 
             1238, 1461, 3716, 1253, 1476, 3723, 1268, 1491, 3728, 1283, 1506,
              3731, 1298, 1521, 3739, 3740, 1313, 1536, 3754, 1328, 1551, 
             3766, 1343, 1566, 3776, 1358, 1581, 3784, 1373, 1596, 3790, 1388,
              1611, 3794, 1403}], 
            Line3DBox[{1204, 1419, 3688, 1205, 1433, 1225, 3588, 1448, 1240, 
             3593, 1463, 1255, 3600, 1478, 1270, 3609, 1493, 1285, 3620, 1508,
              1300, 3633, 1523, 3742, 1315, 1538, 3755, 1330, 3644, 1553, 
             1345, 3649, 1568, 1360, 3656, 1583, 1375, 3665, 1598, 1390, 3676,
              1613, 1405}], 
            Line3DBox[{1206, 1420, 3689, 1207, 1434, 3699, 1226, 1449, 1241, 
             3594, 1464, 1256, 3601, 1479, 1271, 3610, 1494, 1286, 3621, 1509,
              1301, 3634, 1524, 3743, 1316, 1539, 3756, 1331, 1554, 3767, 
             1346, 3650, 1569, 1361, 3657, 1584, 1376, 3666, 1599, 1391, 3677,
              1614, 1406}], 
            Line3DBox[{1208, 1421, 3690, 1209, 1435, 3700, 1227, 1450, 3709, 
             1242, 1465, 1257, 3602, 1480, 1272, 3611, 1495, 1287, 3622, 1510,
              1302, 3635, 1525, 3744, 1317, 1540, 3757, 1332, 1555, 3768, 
             1347, 1570, 3777, 1362, 3658, 1585, 1377, 3667, 1600, 1392, 3678,
              1615, 1407}], 
            Line3DBox[{1210, 1422, 3691, 1211, 1436, 3701, 1228, 1451, 3710, 
             1243, 1466, 3717, 1258, 1481, 1273, 3612, 1496, 1288, 3623, 1511,
              1303, 3636, 1526, 3745, 1318, 1541, 3758, 1333, 1556, 3769, 
             1348, 1571, 3778, 1363, 1586, 3785, 1378, 3668, 1601, 1393, 3679,
              1616, 1408}], 
            Line3DBox[{1212, 1423, 3692, 1213, 1437, 3702, 1229, 1452, 3711, 
             1244, 1467, 3718, 1259, 1482, 3724, 1274, 1497, 1289, 3624, 1512,
              1304, 3637, 1527, 3746, 1319, 1542, 3759, 1334, 1557, 3770, 
             1349, 1572, 3779, 1364, 1587, 3786, 1379, 1602, 3791, 1394, 3680,
              1617, 1409}], 
            Line3DBox[{1214, 1619, 1620, 3796, 1215, 1438, 3703, 1230, 1453, 
             3712, 1245, 1468, 3719, 1260, 1483, 3725, 1275, 1498, 3729, 1290,
              1513, 1305, 3638, 1528, 3747, 1320, 1543, 3760, 1335, 1558, 
             3771, 1350, 1573, 3780, 1365, 1588, 3787, 1380, 1603, 3792, 1395,
              1622, 3795, 1623, 1624}], 
            Line3DBox[{1396, 1604, 3669, 1621, 1381, 1589, 3659, 1366, 1574, 
             3651, 1351, 1559, 3645, 1336, 1544, 3641, 1321, 1529, 3639, 1306,
              3732, 1514, 3625, 1291, 1499, 3613, 1276, 1484, 3603, 1261, 
             1469, 3595, 1246, 1454, 3589, 1231, 1439, 3585, 1216, 1424, 3583,
              1187, 1410, 1618, 1625}], 
            Line3DBox[{1404, 1612, 3675, 1389, 1597, 3664, 1374, 1582, 3655, 
             1359, 1567, 3648, 1344, 1552, 3643, 1329, 1537, 3640, 1314, 3741,
              1522, 3632, 1299, 1507, 3619, 1284, 1492, 3608, 1269, 1477, 
             3599, 1254, 1462, 3592, 1239, 1447, 3587, 1224, 1432, 3584, 1203,
              1418, 1201}], 
            Line3DBox[{1627, 1850, 3895, 1628, 1864, 1656, 3800, 1879, 1671, 
             3804, 1894, 1686, 3810, 1909, 1701, 3818, 1924, 1716, 3828, 1939,
              1731, 3840, 1954, 3947, 1746, 1969, 3962, 1761, 3856, 1984, 
             1776, 3860, 1999, 1791, 3866, 2014, 1806, 3874, 2029, 1821, 3884,
              2044, 1836}], 
            Line3DBox[{1629, 1851, 3896, 1630, 1865, 3907, 1657, 1880, 1672, 
             3805, 1895, 1687, 3811, 1910, 1702, 3819, 1925, 1717, 3829, 1940,
              1732, 3841, 1955, 3948, 1747, 1970, 3963, 1762, 1985, 3975, 
             1777, 3861, 2000, 1792, 3867, 2015, 1807, 3875, 2030, 1822, 3885,
              2045, 1837}], 
            Line3DBox[{1631, 1852, 3897, 1632, 1866, 3908, 1658, 1881, 3918, 
             1673, 1896, 1688, 3812, 1911, 1703, 3820, 1926, 1718, 3830, 1941,
              1733, 3842, 1956, 3949, 1748, 1971, 3964, 1763, 1986, 3976, 
             1778, 2001, 3986, 1793, 3868, 2016, 1808, 3876, 2031, 1823, 3886,
              2046, 1838}], 
            Line3DBox[{1633, 1853, 3898, 1634, 1867, 3909, 1659, 1882, 3919, 
             1674, 1897, 3927, 1689, 1912, 3934, 1704, 3821, 1927, 1719, 3831,
              1942, 1734, 3843, 1957, 3950, 1749, 1972, 3965, 1764, 1987, 
             3977, 1779, 2002, 3987, 1794, 2017, 3995, 1809, 3877, 2032, 1824,
              3887, 2047, 1839}], 
            Line3DBox[{1635, 1854, 3899, 1636, 1868, 3910, 1660, 1883, 3920, 
             1675, 1898, 3928, 1690, 1913, 3935, 1705, 1928, 3940, 1720, 3832,
              1943, 1735, 3844, 1958, 3951, 1750, 1973, 3966, 1765, 1988, 
             3978, 1780, 2003, 3988, 1795, 2018, 3996, 1810, 2033, 4002, 1825,
              3888, 2048, 1840}], 
            Line3DBox[{1637, 1855, 3900, 1638, 1869, 3911, 1661, 1884, 3921, 
             1676, 1899, 3929, 1691, 1914, 3936, 1706, 1929, 3941, 1721, 1944,
              3944, 1736, 3845, 1959, 3952, 1751, 1974, 3967, 1766, 1989, 
             3979, 1781, 2004, 3989, 1796, 2019, 3997, 1811, 2034, 4003, 1826,
              2049, 4007, 1841}], 
            Line3DBox[{1639, 1856, 3901, 1641, 1870, 3912, 1662, 1885, 3922, 
             1677, 1900, 3930, 1692, 1915, 3937, 1707, 1930, 3942, 1722, 1945,
              3945, 1737, 1960, 3953, 3954, 1752, 1975, 3968, 1767, 1990, 
             3980, 1782, 2005, 3990, 1797, 2020, 3998, 1812, 2035, 4004, 1827,
              2050, 4008, 1842}], 
            Line3DBox[{1643, 1858, 3902, 1644, 1872, 1664, 3802, 1887, 1679, 
             3807, 1902, 1694, 3814, 1917, 1709, 3823, 1932, 1724, 3834, 1947,
              1739, 3847, 1962, 3956, 1754, 1977, 3969, 1769, 3858, 1992, 
             1784, 3863, 2007, 1799, 3870, 2022, 1814, 3879, 2037, 1829, 3890,
              2052, 1844}], 
            Line3DBox[{1645, 1859, 3903, 1646, 1873, 3913, 1665, 1888, 1680, 
             3808, 1903, 1695, 3815, 1918, 1710, 3824, 1933, 1725, 3835, 1948,
              1740, 3848, 1963, 3957, 1755, 1978, 3970, 1770, 1993, 3981, 
             1785, 3864, 2008, 1800, 3871, 2023, 1815, 3880, 2038, 1830, 3891,
              2053, 1845}], 
            Line3DBox[{1647, 1860, 3904, 1648, 1874, 3914, 1666, 1889, 3923, 
             1681, 1904, 1696, 3816, 1919, 1711, 3825, 1934, 1726, 3836, 1949,
              1741, 3849, 1964, 3958, 1756, 1979, 3971, 1771, 1994, 3982, 
             1786, 2009, 3991, 1801, 3872, 2024, 1816, 3881, 2039, 1831, 3892,
              2054, 1846}], 
            Line3DBox[{1649, 1861, 3905, 1650, 1875, 3915, 1667, 1890, 3924, 
             1682, 1905, 3931, 1697, 1920, 1712, 3826, 1935, 1727, 3837, 1950,
              1742, 3850, 1965, 3959, 1757, 1980, 3972, 1772, 1995, 3983, 
             1787, 2010, 3992, 1802, 2025, 3999, 1817, 3882, 2040, 1832, 3893,
              2055, 1847}], 
            Line3DBox[{1651, 1862, 3906, 1652, 1876, 3916, 1668, 1891, 3925, 
             1683, 1906, 3932, 1698, 1921, 3938, 1713, 1936, 1728, 3838, 1951,
              1743, 3851, 1966, 3960, 1758, 1981, 3973, 1773, 1996, 3984, 
             1788, 2011, 3993, 1803, 2026, 4000, 1818, 2041, 4005, 1833, 3894,
              2056, 1848}], 
            Line3DBox[{1653, 2058, 2059, 4010, 1654, 1877, 3917, 1669, 1892, 
             3926, 1684, 1907, 3933, 1699, 1922, 3939, 1714, 1937, 3943, 1729,
              1952, 1744, 3852, 1967, 3961, 1759, 1982, 3974, 1774, 1997, 
             3985, 1789, 2012, 3994, 1804, 2027, 4001, 1819, 2042, 4006, 1834,
              2061, 4009, 2062, 2063}], 
            Line3DBox[{1835, 2043, 3883, 2060, 1820, 2028, 3873, 1805, 2013, 
             3865, 1790, 1998, 3859, 1775, 1983, 3855, 1760, 1968, 3853, 1745,
              3946, 1953, 3839, 1730, 1938, 3827, 1715, 1923, 3817, 1700, 
             1908, 3809, 1685, 1893, 3803, 1670, 1878, 3799, 1655, 1863, 3797,
              1626, 1849, 2057, 2064}], 
            Line3DBox[{1843, 2051, 3889, 1828, 2036, 3878, 1813, 2021, 3869, 
             1798, 2006, 3862, 1783, 1991, 3857, 1768, 1976, 3854, 1753, 3955,
              1961, 3846, 1738, 1946, 3833, 1723, 1931, 3822, 1708, 1916, 
             3813, 1693, 1901, 3806, 1678, 1886, 3801, 1663, 1871, 3798, 1642,
              1857, 1640}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
         VertexNormals->CompressedData["
1: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
59EYe9KFhqSq6+gF0hgfNJ/hlo5ywVLZMbtlCxVRH1Iu9aWOwfHO8fOfK7hg
7adnNbaSgsJm5Cop02NQu381OTiJCz9EUn/Z6mTke4j+tdObBXt8nj4bOcSF
8PTl9Dp9Enq45dSHtnKsJ7ffMZAw4sL75WvHE4s70XYK6XYiloN953oPXsb0
H88rPHdBnoh2jtPv+Bmz4edTC32lKUyfiph7+lkE5D29a8+7/9ggszthNHyQ
A5f91LZ6G7QjdCm7NTefDb3v3D8b4jhgTSTlMLl4VObw224O63Whurb7N37g
gOQr6Re9H3BIrNGqvyl+GDzK1LWngngwf0Xw+LxfL9KYSmmuMWWAmU795/sq
POD1Le1a/Y+ODmn0nJ1WYsJIFo+NI4zDHRXTv7ved6MHLt9G2WQm6FRd9YDU
cUg7v4Ox6QIN7XFxMBGdHYVDTOPw/Q7joL//55yFNxXd8FimorNkDJjr4iP6
l4xD4OmOw3b2FJS54ldx6PUxeON9nphL44LHTauPZfZkdMb/A1sZ0/nWdLI4
8RkXIjXfS2Z5k1DAks+DwRif3UOlQ46c4cJvRzZDONmJDm7geeu/ZEGtJy9T
7gAXSj/GEe56E1Fdxc5HK76xQMVMzs5EnwvXfytO8noIKO2qCUrexsZ4kdR4
A+PP6W8dbdST7SjrKjW5JIwNSnbdaxomOZBgN31076Y2ZH9NZ92tbDYcLBhQ
vYbprz3g88P/Gw69yny0V+MzGx4dS1iRhufAmrQuaceuVtQZYT+RWDUMebPc
lVn3eLD400zOHa0epFJDOnPQhQEbn03c1HbgQXx1op7jYDfS13bcnqzFhDnW
peqWX+MQEZSS+uQ5DY2ULyyrHWSCg2VibV7lOPyOqLW/f4WK7DJT3Iwuj8LJ
E1v4+6LHoc0tRBwXS0EhG8t6+uXHwGp0e6G5wTjQ/t0aZseQUevMj9OemM61
x/KEF2e4YBgko+qfRELb+a3rfmB8Xv91fn5pM8bhr06mi2y7kJGaGevzQRbQ
H5z+Hx1vHo3V+4WNGzJEyZAhSVKmyBAyxU1mzVFkrlChKElIGiREaVJEpSii
kiFzO+MzmJ7JPM+eEUVKye981+r9vWu9n9W/9zrrPPe59t7Xvva2XKaVjybB
4EWu3EBmC0r91rQ/4tUYZPALitgETgL+O32lhXwz6rvCqChijAHT99GLE5he
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
I04pSY6IfhusbeOKYTla8S79+NohEMtI6xdcSUD+ua3eV8MGQePcpYfufSwY
znuzyx3bGMwMy/dvJwYh7kSXRF4GC0JbqdnT23CoPNLjcyi2l8eEVt1aGsgC
C4sDHYHvWlGf+66S5Z/pUFj4dtk2axZ4rGeSToi2IHZHZlI9nw5PnHd1NWuw
QDX/W47psyak8vj5WRkspwgfUkj/uJYFkeIHhM6rNaK+hkgbTWcGWPQ7GThM
MWGLh31hKKsenVTr1N+I5UGdujvaX6hMUC6+d4T7vQ7Nr6zJKy5iwFXl8qqD
LUzoWH6htjauFqkE7f48akGBn7u/7a8yZYNnLNvoZFEHsl4xJmGuTIVm+x8h
i+eHIFJmmbxSKJZPafPverB8t+hWjWJw/hC4rDMmebsSkQHZdENzIA18Tqb5
sf2GYJHUrL7fGQLiUn8NiS7Hckfq8q/PNIdAKS09mI35iqXMGA91rJ67rEtD
X0yzIIgWJa7rgUObi0Jtn/8aBDmbLVtpdSzYwUbValKYTzj1dYeaJR1ktD46
WMazILDx2fstt1tQ1ESpY0sSHZyC3DXf+7AgYfdL3MWpJmR4TRrG2HRo+pH+
PsiEBW0Tb8YmXzSiZXNb7o+qMKD115fdGdswnZH5ITVq0IAKr0jJ8f8XXW8e
DeUb//9XtigVWQqVIqQilL2uCCXKmrWQihZS2VqoUEKJUlSKiizZspSSvLLO
jHV2+24GM2ZIEUn97j6f+Z7fOT7n/e995tz3dV3363pdr9e5n/N8HMPq4fFZ
Rs3yYdhTy9K+LIpHZho7Qxn3GHCef7j/xncmdCYWZ5JYdUju7uvI9+8Z4CPC
XxKP9WvqLSU6SzprkeLSXXdLwrpBt32rjNv1IWjRtcAPZA4iTXRkaiurF4zJ
r4dDCrC+/73StpSrA0jsgZ3Miz99ICKcivNuG4I5+883GQ79KHqxyfmH/f0w
6h+ZMfBrCNy2nP5iu7cP1dide+X+egCepFl7Bq1hgNMtcfudl3rQkXDcC1fT
Qaj7IWPorcmAa8Okr/m3ulDFdPiOIqMhIHcJu6i4M+DE76qX70Tb0UnlmmuT
r4bgz76iZbb+DDiqZxzgHd6KXPkSAxSw/b75uENMSiQDagsl22Ql6chtWHpb
/k5svmuXFjtjfXA3zb+5o5qKPD95/HqJ5dWqVRdzSnMYcC7m3upn9yjoe5GK
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
RTxq8fvRkaL70f8HZS/luw==
          "]],
        Axes->True,
        AxesLabel->{
          FormBox[
           StyleBox["\"\"", 15, Bold, 
            RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"\"", 15, Bold, 
            RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
          FormBox[
           StyleBox["\"\"", 15, Bold, 
            RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm]},
        AxesOrigin->{Automatic, Automatic, Automatic},
        BoxRatios->{1, 1, 0.4},
        Boxed->False,
        DisplayFunction->Identity,
        FaceGrids->NCache[{{{0, 0, -1}, {{0, 
              Rational[1, 10], 
              Rational[1, 5], 
              Rational[3, 10], 
              Rational[2, 5], 
              Rational[1, 2]}, {
              Rational[1, 2], 
              Rational[3, 5], 
              Rational[7, 10], 
              Rational[4, 5], 
              Rational[9, 10], 1}}}, {{0, 1, 0}, {{0, 
              Rational[1, 10], 
              Rational[1, 5], 
              Rational[3, 10], 
              Rational[2, 5], 
              Rational[1, 2]}, {0, 
              Rational[1, 2], 1, 
              Rational[3, 2], 2, 
              Rational[5, 2], 3}}}, {{1, 0, 0}, {{
              Rational[1, 2], 
              Rational[3, 5], 
              Rational[7, 10], 
              Rational[4, 5], 
              Rational[9, 10], 1}, {0, 
              Rational[1, 2], 1, 
              Rational[3, 2], 2, 
              Rational[5, 2], 3}}}}, {{{0, 
            0, -1}, {{0, 0.1, 0.2, 0.3, 0.4, 0.5}, {
             0.5, 0.6, 0.7, 0.8, 0.9, 1}}}, {{0, 1, 
            0}, {{0, 0.1, 0.2, 0.3, 0.4, 0.5}, {
             0, 0.5, 1, 1.5, 2, 2.5, 3}}}, {{1, 0, 
            0}, {{0.5, 0.6, 0.7, 0.8, 0.9, 1}, {0, 0.5, 1, 1.5, 2, 2.5, 3}}}}],
        FaceGridsStyle->Automatic,
        ImageSize->{473., Automatic},
        LabelStyle->{FontSize -> 13.5, Bold},
        Method->{"DefaultBoundaryStyle" -> Directive[
            GrayLevel[0.3]], "RotationControl" -> "Globe"},
        PlotLabel->None,
        PlotRange->{{0., 0.5}, {0.6, 1.}, {0., 2.74999971607144}},
        PlotRangePadding->{
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]},
        Ticks->{Automatic, Automatic, Automatic},
        ViewPoint->{-1.963961, -1.03555567, 0.70428}], Scaled[{0.5, 0.5}], 
       Center, Scaled[{1, 1}]], InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(c\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(M\\), \\(c\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(c\\)]\\)\""},
        "SwatchLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.061250000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.061250000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.061250000000000006`] -> 
                    Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontSize -> 13.5, FontWeight -> Bold, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "13.5`"}], ",", "Bold"}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& )], 
       Scaled[{0.1, 0.1}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[
       Rational[317, 473], 0.6701902748414377],
     Axes->False,
     Frame->False,
     ImagePadding->Automatic,
     ImageSize->{473., Automatic},
     Method->{"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"},
     PlotRange->All,
     PlotRangeClipping->False,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
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
uzydnUH39ilKVH+SbedmNTPbCUg7ml0F8bIShzoL51DiKFcivUaWwJSJV6hX
td7vWDWJLDt6DpxkH+zmpWhE0rTfnmCJvTI7sF4qsmsV2bWKHFjiZMcEa/vf
HzRhY7p8rjP/ZIP7Wqukum5FJyG5ub+kujmjI0XSIHb9FNlLmYsrC+ZipVXS
4FVTMKzNxfg/8+3YmaQztbVQLlwn1H69CHSo3Gs65qJwE9IMRPWcI9oL5RID
XDoPrYscBwqUlOC7uHF+G6Z9LtWDkrYzdX9bru4dbLPOPhGrOlXHqpl6gqPd
tAim1OzzyQ161xrrNGp32Z+u66Rbz3zysXGp5fiazC1UTdK7atKnW0zo99RT
F5XCWr0jf+7OSuWi9rkoXpV5LUk/zFIpcE5rY0tH0zFcLmt6cBByThs5dF22
GvwZxZw+aGpPtljNQxtVvXnC2gDrQOClStbpIQOV4omY3zV0GBseMwphBQSg
7sMIB2OlbTjLFOPU2v9kl+WMXkzquXpdJ7m5zNWsXi/VPudX7YQmJV9uDY5o
QAChFuEunbVfe/RqZyqOsRpkZC0Q2lZRkei4G/rG1/T7raygRSmI/l2VR/kx
1MScjO3LnTmdVmdWqoUaj2D9xpeY4vGL6Z1O68xRkZjKWyBvaBK6E/3BwA1Y
0/wHjOmraWDaXm1TGxqFBq6sTTA7yfCRoUQkC6sAiXV7Bbji8kEo3Kp2Gq+p
XtccvabGhIG+Ql27f7kM1pXvwDS7yfKU8y0mKmtlhglex6tdtX2qPA8I1Zya
laE8qBHxzA/lCqQZSZz0qZqQWZ2TYkoCyZ+UTEXHxHw1CeiMmc5MuFKtFzVV
FbLijH9FaeX85AoqYp9Ntb2XCeNKytfP2XM+33rl9gepjnIRrdUyPO2pqhoG
2iud5okNDomPLxIbKaAP2P2UwyAzzrma66U0Omurx7gkWj7RJ96pTMeccymy
eRdPtBE7VZ/WAb8KdHsodDtt6fZTMnW3tljBmJ5Qyhly/2dAjDxl4T1dmRvj
+veZan3IE7fVMfzpDUfHmL+V9zwvFQwva+SrFcmrSanWwQK1co5jwmrtsq7S
tHtEnMNVU4oljo/LJ/Ek6VN7uej/qM+0a3il3u/11Uvlsl9Gduld9Aq/TVm9
kqN4F/yrYirPSdFj5eRNfrWN5pBPZZHQi+O4hgaOXTNy9IwpvQI9j/QNebM2
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
vmg7f2N6DSJ9I4qVM0WGpZhGfchItF+umD+vpyQutSUcquuVmmfqUr3yPFWi
68GxFkPy9OV15+l7VcFROvS8SujfodE4yb+6T6Orzmc/pk+jdC8PTlWjolus
ZKvLfffjdu5PMXzjrlXHlguKvxd9/7mbfW/9+0alUlE39A4T0Bvle61TVj2s
Anxv4UrP020Q59v6DX1EXtomBuIkoars/wP0erSebrbYa5E8qtOvTxrFbHuQ
q7chS+JR+JDnfkVFu5S1Z47+pqo/YXKJx5XEhzpVvRT/gv6VHi3OdYoO21NY
d2uV7kR/8MjteYbedmyg+JSKySztvoIle9U3cTJuw51o07Igps1UcEkZXvr3
tY42CcIPqlV9cFNnaTdUDcfBFLoWijyctxDVa6DGLPWeoaO1Ny8C4/DZFgvJ
rBVyprESFm1Ihgk7c5SJiZhIeqwalQeqOtvyB21hEqcs063tBeTp9dtUCZMy
H1aotFwQDJUeo39YEW/VhSxNPZ2yLTOuTrgHESEVSY838dytyjRxEACyeiqU
zTM0N6aFZm3/Tiu7j0LauNtbGj/um8u2xKKywsDClOdtq+XVipbTFbihdXXe
QAEASpYHQ+oc0X+LdYxKmiW7RprvrmZfkeIa5l2AXdozNZ/eVkXJ9sWQ/zku
G6nqGdWvIo09OHIUPvMVnsp12XYupEn05FRKxfRfd7QNfLDOc3V6sz3LmDa7
EG1UiEgExFzt7fMqW3YcPFNGH5W0n/eKjXRCvyInatsD11ZZP9lRsdeMJzvj
25521fy2Amo1q4+xD0tKBTpfta70vLJg0nrz27garhbMKwJkS42sZPqUWpr7
8D4ChJsDX3O01m5+6jfVLCt5S2Il7X7R41KtKG/L0vJMbyuOzr7W0dmhJuZa
Z1uqs4HuYvxE/Yg2Gcm2dJx/VKm5ZdUcTOySoydLYU1VWZPQxjfybrFWH2eY
obYNcSz2VYN5bxrq5jYMnCYJr1qSBs0eH2pF56XXF7yu028rTaksz2f6eVSp
H3Dlkf36eYyyZjWnrII41FfmBh3lfGK5S9+rpoGjzlwzRFUPgh6Hydl7E93Y
Axo61jqyvdds7UYWjWb0ynt1NHWlpD8zn97ystXgxi+e3YQS0+MIK2cWUU7a
2D2bSFmSzjS16cykYxy5iqaOdmbS1zqnm1U1dT3GOa/czJY91odIPxhVBPKg
JvPqybbSR5RIH2eJJAlElSHvn+jM63Vuyzo0K9Lb5LGuNiTClCJ0Yxah7noj
Ibb2PAOT+5PrcLejw5mjQy/hJzp8bN9skwWYWqOlf4c4n2NWtLJ0tqPxrNSr
CvihdWdCTpxjM0ejYNNxpVEZ1mssmzlJscDtIpjoJJUqnnjE91rzOuBzT7Kc
qq7+Wt9ATZ5kGViWXfav0t241Nhx+q44k0/QudaNcj3lCdrcqfRUZcazUpVl
czmnMKIr3XfssccK0l5FCnhorrNuKXBioOz+erCejCQ5hJmgx9yZeWPQSHNV
dZWmZwpDtrM8r6e4xLy5Q5qm37oz/fr29HI5NXdu0iqFSZ8uTX7f7My+76p1
+STVJXhz6MQEnvrW+9RnO0mt6EwrEnMP4T4fGqgC13wF5ukApt0H4GXUSgWb
4q/1ZF5OMglFTJkKMUa293UcWtQkzF5OV/by1E8+TVEIG81RNUedXL8XeOI7
fkAp1DLZT3VUZ47Gs2slPnXBhPS0Z0oyI2je0lqf4masuIIx7X7flKwj5PKg
9Nluc0agZsyxHMv39ARTQkFWTHX8HTebV8WC4uH2bytVuT+rwZbOd7JrSCWz
xzoqMRJrVHJsOa/wylvSme+SlVRh7QgbfaoY4SfdxJvl7t4MmD00Ew1Us6lx
Sh6U2ZKE7zkqg5Cl5aSrNvDqLdOeTDleNYovLhyaQlXswo5lUpXvzXTmeasq
sqcH1PNIHKa0wQ9kta/L/nnarOIAi9N8bX4jf2rrmXgrt4/gk1tutOahXabX
vNr8kE6wTdVv6Tc+OBCmy3TLuXEL+khMDwyb8x7orATihRE45G0ejnenoS10
iXG0pQGyl5ubZ7nXU81Rjvh2OarxQjQrPoiSWBdjepplemwQ/Y+nWzJ5WleX
f5YXjptPactNKr1aTGEtIzJf2Wt+CNz2kPZdPDTsU+Uo9ISFXnCB3+r+sswm
JqV6m2atZVOxKmbzxt1NKq5m3vN1Cxt+giLbsMc5mpo7Gu1t8sg1KvU+73Fl
RxZFCT5GL9O5bAir87YYge00lqdFQqMpyDi6T91eX6C0lOzrNC3+aojsAyuq
eHkVmXpg0znX52bII8kaBXUqx0g7d2iVc23D1fsRGjTl6eTv7sTEIgIdO9r2
AvJK0d6m4N/tHJvmKp/uETWmp9KlR9XScVnWs/ico1h7xVS2Qke2JKFJc285
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
r/rfO+HdQA==\
\>"]],
    InterpretTemplate[Legended[
      Graphics3D[
       GraphicsComplex[CompressedData["
1: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
95n3shDyyJZBo2a6kWr0XCCef3lkuMHPU3K7qtHzJ/H8yyNkdnaF+mWac0Ku
tatT/iZ+Hkw0/rlhFVa5fWn+Nkc8L5QSF7skX+1NNH8bIJ4XSokg92LDbswt
00iVeF4oJY59BFKCXvXo+a94/uURQfdgufJj9ej5gXj+FX1faQe3P5NuQM8n
xfMvj/Rz1XI5coXmnOceRNUeWM4nY1+MeTPMgeZvuyyy1KdM4ZPJzYrHF4fV
oOd54vsXPrm4t6jHFW4Neh4W1+V4WEMpUVc78tl4QC16bjyj+tQ+s5R8VfQt
u2Vci56TxfNvKZk/O7OhcH8ten4qnn9LicdXdYMNd2nOCbnWzE752xrxvMAn
lwM22F5dQPO3ieJ5gU9eLzzvu/RCA3pWEs8LfLJnlLrSuaIG9MwRzwul5Nac
pJm3jBvRc7h4/i0lw65sORHxphE9B4jn31LyR89rhv6MJvR8QDz/lhLXCX3D
l/2lOeeJTyf8TumXkfG/ekx29KT526YD/t8Mh5aRbv9ihPNi69Czrvi+hk/u
eCr4RCrS/K0355PalwI+ia44vtWQ1KNn/vV40yM/+cSiR11MnUM9ev4lnn/5
ZE7ZKJ1xd2jOGSief/lktn9KrmYizTkh19rVKX9bIJ4Xykje5qkbLQNp/jZS
PC+UkcM3hAphmMulkBbxvMAnyqd9tAYYNqPnFPG8wCdHh0b1LrzbjJ6fi+df
Prm5d+vo1ZjbZBEv8fzLJyYeA6PC/FrQ8w7x/Msnm+2fLdUf04qe94v7hpaT
g5Ev+x+PakDPSz2Wbl0uX07C9dw3DetN87fRhtvO9SwtIyNi1vnLrmhEz10a
HT/HxJSRg+4lagc8G9Fz9jMPvmdYGblxoM7sRXgjen4nnn9F3m4YXe9STXPO
i+L5t4x8kPcxCdVqQs+Yy3XK3/TE80I5ObJY5ZnVMJq/qYjnhXIy6q2v8z67
VvQsEM8LZWTifJuoCd9b0XOUeF4oI/vaLFvzNdvQc5B4/i0jkfw5jn8vt6Fn
V/H8W0YU+3/w0R3Qjp7XieffMqJyxv/e1lCac1pxqxMCewqIldzLHCttmr8Z
3JKXshCWk6fO8fpSh5rR8yCzweOHJpcTBzf7O/s/N6Pn2h4TNmW+KSeeUxc5
yDY3o+e4n0aeAQHlJMlXS65+Sgt6fiSef8vJ6JvfPp/b1YKeT4vn33Jibp1T
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
6f/f3e92peeeiP7+uvvdxvS8bCsOy++eRfPTlSy/O0p0HZiZVs3yu4uZvv3d
/e6/jbvn8AfWs/xu958tiZ7fGlh+9/tZemm/Ljey/O6KBRNe9XBsZvndt5h+
+939bo34tAfb6ytYfvdaY9EFbkI1y+/ev0F0Q71dw/K7ezP98Lv73Y7DRTe2
TCHL766hfZagJpbfrV4XWFLt08Lyu+8y/eq7+91PqRWmf8u5LL/70LN5W9bp
8lh+dxzTN7673y04NVN+fW4zy+8+peJpk5DTyvK7NzP927v73dTkv6rRo/ks
v9uO6Zfe3e/2rJv5IHFUO9Xd757C9Cfvuq4Sv3tJwMQW44gYjMeA03NyJ55g
+93f2q4PG7alnOV3L/ufvt/E726n43Dtcpbf3ZfpB97d754pei6I7iNh0tX/
hMRjnfuVpb7kFFO3xO+hJyE3zr00QhAoisvEfYQeYPzQFGD78urIIqbvB4ln
jrwYOcpHpowyFPeRSEJes1PT6lV+GfP5Kcif6Q7bsi2tnLp2cNxOx+w7eH8f
NVR5idpkUfwo7pMQgFxfZWrO4dISpr8HiTc+7PX+mbuBQ2WJ+zYkIf8x00fy
jFEFs54U5L5yF5ym6lVSd8TrSSV+3x7vz/4rq6hocZ+lG3h/n2tprf9sRxll
IdbhNXnvdZfGQOUJ5dRjcX+PUOTlDeWtL0vKmX4aJN6YYKMl7ZtVSZ0U92FI
Qj6p3X304whRnCZefwqJKy7GcfpHVFNG4s9JRb75gS7vaT6X8hSvPx35s/h+
KcO0aylB0lPPTw5upF9KS96eRd84lI24X8dL5E/yAs963q1g+lG8Rz5c20ne
dksl5SveVyTy2c6nn+8bXcX0kSBxy9yxK8oHn+NSo8R9G0gfYC+Tcwl6DjXM
flNIH+DZZ2NHi+K3XPF+U5H3K0iYbmHBY/rnpCOfpDXg/TMBj9kv8cVSTXUf
H3/Lp6zM/3aMXXCW9Ll9Marf9LlV1FnxefUMufNAm2ljtKuZfhHvkFfm3p3X
0IPLnG8RyG/dk0rblMqlVon7X0Uhv5DTcGLYkxqmfwWJrwzHZMwOmcBj+gWR
Pr2Ry2XlQp7wqNFifYhvJVHlNWjReD51WqxPKvl84zCd9C98Kl+sTzry5GsX
1ENs6xh9iG+1S3f8t+laAuqBWB/iW2XZx/37LVlPXXDi/9YWXWcgritrjFR7
WMulvJNCOhfceIK87lmhWWVFDTVPfJ6HIP/8rCTiWEotFSnW7TPyMeZuiufX
8aiH4vOE+FBrhEUX/X7xqNVi3X6RvruBav2dDflMPEnizH6f7A9u9OdTtuK+
GaTvrveWqvNB4+qoaLGexId6U/uzb+zbOkpDrCfxoeKCNXNkFgmYvkbpyA/W
6ET8ahBQBWI9iQ+lI+hz0jq0npol1pP4UOf75FXpXWtg9CQ+VPOx5JT7F8T9
MD//t1/uU6Zfbli3vrvfmb67/7r1y5VU7OqXa9GtL2410xe3qFv/W2mm/613
tz63yUyf2/Xd+tlmMf1srcScxMm9jjeZzj7bQMmJ9Sf9bJ8z/WztuvWt/cD0
rf3VrT/tPaY/rWa3PrRxTB/ac936zWYy/WYLu/WVNWf6ylLd+sd6Mv1jq8XX
sQcYH/K23B5iPaKeuS6ROFa+7OJ4qzWNVPCiKQfo+w7wz79W2LRwG6lRV8L+
7BXdXyDuks28GRmS3UA1cVbE5YjuL8Cvx127mXdISFWI9Sfx4e5nY+/1Nm+m
Vor1TCLviykdte5T1Mx8bwqpY7xvtJh3uYWyFF+XbmC8NPTn+4UlwY3UQPPc
HR9F9xHg3+f1//dmdRPlIr5ehSKf5FVS5iBooqaIr0skriuQHe2ZvaSVaiy6
uY6+jwDnFgRtfsxrpSzF60xBnrvg6anjXm3UW/E6U0md5LVx0TFr2yklyZht
kaL7BfbDcTKLvuTdTE3ys+m8KbpfAE+yDjq4fmkLNcCvRjdHdL8Abul1tWSh
sIW6IF5/JPLiPX2L3t9ppZzF/YJIvDdy67dJu/e3U/fFvyPpeznqxCybNcM6
mH2lII9/OlznUlwHcz1JRf5a88Ly9Vc6qffifaUjf+y39O8tHQmTY+Lr3lmM
35r03Q0MnrZSCyXqPPeI7gvAD9qHn3DY2sZcD9+R+NB2/WfBgHZqoHi/Ecgz
D13/ohHRzlwno5AnFV603LCtg/oivk6SODNfuNR2yZtOauZRIUXfF7A/pMpH
k4JJEiYPxDqQfOzfE4cm/3OTMGkW65BK6i1/Cysm10iYrBXrkI5c1Tdu5ZO1
kiZdOpB8rEagm2VOnKTJuo3HdReJrvMQB24POtF4yr2D0pQ4Ekdf5zF/uOjq
ofYFnZSXWIfPyE8cmMpf1dFJuS4/PNQxm+RRP32cf79utYSJuViHX8j7zOdc
kA6Efk0kTubKyz+V6yVpki/++yJ9I1/7z8v+uEXSpEsfkkc9F6ej8OmLJKMP
yaOGKa4aH6YhxeiTjvzWqCUKu65LmawR60PyqMsfB7w41Fva5J1YH5JHNTTo
neV+SdqkUPwcSuJb7rEPUtlNaUyekMSxzv17LVruVkR9Fz8HkXi1bdIvBV2X
TGqf+HgSr+5de2OMfGcWkx8gcalMsIxfqloJ8/kkLs28m6cWH1JK+XUlnjCu
i/n6aUn8zByqSPw5JP78mrhMqXd8LvNcRuLP7/ITfKddzmeeu0mcOfDmrMnL
EkqZ9ZA408FuUd5gx3JmPSTOLLw+uJ5nWEH1ESe8SDw5VWvOix6i59iufAWJ
J/eYOHKvby9g8jwkntSh65wXFzLrJPFk9eeP2lnLipjnZRI3uumf4ey+Vc6s
n8SNPV9veWY2u4JZP4kbO8Iad50aUsWsn8SNsjVPQ8tUudQfsZ4kPlQIvtzD
U7WQ+iH+XhIfrppyUG9jSyGTZyDxoV3m/otGtUXMvkh8WDS59ERzezFVIF4P
iQ9Xfx3vaTeulHmOJnGg9cBX39IPVDD7/U+/jsxGx546Vcx+SRz49IzwW+EA
LrNfEgfq3e45w0izltkviQNtl8yZWB3Co1SY50qIWwyn7A1c+aWI0hevh8R7
kh9vWl5/UUwViz+fxHuSgT8+T31ZQmmLjyfx3p8H1ja9f0BejsR7Qvr9qdYy
RgcS7ymd2eZycCWHeX4ncd15/xtvjB2qGH1IXNe5r3KilD6X0YfEddHW1TVR
Y2sZfUhc9176+PSxori6Sx8S15keNFD7EMdn9CFxneW8VE5jPwHVKn6+9jOG
eOMs0+/iWbc6Ilumb8bDbvU/FWZd/S5Ku9X53Gf6WtztVs+jyPSvCO9Wt1PC
9KnI71af48v0o5DqFqdVM30nbnWrtzFj+kuM6VZX85rpI/GxW/1MKtMvYuGN
/62TcWD6QuR0q4cJY/o/OHare5Fj+jx0XR9InHZ6VdC+gp0VzPWQxGMbXYc1
e8rUUZXM9RP7AxxZs1/oVkW5MNdP4D77Nk5X/1rN6EPirsHnxshaLhYw+VUS
dy2g66a21zN/7yTu8llnJPkynksJmesn8MB36v4X+tdSUcz1E/hX0WXpigGP
WsxcP4GvmsvbO+9xPZO3JPHVJOuMZbe+Qr6XxFdC+r2SRiG1jrl+Yt/C6cqy
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
dD/6F3zUvYU=
        "], {{{
           EdgeForm[], 
           Directive[Lighting -> Automatic, 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           GraphicsGroup[
            Annotation[{
              Polygon[CompressedData["
1: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
gLT9keS4L82/Jzk3UPx6FL4tWNsfSs495O8PwhuDdUC1SH2tyeicuh5cmvHe
5NxDevVGci6hWPBl8lpVPvlFsr9IZxSrtE5UA6xL1g3p3pvJeY50e3ly/i+N
XQ0vCNa9lcm5tPRnVXIeLg38IXlNSuuk5TXgAsbvsX8QrIeqZ+SP8su5mfOq
PtKffOvGY8z/lO+eDM6xX8zFlxrKb/muk9YP49PYj8NeGfvLcFvFAviFXGyq
Dj+Xqymqws/n4lo1+Bm4mWKctAg+Hj4afikXK2vC/8vFi1rw3XBVuAB+EK4N
l4QfguvApeCH4bpwafgBuBZcAr4Xrg4Xg++Da8DF4afgpnAl+Am4MVwBvh+u
CWfws3BzxVn4HrgafBT8Wi6u1YFXw/+ojiFurocT9r/g2+GKcGHm3AqXhyN8
B1wJLgLfkjmHy4M3Zc7tCsE3wgXwYc6zAS4J/wNvhEvBgTm3wRXgfPhJuAlc
Eb4TrgwXhdfCefAB/nYNXAj+E14HF4EPwtfDAd4Pr4IPqjaCr4UPwHvhlZnf
/R54ObwH3gUvg3fDO+EV8F54N3wDXJRzHoJvhkvAf8OPwQ3gclzbo3B9uGxx
39MI6Vv0fQ+Wb0afY6B8MPoZ95COMXZhfXYJrvf1bIZLJ7GPxD4yuEYeojwp
uBY+FT41uF7uphojuI+hZ9NbuhT9DHpKM+GazKkZXI+oV3E8XJnxM46fCq5D
j4WPDa6t+uoT3E/oA/cJ7pnoefeSZkY/7wHSELgfc/oF1+xaL4OkS9HPaZhi
HDyUOUOD63f1Qo6TrjJ2wN4huAfSDm4X3GNpD7cP7nu0gFsE93Dawm2DezJ6
PydID6Pf7YnSnOh33llxhLEl81sG94Waw82De0eP8L7qcX1livv9t5HGRr//
1tJextrMrx3c91CvQs+hJfauHHcN7v80hhsH94sawY2CexFN4CbBvYgGcIPg
nklDuGFwT6YZ3Cy4f1UHrhPCv70X9Rg+BZ+Pzm2l1Yuja/pP4OdULzD/rGBf
ngGfHaxFg5LvXb72OHx9cD17H7wsuG49N3PPopn0Afvy4Po9w3YS3JHz92ZO
cY6PKOdnTvfgNa8ew2fwC8zpn6yf8osRyWtD/j48ee3Jr09OXpPShFP425vg
q/nbYcnrXzowMPndSWf+jv6tpoyvcg3tlJfyt7czZ2FwzX4NfGFwjb8Mvji4
P7AEvii4J7AGnhHcE1gIXxBcNy2ApwVr3Qp4enC/YiZ8TrDO3wFfHdwTeI9r
6MM1NJH+Y98Q3Ed6Al4b3KP4KPO96Xk+i/3m4B7gM8n3qx7gY/Ca4J7JpHzn
Ztdzj9Mz1/ltsHeFj2Dbx3PozvxWwTrcI3lNStPOhk8LjheTkutlxYWJyXW0
dP7MZL+TtvfnnFU4f4KPYRyHvT+/MS75XSsGjU/WHMWUCcnapZiykL/9nrm/
8rs/ZM5TlVvOhz/E/hP2LzLfj65/KbwL+2/Yt2eOwYrFo5I1QTFif+b6QXXB
3/DN+e4Tjk7WSen8FPj04Dh4WrLOKC5MhccE6+0ZyVqqeHQ63D84Hl0OTwmO
0b2S9UHx4jx4dLA+D4A7BseLnsm+rzgyPBf3td7OxT4qWB8GYm+Ivbz6GNgn
BOcJF8Ljg2PuxfDE4Lh/DnxGcOyeDk8Kzg0a5XvtncYzmpb8LhSjL4DPDI53
u3QtfH4KXvtzGKeoz8Cc84JziTbJOZtik3q9igvtmdM0OUdSL1p9U8WURthb
Ya8bHNfacS87c++odXK+p9in+1Ou2y/6nWt+KcUK5n+XWwPvRPfjd1HHvQ2o
R/9bnnvq0uTa0X10xazu0njOXz247611ofVcXefGXjG4f1svuTZUP1w9ZtVQ
+/Lc65XGNlbel1w3qZavkfm3VZdpXSumdOC4euZetvYIKvHh37/9ijrYP8it
Va1Z/e6hPPebFeNaRfebFWvqKlZmvk/VpLXgd6Nrurrwx9E1nXrtilN1lC9j
/yS6xknRuahy0vrYP42uZ6WjitFN9Hywvxddc9WG34+uxdTX/LcWznMfUbXn
7jz341Wj7Yc7Ma9pcN6iPQ3F64yxY3I8VW6j/RDF+mLR+xWKNeWj9xAUmypE
72koHpVTzEzOB5QjaV9F9V3x6L0Uxb4S6j8wZ2pw7notfElwz1M9UcWOy6LX
lOJXScabktet+qXaY1Hsrhqto4pBM6Q/mXtG0lVpnmJ0teh9FcXoY6L3QBQf
q0Q/pyLSwzz3kJTmFY72F/nKluCeq/aJduZ5j0I1uBasnndh3WOe17Lq34N5
3htRfZrHOJtrPje4LtA7V1q6J8/vHHkKR/K8V6NYXzF6n0HvWu9c+0XqVxSJ
3otQHyM/el0cpRiX5zVYVL6d575XcV1a9Brh0YdC0b2XA8H9l8lcz+TgPamd
ev/yEd2/rkt+p/sJvv/tue81r5D8J/hcO4LrBuUJQ6NrBWnU4OiaQLo0JLrm
UOwbHq09OmfJ4J698sNN2B/PrF/SQNUryjeGRdci0sNB0dexK/cuDuSu4aNg
jVe99gxzlsAfw89GX5/mqNc0UD0axv4F3kv6Occb893X3cDYj+Nq8F88m035
1h/tW/2Yu/fNuWezNXj/SX64JTf/rszxT3FQtZf0dkB0DihdPTm6vpHm94re
F1JfZUP0fpF6ODdH14jKN0ZH13nKH8ZE76+VgItKO3LXo+vSfqB6I2uj9xbU
g1oeXS/Kj8ZG76XcCa+I3vdQX2hl9P6h+jZroms75Tajoms75TOnR9dJyoXO
iK7DFON6R9dMY+A+8HWZ8yrlFarbFFt7RNdbilM9o9fTntxzU90pXxiB/Sqe
3fnBtbBqHfHI6FpHmnBK9N6aej7r5PuZ80jljao1L8U+DvvB3Pl/CK47FTcH
Ru//qDbfGP39wdz725Vb31qH2ttR7ndB9HPd9v/e9R+5c8q+N7f+tZ+jXOvK
6H0e5Wlzo/dtlJstzPnavtz61P7VBsZF2P8PzCOjEA==
               "]], 
              Polygon[CompressedData["
1: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
3+hvVRPUBjXlNMa+RX9W4PXCvHchY3Py+U078f/rWL84Zjn4P/Barh+O7w/P
Dp9p/WJ8bbib84+BL4OPgMfA21ofOd/6nfQbo3qyBlwLrhF7lVkYX4vXg3lv
Dcamh5du9XAYPIPPDJ4PXgHu6sr19IVXUm9q/MLn8MrwXvA28CC+f72erEHX
ohp3vV6Bzx/C6+14byJjc8AbwMPh0fAX/L4Bnfifs+DZGV8XXg4eAX/N+PLw
gvD5Ptua+rwD37c/vF53tE1NU9t68/mx8PLwSHg2eJ1O+oe14THdmTvOAefC
uvD9nWiwWvwp37dgJ/7rNK+P75utk36uHzy8K2vbNb4vPLI7a19NUBtW7Yrf
OU+NhFeBb4LPdQ7AIzj+rk40Q+0Y1x0tVIPUolHd0RY1QW2ofH5ZeH54xZ6s
Ydeya/6YmjXv2rcHO66mRlmrrGkn1dQoa5We8dc+q5r7Px/3bxxjw/i+izrR
fLXfNepatcbdWuNh9DJqxhE1NdJaac07pUaT1eaDO/GqEzjfX/0u3vtXT2qg
tfBA70lNTbO2WSPPgSdy/EOd1ABrgZqkNqlZRzE+ujva6Jp37c/dlfmm/xsL
LwAfDu8IT4JnhtfsxN+uDs/blWvzGifAM8Erw4vCq8CzdmU9DYHXVB/ho9p6
MRnu15X1tRO8oXoKHw3vBm8Mzwiv1IlfHQ73wKvAi8Orwd3wcHgxeNWeaLLa
7D2/p6ZmW7vV7LtqapTf7TXYi83P5w/l9fa8tz5jfeHDnP/wBj25x95r7+E7
HL9Gjb//vom/2aXGPy5akg/8P4NoohFTajIPsw8ziq1rMhSzFDORrWp6AHsB
e7KpNT2ZvZkZxXY1Pby9vBnMljU9tFqmptlbm2GYZZhhbF9zDWYVZhBemxmB
WYEZxe41HlGvqKfbv6bHs9ebCu9Tk2GYZdjj7lGTYZhlmDnsVpMJmI2YqZgV
2JPZm9mD7VvTc9l76Ul/WdOT2ZvZk+1X4yH1knr6A2o8vdquxh9Yk8GYxZjB
7FCTOZg98Fg689T0qPqHR9v64vNQX39o5+M6NfOvlOjbmJr505Tok/fMe7dI
ST1Zs0aPf2z1et2a+TRdib6tVaMPP7Xzd5MavetdUk82rdHTPiX+2UzAbGAK
7+1ZMwecC/OWrCczBL21HntAjSarzfaoK9ZkFve39fWtmh7/vrZ+6ifNEMwS
zCT612QoZilq6tCaGmYtU/NXqNFYtdaed6mazEytVXP71Xh2vbs1cJh6UbO+
Zyypb/aAaoGaYC0yQzBLsMaOqm1NbeeD98Z7MKKdn96bse3np7TrwTW9W7v+
Tq7RANfjkZ30XuPb+bBTO7/1vHrfY+DTazyv3leNOLXGo+vV9fDn1mSKZov6
uQdrMkizSDPHP9b0xPbG+vNnanpee1975mdrMglrnTVPP2hPYG+gRz+7puZY
e6w599bUKGuVfk0/bw2yFlnDfleTwZjFmIn+qSYz1G/qB/Wfen69vx7/zBoN
VAvV3GNrNFVt1aMfWtMz2jvaY61ek8mYzZjJjKvJYM1iR8OT4avgZZpkfBvX
aJZexDXj2rHmW/vNiEbW9HT2dvaoq9Z4KL2UmcHomsxALXZNubbMEM0Sx8Ob
12SIeoF12vmg5ljbFi/RImuItUSNPbpGc9VePczhNR5mu7beHVyTaZptmjFv
VKPJarOafWRNxmItcs46d73H5mF7lNx7MyqzKjOq9WoyKrMqNXyC31/j12Yq
8Uu31eQ9W5T079Z0a/vmJf37wJq8590m+ZZr2LX8TpN8aVBNfvNek7xlcE1+
836T/n7hmjzytSb5kZmk2aQZX2/GFq3Jv99okhctUpMnvt4kDzNTNFv0HH1q
MnKzco+Zo0YDB7W/z+c7vH1eK7b6MqqtTxPb++VvHt7WK+/FkJo86oMm+a01
fNH2ea9UU2OttWrsyjWaaG33HqqVaujg9nmordZoa7WaOrwmw/y81Z/Zaq5J
7ft3W9/9DvPDr1r/MH/9/xZD58Um+dd8MBay80KTfMyaYG34e5O8wnvIy86T
Te5tX7jHWtEkX/Oeua/xVJN7OS88I/x8k/xuTnh6taHJ/ob3dDq1oMm9tibo
fdV8a4W/wf2SJ5r8tn6tvrpHYb+1dE1e90kTv+89M4/7uvUrarLa/HGT/sDP
2Ks93uRcy9TkjZ828acL1cyVV5vkf8vW5KWfNekfzHS+75WM1KxHjfdev9Ik
77QmLteuT2vl2u16HdOuZ5+RedQ3TZ7dNTXaOrEk/9KDujbXLslX7EHsRSaV
5INqovna9iVaeWWNdo8vyeOuqtG69UryrWk1Wj6uJF+9ukZrJ5TkxRfVaMOI
kvxEz2btGFuSz6qx5m/blWivGn81vHuJ9t9Qk79sWJLP3VGTr21VkpffXpMX
blmSr6nhZjNTS7T9xpo8ZKOSvPDOmjx765L9pZtq8qDJJXmmNcf8b7eSWqTG
mzXsWqL97jHYG9kjmV9cXKNlI0vylktrtH90ST/uHDcLVnOc+85RJ7ia49x1
jroXp2Y4d9UUs2nnnFrjmjE7VpNcS86ZmVo/4FxyTZg9q1GuFeeYvZCeyLnn
nJmx9RfOpUtqtHtUSf7lmvu59SOuRTXK7N45q3apYWbfzlG1Tc3s0/odtVTN
7N36FbXUOWwvrOdybquhZtdqgtqqJrm35BxVq9RUs1PXlFo7rK1v1kfXlmtu
vrbeuRbNrM2uzScerdljc6/NPbQN4V90p3ZaM62dL/N3YpM9mvtrMoMlmvQ0
Zgn26As06eHt3e35xrZ+yV7Qnt182/5R//QP11CTPbnHazKUt3h9cUm2Yuaw
SpMe0izCPaBdWn/k3tDf4IOaZD631PQQevu5SnqLT/i7tknP/YrPq0RPPubv
qpLM7yVen1WSBZrJvAlfVJLVLADPDF8KX9ZmLJeX9JxmL9NKssaP+LuS198w
fleTjP/DmszeY/xN/jYznjd4fWFJ9mPG8zp8QUn2Y8bzGnx+SfbjHsavmuwx
uLdhBnF+k57fbMKMz2xu55Ls7wHGPu0k7zITOp73vuuVPcu5a/YE/swxL3eS
N54E/9Are3KL16xPvdguJdmge1C/aZJPvtzqp3P/5Sbe2TxsAbg2uT9mjGZ5
O5Vkj36H33V2Sdap553i2ijpDc3cXoXPK8niZuA8n3SSsXnPvYev8Prc9t5O
6Mr9ntbuh+j59er/aNILOCedSzuWzFX3xGZpkiG5V+YewQlNMh33DlyjrtW/
Nemt9Lh65UNKvK+e0V5y1hIvqWe0F5utZD3o8ewt5yjxfno8vf/sJd7PHvl5
+PSS3lnPZi87S4mXM4N+AT6jJI/Qg+hFukq83PI1edQ/ub7Te7Im7Y1nLlmr
k2r2z3rgy9v66Vr/qEmv4zN1P+KtJs/ankgv+2GTXslM+kX4zJKsWg+tN/yu
ibfWj+iVvmzSm+mB9dbfNvHG9kh65S+a9E72WPZC/2rSe+kx7dVnKPGeI2r2
839m/LyeeGy15r9NvLc9nb3IKSW9nj2t2nRMSa9rz2/vPWdJFuCelPtkJ9T0
S/aI9i6nlvSOapq9yX4lWmdPY+9xWEmvY89jL3RoSS9kDbJX2bekNrlmXBvP
NVlLemSzilrinb3nQ5v8Jp+F1+LenXs4XtPd8Lgme8h71/SIendNl72jPcp4
cPqS3uUG73GTZ7ptzT3q12QOeO/sOdTjX5T0Is6JWZs8Y+eKnmUMr3uV9CZm
0OaFe5Zk09YUa8vbTXpvM3Tzv71KsnUzGbOOuUuyGv2M2dEGJVmrv8HfNrjk
t1mj3RvRU1i71XS1fWBJr+weg3stR5bki3oW9370SHoZa6Z7R3oKa6kex71x
PYneZyN45yaZ2PE1ewbunRxUspfg89I77FOyF6Inc29ST6JXM7N/hNdHleR5
7qGYXR1Rkp9ac6wN+5fUItf/g/DBJXsh7nmYlx5YshfiHoV7ZweU7F3o+cyf
zbv1gmZGZqFDSrIkMyCzyyVKsiGfqXNh/pJnbcY1Fe5bkn3p+dxbt8fSC5p5
mSUtUJKF6bH8f3ns6fReekj3du3R9JZmRGZNC5ZkR2ZgZk39SrIxPaZ7qXo8
vaee0bzW/FUvaabl3tNiJVmXmZV7b0uWZFl6MPdGTuvEm5lhudcwtCTbcv2a
zZxcko+b+ZgdDyjJgszY3NtZqiR7M+Myq12mJPsyYzOL7V+SvZmJmd0uXZKV
qQdmXUeX5OnugVmLDy/Jt/XcZsvOWeeuPar7W9M66V31uP6/IXpiva8e171k
Pare1z1R94KOL8nn9bjujeup9b6ew3NtVpJ16yms9ceVeA33qMyP9y7Zu9I/
m4VsW5J3m7m6NzSlJIvVg7tXrsfWm7tH+aTaUbJ3qYf2/w2wh9Bbu2fv3r0Z
60E1ezAHNtmzcm/GHt29dj22vbt7jO4lnViS95sBXw9vU5IN65n0cpuUeCkz
ePcKNy3J5t3DdW/qpJK93f8BjE3Xeg==
               "]], 
              Polygon[CompressedData["
1:eJwt2HW8FFUUAOCF98CH7FPp7pJukO7ullYkFAlBwiAUSUVQBMTC7u5GRUIF
7O4uRGlFQf0Os3+c35vzzbl3difOnX2Vxk0fOC1vKpX6SuQTVdOpVIvsVGpL
biq1VWwTNQqkUp3Y+KxU6mI11+WkUj8WTKXekx81uAQryY6xXHVteGvR3djm
5pvIlsmXi0/YX+ryskbybsZ2M7aCY5zGXrV/iXypqMW6sknqFqi7kbViZ7HF
7Ab2LDuVdWYT2Dx2PdvjGH/IK4jyoqV5q6lrr26n7WvUrBXlWXO2mV0mXyx+
MvYTYwrEePNVZJXUtVb3mror5CtFXd+tOztH3WTxln3V1XVgu2yvU7M+c17S
rK6aemKjfVXVtWM7bF+tZo3IMV+Z7OTcxTm8176Dxh7LfIf4LutYOWObqXvF
9qXGLRIVWSu2na2QXy4amm8Yu8C4C8V79v1gvndt/+26HRHVWFljm6p72fZC
4y4Rh9T9p66+6OwcdGa72c/ykvE9WH3W1Nihxs5lq9gD7Hd1e+UVRVPWNCf5
Hv9mvn+ch46O1c7nm23sevm14ht2WF2KNZB3sdnF2AaO0Y+dx5ayO9hRdQVY
C9aP9Yvvq64/m8GWsTvZXnX75ZVFc9aclVbXWN0mx7tQfpE4mf2jpqxorK4j
22fsn/IacT1YW7af/SU/VbRlbVgZY5uY7yXzzZcvEAfUHVFTU7RT1479wr6R
FxLVWXVW09guxk5k89kNOck1ekf+p+vzl1hq3l/Zt6xwfB51NdQ1M3aksfPY
GvYIq8/6sulsCbs97lPWm01ll7FbWUs2ll3C1rMn2J+OkYc1ZF1ZV3aautFs
AVvLHmO/qftFXiruD1aPtVA3Rt3CuEfZ46w5G8Xms2vYo+wPY/fJK4lmrBlr
om6IujnsSnY/6+HeWMzuZHeJ3c7BEWPzs2by3ur6qKtjbC82hS1it7BixtZi
vaJOPGVsbXXd2NnyhepuUveP+XLYaawv68v+Ziew5qwP683qGduHTWOL2W2s
MRvMZrOV7D7WiA1is9gV7F72s/m+lp8iThYNfJYcdb/ZzhVV1TVWV4W1NfYN
+1fLr8r0ouhJldNJbxycm/Sd6D81WBt2Omtse4Tty813s/kesn+VuDJ6YzqZ
d7i6RraH214RPUjdg/YvF8tEtXTSP4bmJr0jekj1dNLzhuUm/Sn6VK100kNH
slK269sea75Z5ptlfzYrzrqyUWwky8dKsG5sNBud+X7xPWumkz44wnz5bZe0
3V3dGHVj7D+BlWI92Fg2lpVgddloNpPNzPTOstnJ9T5+3c2XxYqxLvKR6kZl
euLp2claFGvSVHWlWQN2hny2utmZ9SfWoSqZ9XCIuqKu0Ym2a0f/UjfA/iIs
H6seax7rFfcfK8jqsE5sICvMslk11or1ZN3MfSl7lG1nH7IubCF7mG1l72X6
cfTliumk7w/MTXpM9JoK6aR3D2D1bQ+wfWn0U2Pvtn+euFiUSyc9r19ussa3
zE7WrFi74ruVZY3YOPlcY+dGX2MN2ZlsDpuT6ZXRM8unk57XPzdZf2IdqpRO
1tJBLI/tQrY7GDvU2KH2F2DlWB82jo1jeVlh1pENY8PieWM92UVsNduYk7xH
TMpO1olYL+bkJutvj+xkbYs1bhxrxaazm+VPGrs1ehg7m21gD7IXoneycWwN
u4c9zVqz89gt0TPYFtaWzWS3sWfYdtaZLWAPsS3s/ZxkLZuTnfSq6FnzfZb2
bC67W/6Cuh3RJ9k57Dr2EHuRtWEz2K3sabaNdWQXsnvZJraLdWIXsfvYS+xN
1oFdwO5hL7Kd0dvZZHY9e5htij7JOrKZbDnbwLqyS9gjbBv7INM7a8fzzUZE
X4z7ntWMHiKfrm66uuKsDhvFZrAZLM0qxj3BJrAJrCSrx8aw89n5sZ6zgWwR
28DuYiey8qwvO4udFc+5Z6YoaxrPNBsRz5u6U6PvsWlsGivEqkfvYlPYlFhT
2Bnsqlg/2FOxxrOq0UfZZHZuPJesRvS46AVsKjuJVY7njE1ik1guqxTPGZvI
JrJTWLXoDexcNpkVZBXiOWPj2fjo3wWSXv16btKTozcXYlmsqrqW6nrEcdnf
8jKiEesQzwzbIz9JVGNN4pqzacaujnuNvRr3EJvAlrKb2PMsi/0gz473Glab
5WHfyVOitD81WVOf+Uxjr2Z3syej76rbLU+LKqwRa8+mqlvF7mCb475nU9iV
7Hb2Sty77Hy2lt3PXo81gP0kzxHlWd143xAfyP/zjhOvfWWiH6j7nuWN88Bq
sfzsV3lBUZk1jOeSnesYK9lt7OVYe9iP8vyiHKsTzwybpW4de4C9EWu8+Fie
L84rKy/vp+5mdS+wd1l/eXdxBXuAbWZfx3sJW8keZK+yb6KPs8vYHex59klm
3f8qK3nHjnftFa59a3Xj1S3hN6p7Tt2/6k5ibdkgNoj9x05m7dhgNpilXKNT
WPvo19IhYeb7Un7Y/MWl1XKS3z2/Z9414p1jVfze4h/azpN1fJpUWfkR8ZE8
K95DWDn5UfGp/HfzFWaV4vOJz9l+VpRVic8nvmAHWTFWVX5MfMb2siKscqxl
Pt88n/km/jh7hx0W78uPqTuRlY4+pG6+uo38CfYu6+6DLmKPsdfYR2wYu5Zt
Z5+zX9npbAN7jX3BdrOhbD3bxj5jv7BBbA3bzD5mP0bPcdwD8qKiFmsRPYwd
khcXdVgr1rtA0uej32+M9Uu+l++Q3yCP38+Foh/wo3HviSasExvsuNeoeSLW
o7hWTvYQto5tlX+q7ufop8YWYU1YTzY8eicrzVqxgexMVopVYZ2jP7Nzouew
g/JiojZryYY7xnXRc9iX7Dc2gl0f75hZye/9PWyf2Cnfk/d4S0gVie+rbrm6
Z8Au9jnrw1awZ9mb7As2gF3FXmYfsu9ZX3Y5e469xb6MZ4utYpvY++zbWEN9
5ovZjewx9jbrr241e4l9wL6LvqvusLyEqMta5yS/DZZkJ+czzusi57QnW8qe
ku9Q96m6/WKX/I+8x39SporKD4m32SF2Aish72XsMgVP853sM3ZQvCU/oC4/
K565lmvVbYlnXyxx3IHsavaK/CN1P6g7IN6U78ub/E+lWE7yv4b4n0PtdPL/
gVHG/g8j9AKE
               "]]}, "Charting`Private`Tag$323468#1"]]}, {
           EdgeForm[], 
           Directive[Lighting -> Automatic, 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           GraphicsGroup[
            Annotation[{
              Polygon[CompressedData["
1:eJwtmXW8VcUahveGtQ7O5jCigEUooogCooJ1Ma+tWJQo3dItSgkonRIGCgYd
0o1KqIigIILdfcW4tte+z/t71x+LeZgze+3Zs754v29VbderYc8SuVxuGv+U
ZBwQcrnT87ncNYVcbkfM5aoV5XKj4Z1wTXg8/AJcC54APw+fBo+Dn4VPgsfA
2+ET4VHwZrgCfDf8HHwyPBbeAh8FD4efgo+DR8BPwxXhkXDU/dhPnTSXK6O9
wKfDh+se8BnwRtaX4/9DWf8m++/L/PTiXG4T8+WZH8b8Yvgf1vaGn4ErMX8P
vBWuDN8Lb4CPhIfAy+EU7g8/CSdwP/hV7nEd9/8xyeUOwA3gn+CX4abwX/Ae
1tdj/WTW72f+WuZ/YH4vfAv8N/wS3AT+E94HN4P/gV+Bb4VzqfcyHq4L7+ae
dfn/JO65Bi6G74JXwEXwAHgpXALuAy+DS8J94Rfhs+CJ8Eq4FHwHvC76fAfD
q+ACPBBeDZeG74TXRp/7IN2HfdzMfn5LfN4T4HqpP3cPXBP+i+sOuEpqu5gL
X5fadubBDVLbznz4erg2vAC+Af6TawBcmfEjrtvgEowfczWHSzL+zTUQPp4x
pzOAq6Z+tnfCJzB+z9UVPjK1rc2Gr4QXRX++F7/lS8a2zBdSn+tSuHHq57YM
bpL6zJbAjeA/uPrDlRh/5+oHV2T8F2vWwM1Tn/0guFrqsx8Mn5TaBifCZ6f2
g0nwOaltfzJ8LvxveDPcHq4Pr4VbpH5Wd8M14AvgdXDL1M98GHxK6md1L1wr
tV2Mgmun9r9Z8GWp/fhh+PLUvjUDviC1jQ+Fq6e28SHwyan9+BH4itR+OR2u
n9pvZsIXwpfBW+AOcBX4Afji1P50P3wR/FZmM79jM2/DDeE/4J3wDfAv8KHg
/cjevgz+Ltnh0dznMfgqPeuCn4XiyZGKF3n711fB+5EvHKf4Ak9lPFbxCJ7C
+HXwfmTD3wTvUzb/GTwlb1/4I9gmFRN+D7ZVxZ8/g+1T8eGIgn+vfPCT4Oeo
+PBx8PNVfPg0+JnKHz8K9hH54IfBvizfLFvws5Y/llR8yTse5gu2Q8XbB4PP
TT73UPC53cL8LLgR3Ay+Lzi2NIYPYNtNOa+H4FeCn2lneG/wM+0E7w62zw7w
S8H22RH+LdhPFXunB8e0pvCiYB/RMyxdsO0p5oeCbV4xv0TB/qKYPy04NjaB
CwXbsPLFE8H+exv8XnA8lw8uhtvJd+DHg/39Vvi7YLtVHP4h2A4Vw78PtmHF
+S8Y/8v1CdeXXN9zfcj1PnvtzBgZDynucn3M9R+u7/R3rnf5W0fGYsb3uDrB
ZRhf52oFFzG+w9UBLs34BldruBTjAfbQG55GftkjH4C/VvyP9lvZ3r5of75P
uZI1N7LmV9a8BreEU8b9rLlWfqXnFe1L0/RcomOK7Ha34gLrv+Kzu+Cb4P/B
C6JjZQ/lO8Y2zB+mWMf8Z4wj2NsqxSbmP2L9Bvhi+At4I3yJzgPeBF+q84NX
wOfBH8Ancp8P+f8w7nMS/Ck8HP4xOJYqj/8Ez8k7d7+VxdLA+DTXlfA33Gcl
fL6eC7wIPgN+E14Mnym7grfCV+tZws/AV8Hfwo/CNeB98OPKJfB++DH4VPgV
eDl8rp4pvA2+Rs8YfjU4Nt7O3m5k/+crvrP/hvDF8HL4Csa98tPU9iPb+UB5
gvl9ignMz+Lze+A6jFcx/4riUur77YC7wDPkD3BDvvNS5l+Uj+ss4e3ag/YI
b5M/au/watm5fje8X3FPe4dfVRzL7PZbrrcVQ5nfydiT+bPhZ+SzOj94E9wW
PgfeKh+H68Ab4NY6b3gj3EbPHN4F9059Bi/IB5WrOZPZjJfzO/rDD8vm4E7w
WH0nPAB+RLYOD4TnwFfA3eEpsjO4KzxJvxvuBk/WOcG3wxO0R7gLPFHnUfCZ
f8P1kuIO86uVD5gfCa+Rz8B3wXNlE/AgeJ7ODB4Mz0+tUYfDT8LXw3fCT8j+
4GHwUvg6eCi8BL4WvgdeK1+C74aXwQ3gHvA05diC96X9fSbfzmLHp1y/8feR
jKcyHqFYC18KnwKvVHxOHZe+4vqdlPWgtCx8v2xE/g2fz5pGcCn4mcRr9Zl3
5cOKGYznsaY6vEJxOLVP94ArpNYtfeBjGauyZjF8M3wM/Dh8NTxTuROuz/if
1PHqGMYTWLMIvkn75OoFH834OVdP+KjUvt4dLs/4QME+of2P5P8FeG7i/Sru
vpPF10OZrX6e8UfZ2X2Z+dT3Gb+UxWCd52FZ/P4iO6t3M9Y9m7HPt3SejLdy
/cHfGxbZJw5l3/Npdp/3uGrwt1X6nOwAfg0eKnuCX4eHpV77dfa9usfH2T5v
ZM0bimmyCfhNxTRplmwPI1Ln1d1wP/kJ/DLcX2eGzUxnvJDz6QfPUjyF+8D3
y+eUo6WfWL+dczud+f/y//HEnzrwd/AE+LLo5/0ofHm0PT0Gnwn/yJpJ8JXR
seMJxa7o3/w4PJW/H8v9t3H/2sx/y//HMV8L/gYeC58GfwWPhs+Cf4Inwx3g
0XBd9nlbdAxax/yp8CHmR8GnRNvKPXCNaHu6F64Jfw2PgatH29BI+NbouLYW
bhYdN9fAt0TH1tVwg+iYtQi+OjpmzYOvjY5rC+BrouPX/GLnSWm5bnq+0fF0
MfPXRcfEhfDN0bHySbhRdLxbAdeFf+ZzU+DG0TF6Jdw0OgesgltF28EmuGW0
3WyEW0Tb0wZ9V5G1ZXfu1Y75exWDObe28D2KtXB7eBR8Ftwm2oa28NnW0ba1
GT4b/pU198EXw8dKl8MXRfvwLHh+dL3RnfvMi643usGPZb9Fuu7R7DlK182F
/wd3ldbK7t9Fmgr+JXUefCCzhzbSlpmdtIXvz55ja3hOZm/ShLMy+2wPj4I3
yyfg3vBM5RC4FzwDvgh+KLPtdvBoeAvcEB4Lb0+tUcfATyn+ab3iF+f5InY7
m/kfUuvSG6Jz5xLOoS85tWbe8Xw888+m1qXnZL9XGuzc6Lisev/86Bg6E/5X
dMy9H74gOl4/CF8aHQdnwxdG1xgPwU9xHcV3teI7/x0dW+cwNzFah0l718vO
cyrzHeExcD3mJ0VrQWnycfCO1Bp4cnT9L027MLo27glPie4jSA/PyHytJTwz
89NWihvR9ZK08bToergFfDC4HtTzle08AV/D394N7o3o/sdGa80B7LNcdK+h
V7FrCem9Q5x5+eieRW/mj4vWvnfAJ0Rr6CFwVfgDeChcJVo3D4KPj9bNg+Gj
o3sW/eAK0T2OPjrL6L5G32LHQOWO+YlzbGl4YeLYWQwvTqwdEnhjYk1RBD8F
38R9LlRNXuw8fzLze5m/OfieI7PY/n6WCypHa/e7im2bZZhbyvqK0Tp+IPPP
KWYrRyX+fbfDhysWc8/L87ZP2Wk93TOx7Z+l3JTYPmQn0jzN4XJ565nzuH9e
dTX3v435I/PWPC3g8nnrovqsKas6udg+IX3+cWJ7qa+cmlib1IZfg9el7sW9
ntj2L1DeS6yPasEHE+sm+cgB+IzMjyYW2//qSldkOl96++3EdYG09Ktwpej6
4U7FbfZ5BPPjU2u3FN7MmuasacCe1xe7JujCfFnGkswvVNxgvhefPYb5lnDP
4HzUCh4fXB8pDrwOD887Rkk/6gy3JtabOsNNiXVoBfhpuHdw3pT278t3PSD7
554PSscwv4s1Q4NrhHbMD4NPgdvCA4Nji+qM4cG/V7/77uDaoT1rhnDPBdn+
O2e/XTHpMObXKxYV+/fVYf6NxLldz3RDYg1bEl6fWBfr+W5JrD0rws8mzqt/
o1uWJI4T/8DLEmvqHGuWw+PgPLwycd74iz8tSpxPpHnmJdbOJVizNrFWPQl+
OXH++ZM1CxLH48j8k4l1x+HwisRnVhZenVj/ngjvSayLq0mPJdbXleDnsrpM
57Y78dkcD7+Q+Fx0PusS6+4q8M7Eerwy/Dx8Ced2vHpGxX5menY7mG8Z/ExV
C7TNnqniQafg+0sjqZ5RXdOkyHG4MeNB5dVgm1ctcCrX83nnYtVc72S+X7vg
mkt59q5gP5XOr1lwjaOcflrBNZRyekV4fd464dXovC7brlJwPSVtcFLB9Zp0
i2z/IDwkdT0ozagey8kF13fSOdULrgelnaoVXItJ51QuuP6SDhkbHHvliycW
/HulPWoVXJdJG4wLrveVZysVXMepVi1TsG6XFqpQcK0h/XNUwbpXubJ7cGxU
Hdct2E5Ur5UruI6Q1ioPL89bL/XJ/ELPql9wPFGd1T84/qjOOrrgWlW1cw/m
q+dd9yke61n0UOwIji2ynV3R/dy5rD+9yOfcivlSBecpaddU2iVvrZsU3N+T
1o0F1zLSfsXKl3lrwqKC6xpp3b3RPVDlgnuDY7jquCXRvWDFXsXgccyfyff+
HFxPSVOVie41dIF/YX5q3nn/iOgeTQ94W3QfUzb8d3B9Jw3wF/xg3pqhOLpP
cXux7V37vFGxIbpH05P5stH9ze76XdG9ia5wu+D4oBqzfbDfqXboEOxH0lHN
gn1Wdfctwb4sjdEkOJdJWyqHaD+XcN/10e9ClFO+Df7t0jmlo3sxneFfg2tP
6czGwTlX2rVRcC6Wdv0CHpG3duoaHB/UB+gY7O/Se12CY4hqnCHw2XnX3YOD
c6Xq6JHBuUy1/KDgHKQafERwvlMczkf3d5Qv7giO523g27O4rXhTIrrXozwS
ontYHeHPg2tw6Tr5v+KAasNCdG+rk2wsujekXFAU3dtSjmgaHCdV7yTRPSl9
b6noXpXywj9lXFM1h3PR+UZ556pom5Ztrw3uE6reWRfcG1R9tCHrl6pGP5z1
zzN2k24Jfu8jTbUs+D2RtNOS4HdA0lSjg/tj2v+LcLe8674TCq491Uvcwnz7
vOuyl4N7Aqprngt+JyI9vye4fld9txRunLcWWh78jklabkXwOyb195TrLoI/
V06J1hzKfZ2j85P0wDPB7z6kSzcHv/uQXh0VnB/1XNYH9yFVG36Sev/lGDcG
9yt0Jsdwz4OM/VmzJrgXql7larhF3j3G6dHve+6G9wX3JaS3twW/G1Kdsj+4
d6EaqmrBPTr1TnXe18M/Kw8G9znlj/pO3T9hfDS4Tyi9OjX6HZ72Mzf4s9LM
E6I1op7d5OC+qOLGmCzWKYZPCe5tyq9nBJ+h/H1icE9S8WFmcN9VsWVOcJ9T
eviBLBdIj88Lfg8i7f1wcO9UmnxTcP9ZNfvTwf1q1drqyShPNpF9Besx9RC2
BvexVe8/G6xp1WeYHdxTlSafH9yLlgZeENxPlvZbGPyuQX3c7cH9c/UQHoGv
yLt2eDj6vZq05fhMD6yRbmfNOXnHmVXB791Up7wf/H5W71tbZ1pdeb8G/z+Q
d9/7reD3hqptdwW/y1O92Sa4pyofrBZtT7KHHcHvFlXDvhP8nks9cPXTpP2l
G3YGvwdUHfp28Hsx1dH/B/gP++0=
               "]], 
              Polygon[CompressedData["
1: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
P3Us/i8ibrgO
               "]], 
              Polygon[CompressedData["
1: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
HWO12L05yZ61YXayJ4m9SQe/+1/zmi2d
               "]]}, "Charting`Private`Tag$323468#2"]]}, {
           EdgeForm[], 
           Directive[Lighting -> Automatic, 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           GraphicsGroup[
            Annotation[{
              Polygon[CompressedData["
1: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
8F1wOfhZuBZcVWs7sX/dyrNVT+xTtd4eVA6Z+jm13uX799L+TOI1vlBzwnU3
7UVsI9rvhMvCT8O3wyn8FHwHHOAGiWPXdsZ5TL4lem0NZ32uz/aG9sXGbO/M
zX57Xt7rv1vquVIc7J56rhQHe6SeK8XBLqnnSnHhs9Tvq/jSNfVcKY58l3oO
Pwre/1q3ipvfpF63evaeqedNMahv6ndU7LuX/zsSfpfnn5baf35C+/TUvrEj
3Cf1PCiWTU3tr7S+9E4bs304JPX8f0yf3qnnRzGxV+p5u0JrLXjfDcAOTv1N
m8mPpf7WzYPjwwPw6MQx51GtvcQ+Tft3TOK48Qg8IXENNwg+pODYeC88InHu
8y78e+I4eR88MnFsuR8elTguVYfHJY4/D8Pjs72jd/wE/jp1DqncaWDqvf8h
vJM+g+HDsANor5B3TvVF6r2mPfFl6v2lfEM16zdwRew9wXXxfOxXqfevcsgZ
qeNOp+Bvpm/3Os8wJ3X80h49IFgT+Cq4XhwGVy24XvwBPrzgenE4fETB9esY
+LiCa82hcOWCa+Wx8PEF19Dfw1UKzptmwGcXnIPMhs8ruJ4eB59QcB08Gj62
YN8iP/M+z7khb38hX7E8Y8WAFdn6l6+en+0L7YHf8t570j2WZaw9WDrz4ecX
7Hvll1omvm9pdu91mgtsk8Rjr8v2l3LDmdhzCs4HZ8HnwiNT+9hWzNuo1H67
NTw6tY9tA49P7WPbwsNTv5feb0Jqf9uO9hGp/XNLeCh8ONwCngSfBneAJ6b2
w+3hcamfX+9RPjjWfBmcS06BTys4l/wJPr3gfHYqfEbB87c4m0PlpJOxpxSc
q/4In5r12ZD1W5XN6cJsjtdn83Uf/Y7SGpPvCq5bldM+WPC6fZn2FtE51o/8
/7Ki4+5EcrD5Rc/1SLgYHDu+wP6Wuo5WDvkrfV6mz3R4RdG6wGTlqKlrT+V7
S4uOrxPgn4vOFcYpp01dqyrfey06Hv+gtU2fZvAC2hcV/Q5j4IVF+6zR8JKi
c4jx8B+p62jlw3+nzn/kMxanzh+UD69LrQOoHlmTOpfrwW8l/G4/+v5B+6ps
rylnXJY6J+lOn7XwpXnnyZvhB+E+tK9MrZMor14On5fP8u3U2ovqnV9T6yqq
if5J7cf0bJqza7UeFOOi887/5jC1rjJTuXrqPsr560TnSZqTssG5X3/srNR5
14+0z87Wm3xFv+gcaA19FtJ+Ou1T6HO+asu86+XJBdcX23mGBanzMWllzaO1
j51wtehcZJJqasUbzTO2RPC7KLfal9qvqh7PBftw1fj1C56TLtJD6HNC3mvj
p2x/yddeFqzvqY64XLVl3vXFGcGap2r/Ralzs6nwmaqf89YZtEbugYcz/o7U
upPqoMqZryvL+09Jvf61nn+Ej8h7zXxf8Dys597JqeOg1ufDBT/nx9JkMn8u
P3BndP43lj6vR+uz2+CxWZzVHh8DH5r32t6WWpNRjfN9an+lNbyTdduJvqvg
C4O1I9XvlwTrqKrZTwvWxKQVHBesHUkTODZYm5JWcFGwZqt6vxj9Pnqei4P1
Ye3lKtG6qjTeYTzD/nnvnbOD9UDV/mcF64Gq/c8N1uVU458XrPWp9q8WHO8W
qD4N1gxV+x8TrKFJ9+iX5VeKfZfydwetJWz/1LWPfMhdwVrl3KwGkb8P2LuD
9eF52KODtThpI8cH64rSPU4Orpelh5wSXA9KY7kiy83qKR+LzrnVdkKwdid/
cmpwPiAd5nSu9/PWN04K1ieVs21Jra2pDt2eWnNTzTsfvkRrOLiu0Zo6md+p
F1xfLMFWDdb0BmOP4GoKf4u9MVjrnondmLo27AXfonxOPgG7KXU92Bs+k3H3
Y/yKfK9n+Xua1g92Sep6syu8rmiNT/5hdebr5K9+gW+Ge9JnAX1uo20UfW4K
1o1nYZcXvSe1l68NPjuYEVxXKj7LV+g+reHXmM/9o32E/MD10fm3xhyU5XXK
U24O1pxnYytEawfSahYXvZe0X54MrluXYq8JPqeYrrVN/y3KuXnfpanrvm60
1wyu3xdjrwo+E5mKvTr4XGMatlZwzf4zthCcv0lj3Mo4t+StOdQOPlOQbt87
+kxCv9UgOHeSnnNTdC2h/PmG6PxeeenKonVw+dWKwXrsQMXA4PxKupPqeuUj
yutvjq4flAM/FnxWIt2+dLAO8Dn2sGBdepDWRnSNobz39uh4rJykZLAO0Dd4
bkbBxygXCj6L0bnAU8H+TTrVXdE1kvKWB6NrRdXIVwSfoUiTyQdr7/LVd0Rr
o8p56gfnftK+Gmdart6xYXA+KY2rTvBZj85BHg/OY3W2Ujc499aZi/QH7eP+
jHFbdF2qXKtJcN4oDadGtP6imFsvWh/WOzbINFXlFY9G6zKKuQ0z3VX5kvbE
dMY5i7/rZ7qxYt9Tmbas86xGmS6ts5UnMz1Zc/5c8BxKD3wui/WqQZ7OdGbl
0qW4Hspbr34+04f1jWpFaz3as6uKPiNRDF1T9PmK4tEt0XqB8sDng/NqaXe3
RtfYyhUbB+fh0ifrRmtJyh+qR9ft8i01o7Uk7d/a0TqIfEKj4Hxbmucj0TqX
9sjj0XrTZ/ruwTrVQr1HtEag877Po7Ut+ZMHojUL1RefRJ/5ySeE4DpLmnbP
6PMk7btO0Wd78lEdo88dtcd7RZ/nad8dpbnOWzPfmfrsRvphl+jzSNU43aLP
/BQ7ukefY+k5m2Yau/zkE9G6mGLi7tQxXXpyleAzIOnwlYLPfaTht4k+05If
aBd9niQ/Via4NtSZwqfR56CKKW2jz7rkcw4NPjOS5t8h+vxG/rlz9PmrYtNt
mqO8zwT7RNd78vN9o7VF+eTPovVB+TTF81qKd/jM66L1DtWJTaLPF3Rusl9w
vakzjnuitQ/VCDFYz9R5R4/oMzzlV3tS17PSUe+O1kRUgxwSfM6l84vW0ed5
8o2tos/SFHP3pq55dQ5SLlgj1fnFvdFaieqUA4OfWec490VrT6r974/WpFT7
Hxx87qbznYej9UrFoBeiz1MU73al1iq1Dp+J1i6VS/8fnNphVw==
               "]], 
              Polygon[CompressedData["
1:eJwtmnfgVuMbxt9eOc+39zlvb1pSZEay988me8+yVzYJkZBRSbQ0tXeiCKkQ
2kNTQ0VDhYqU7FQKv+vjOn+cOte5nzPec577vq/rer77N3r46ib5XC53n/4p
r/8vDLnczYn2hd8q5HJdYi53kPbb6djlpVzuUOHWwuM1rqLwuoq5XC/FjtWx
FRrfTfGDtd9Bx65U/Hsdu0K4jcZv0thNwlcLvyS8RbirxtcRbq/xV2j8Izre
VfuH6djnGvulxjQXrsw9OVfj39L+1xq3t8Z/rXgXxevp2GLF91e8hfZHK15U
/GzhvsILhasKdxc+RLijzrlKeJnOv1H7u+nYSJ1/oeJDtP+lxu+p+GQdqyF8
i/DVwhuFrxR+UXizzl2u7UmdX0XHPlZsrXBn4UOFFwlfpeu9qf21Gl9L5//A
MeG2wj9qbIWyXG6p8FfaKmn/PI3vrP2lir+q8RcIDxb+Qri68PX6/yldv6qO
faJrXaT4UO0v1/Eain+ja76q+NGco3h9xfvxLIpX43zh94S/F95X+AXhisJN
dc7ZwkN1zl/lcrmzFD9d+HnFKyh+j+KnCd+u4620X0vHpmlsa8WL2n9Ex85S
/EzhPsILNK6KcCvhVLiJ4mcKtxSOwo2FzxD+n3BX4Vkav4fwc8Jlwncpfqrw
s8JBuJHwKcI3CI8R3qjx+wmfK/yK8BLhHsJXCo8UXiNcU/grvY+XdO4BOjZH
z7tKuK3w/txT+DqNH6397zS+tsY/I5wI364xJws/HZ0L5MRJwi2Edxe+Vfh/
wm2ES8KPC9cXvli4h/BKXa+38OXCI4RXC+8lPC3V/8ItNX6lnuVoxdsLT1a8
pPh9wblGzs3T89Uq5nJTtH+Ijh+v+D7C04QPFT5ReC/hScJ1hI8Vrik8Wfhg
4eOEv9U9eup6xzBHdL1Ldb+ezDfF+yq+WvGXFT9Qx+YqvqfO/0T7+yt+tOLV
hT8W3k/4KOEqwh8K7yN8uHBV4fHCtYWPEN5beKpwXeETSv6N/NaaOjZV1z9W
9++g/SmKV1K8kfAo4V+FhwpX0/kfCe8rfKTwyYp3E54tXFm4sfCnwjuFDxO+
RPhV4VXCfYR3Kzrfc1m+7dL9J+n+1+vYv7r/LwXvv6L4r4odrvOfEJ4g3Ebj
6wk/Ti4Ltxa+Ufg14U3Cg4UPE25G7gm/IPyO8GPUPt3jMeEjhJsLT1T8ReFD
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
4p8G1zbuwb245t5wr+jcIyfJzf8DjJElDw==
               "]], 
              Polygon[CompressedData["
1:eJwt13nYVdMaAPCj+jr5ztd3JA2GMhaPW+EiHrNrvEhK4dKgVCjNE5GUFEkZ
GqUiTaSBolBKc2miWSONaKJRGu7vfXZ/vM+z3t9+91n77L32WmtfWL959WYF
UqnUCpEjfslLpQamU6lvCqdS34q/81Op/KKp1H52lighymdTqT3qRmsvULNQ
FGarWA82Rv6Z2OPcxexF9oF8sNjGTrCV7JD8sCjp3Bx9bGU5orAow0qzAkVS
qYvll4ir2PRMKjVNe6PznnfhleR/+725bAfbKYqpayVanrrOTxxrrX2G2qzY
zUaxFixfXlTsYiNZc5YrP138zoazpqyIPC1+Yx+z59hW7cHai/XZyLWcyPX/
2BC2hD3NTrLtbChbyp6Jm+13trAP2CLWkB1Xl8cz4g/HRjjWTB+/ag/S/kFd
A3XH1G1m/dk8Vo/9zVaznmwqq8l2szXsLTaNPcL2sI2sL5vD6rLDuclzezOd
PO947o30+yN7lU2UV1G3Xd1PrCubxB5k29hK1p1NZtXYb2wF68a+Yg+xnWw5
e419yaqyHayQ/1pQ7HRsmGNN9FtYniN2sI9Y42wyJt9PJ+MsxtuzbBnrxMbL
7/V7m/3eWc4rLvY69qljbdTN1W6aTsZejMHH2TzWjA2RX+fcpc4t6bwSYp9j
Yxxrqy5j/O3RLiumqKvreC7bHeMz/jOrHeOH7ZNfEO8Nq8fy2F75+eJr9mSM
KbZLfl7cG1aHzddfc/lQ13I9W+ZaNrF+bC57kh1hs1kj1o9dyeblJu/WS+nk
XYt3rp5r/p7VYb3kb4nqbCary3rLL3PuDOcuYR3ZWHY328iWspfZOHYP28Rm
sYasL7uCzWc/sHZsJLuNrWGLWHs2it3O1rIFrA0bzm5hq9lC1paNYLeyVWwO
e5r1Z1exBbnJnHPg1Hsf7/9w/2O9uve0Z6mrre6AunXsXTaT1WIHY/y5r7+y
gvGMWQ35ZDFRvkJdc1ZOPkVMYitZC1Ze/rX4kq1iLdml8uXiF1YgxhF7WP6T
WC8/rq4/qyJfGe81KxTPk9WUr455RJ6J/8yekP8o1smPObcfe0D+lfiCLWcx
IV8S1yE+Zz+xpuziuF4xnuW5H+drXyBmiO/YJnUvqLsicjGVbWDtWcWYN8W3
bD1rxyrIp7t/j7Bu7AL2tfs3lX/D1rG27F/Rh7pHWXd2IZui7pu4braatWKX
yWdGsC3sZXZN9Bn3lf3M2rDL5Wtinov/EeOI1ZKvivlVnhvPmz0uXyZ+lv/j
3L7sfvk8sZD9wV5jN8b/dX1VWafoN+YE92cau4e1jzVB3aeuea3aP9mZMfbZ
U/H74i958Rj7rEE8W3FUfm7MWaxJPLNYa+TnxBzIGsvX6qOX/Dt9PMr26uNn
1ptNZ4+xfWyD2tOsZRfFfMxayb+PkP+qriO7Wr7BuX3YbFaHHYp3K8Yb2896
sTvli2NcsgOsN7sr5hLxA9vFurGb5HMi2HbWmV0nnysWsN9ZV3aDfFYE28o6
sWvlsyPYNvYKqxzniUVsN+vObpYvjfvAjrI+7D75ErGCHWRvs7vjmcV1sz3s
dXZLXG+8D+yvmK/YHfJD7sFktoatFfmx/poPdrLS4nN1j8XawTbJs+IT9hDr
IarIGznvdDbB/evO7mNPxj6FjWWvs/tZfZZm49gb7AHWgBVh49mbrFqsxSyP
TWTd2H9ZHZbDPmO9WU3Wjp3BJrOerHrsM1hRNon1YjVibWJZ9hUbwp5nA9k1
bB0byl5g77Nr2Xo2OpOsk6lssheJPcn4TLLWpbPJ+hXr2NhMsr/JYcW0zxSf
ZZL9TaFssgeKvdDn4ex0drb2OWJMJtl7FMwm+6LYH03IJGtiEVZKu3T0mUn2
RgWyyZ4l9i6fZJK90WnZZP8U+6hRmWQdP5mfrPWx5r8lHmat4tn6b1/6b13Z
3aw1S7HR7EV2I6vNDp3mPrEO7Ab2BDvIBrP3WC3WkZV27nQ2gD3LerBybBEb
zFqzPqwSW8neYY+zF2Mfyqaxd9kT7CVWin3H+rL67FVWhs1m/VkD9ho7n81l
/dhTrCsry+awPqwe68LOY7PYQNaYvcnKs8VsJBsQ+wVWg/3DPmCt2HusIlvB
3mdNWE92KVvCXma3sKdiz+6+fMQ6sptZPXaEfcheYjexurH3ZkNZJ3Yra8iO
smHsVXYXa8lOslGsC7uTNWcn2Ej2Nvsf68BKuJaprDO7gzVlx9WNYK+w/7Am
7BgbzgaxluxdVsG5y2NP6J3ezM4Qn7Jqaj4UHeSD1FVmG9QNY13Yx+xmtpUV
d+4xVkHMZc+pOZsVMu9ewxaz1jHOWQ67li1hbdi5rDCrzJaytuwsdlxeUcxj
TeP9YiflV4gFrDkrwU7IK4n5rBkrxVJ+70q2kLXIJN8zBdnV7N9itPdkCy/K
Lo85P/6HfKIYF3sGx8tolxXnOTet7jq+TF07Vphtl5cU49kjLM12yEuJCexR
VoBtlOdHn+zBTPK9tS2dfM/Fd92QmBfYQe1ysZ6paxhrFtsgLypGsaqsDCvi
Wq5nP7L2McewI/LLxPfsmZhj2CF5+VgLWSNWjB2WXypmsKdPzfdT0sm3W3zD
vZJN5piYa/7MS+aodtlkfop56i82Ntb1bLLuP6j9rPMai1X5ydwRc0iua8yI
svocl0m+A+M7Nb4R4lshvg2eSyf75Ngvb8xP9s+108keIvYSa9kXmaS/XOee
G88i5jTRmQ1Tc5O+tuhzOHsjxi27i+1iI9g77Av2ANvPjupjPjvC3mHXx7wp
Xo91jN3J/shNvmvnpZNv5PhW7qn/Y2xpzKfygepuPTU+YpwcyEv2hi+oO6g9
QXuzug7qLjp13XH9+/OS8fW8usPa07X3qntD3VWOH2Ez2D7Wg13JjrNlsfbE
msRuZyfZ6lh7xIfsHpZyr9fEWiE+Yvdmku/9Venkuz6+7/vp9x+2RPuEPgao
u03d5kzyXRTfR3me2y/y/wML3FKt
               "]]}, 
             "Charting`Private`Tag$323468#3"]]}, {}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line[CompressedData["
1:eJwt0stOU0EAgOGBthRELuEBuDxA4QXAF+CyYFlYuSskui3BrYEXoLCVpPIC
hZ1yaRVwCQqIoBBiCKAh3DXE4DcJyfnzTSYnZ2bOOR3PXw6+qAohvNat4vhS
R2qpDaGZ7WxjFzv5jD3sZx+HOcRRjnCcrzRmPMNJznGaC3zLD5znZ1Y4UBfC
Mf9oU9f6pXcJ9/A9v3CRW1ziNpe5wxV+ZZkV7cY1+I0fucdV7nON37nOH/zE
A75JhnDCvzrUjX7r3B434hzL3GAprsUiSyywyAkWOKW8cZ455phllr3sZTe7
mWGGrXHee/jJOzXpSmdK22MjU2xggk/j92I9H6pDeMJ/9Ihwz9r4PnmndDwP
a+IzmeIFk/F8TMSz0hVmTZ4+/g//AXXMUGU=
            "]]}, {
           GrayLevel[0], 
           Line[CompressedData["
1:eJwl0kkvnVEAx+FzcU1LkdT2blha8Qn4Aliwa1gjxFRTWViJsJE00rBpxBwS
EeHqFyhqntKI0LIwi3RhKM9NF788/9XJed+cWGVtSU0khNCjW+OJl/ylkowQ
MviROaxlHjtZyD4W8yvLOMkqLjOuevuA3bzgAP9yhNHMEGaYzRV+4Qnvtapr
/VFDNIQ1NnKdTfzJZm6whZv8xC22cpttbNeO3cHdxL25x8/cZxcP2M1DlqeG
cMoHHelG58p3tx+MMc4sTjOZw3z0Tf2J+7KLe9xVnb3ISo6zlEMsYi8L2M5c
VvMDB515zDul60q/9T0lhDTGmcolRhPnM4ULTOY8kzjHWUXsGQZO8c2c4D+O
8ZWjfOE3PrPCfziL/H8P73t+Ugs=
            "]]}, {
           GrayLevel[0], 
           Line[CompressedData["
1:eJwl0k1LVFEcwOEzA01hC6dPMKNby7dS2yh+AEVw6xsmoTToIOJi3Av2CWrh
WsG9insdJ83yhRhETZAxy5Y5qVnqc2nx4zkXLvcc/udWvcp2j8VCCNP6Hg/h
l4cSv2i2IoQ4F/iEK0yzwDoW2cZv7GSZvXzwOISEMtbVnGID37Kd79nFefZz
iSfc57nWom/qq2oehpDnU67zGQus5QfWcYP13Iz24Uc28rm2rF/wE5v4mc3c
Zgt3+JK7rHwUwgF/ak9nOlbO2VaZ4SJ7OcdOvmMbZ6KzMMc0U3pjHWdPNFez
6WCJrdF8Wcs8U1xmMtrP+0X+UEynOtJkwgVxgnfuaJy3zPIfR/mXGd5whMP6
Y/2a1xziFQd5yQH+Zh/L7OEFk+ZwGP//P9wDHbtN0A==
            "]]}, {
           GrayLevel[0.2], 
           
           Line[{2066, 2378, 3359, 2288, 2065, 3360, 2289, 2067, 3361, 2290, 
            2068, 3362, 2291, 2069, 3363, 2292, 2070, 3364, 2293, 2071, 3365, 
            3045, 3462, 2072, 3046, 3463, 2073, 3366, 2294, 2074, 3367, 2295, 
            2075, 3368, 2296, 2076, 3369, 2297, 2077, 3370, 2298, 2078, 1181, 
            2299, 2379}], 
           
           Line[{2080, 3047, 3464, 2079, 3371, 2300, 2081, 3372, 2301, 2082, 
            3373, 2302, 2083, 3374, 2303, 2084, 3375, 2304, 2085, 3376, 3048, 
            3465, 2086, 3049, 3466, 2087, 3050, 3467, 2088, 3377, 2305, 2089, 
            3378, 2306, 2090, 3379, 2307, 2091, 3380, 2308, 2092, 3381, 2309, 
            2093}], 
           
           Line[{2095, 3051, 3468, 2094, 3052, 3469, 2096, 3382, 2310, 2097, 
            3383, 2311, 2098, 3384, 2312, 2099, 3385, 2313, 2100, 3386, 3053, 
            3470, 2101, 3054, 3471, 2102, 3055, 3472, 2103, 3056, 3473, 2104, 
            3387, 2314, 2105, 3388, 2315, 2106, 3389, 2316, 2107, 3390, 2317, 
            2108}], 
           
           Line[{2110, 3057, 3474, 2109, 3058, 3475, 2111, 3059, 3476, 2112, 
            3391, 2318, 2113, 3392, 2319, 2114, 3393, 2320, 2115, 3394, 3060, 
            3477, 2116, 3061, 3478, 2117, 3062, 3479, 2118, 3063, 3480, 2119, 
            3064, 3481, 2120, 3395, 2321, 2121, 3396, 2322, 2122, 3397, 2323, 
            2123}], 
           
           Line[{2125, 3065, 3482, 2124, 3066, 3483, 2126, 3067, 3484, 2127, 
            3068, 3485, 2128, 3398, 2324, 2129, 3399, 2325, 2130, 3400, 3069, 
            3486, 2131, 3070, 3487, 2132, 3071, 3488, 2133, 3072, 3489, 2134, 
            3073, 3490, 2135, 3074, 3491, 2136, 3401, 2326, 2137, 3402, 2327, 
            2138}], 
           
           Line[{2140, 3075, 3492, 2139, 3076, 3493, 2141, 3077, 3494, 2142, 
            3078, 3495, 2143, 3079, 3496, 2144, 3403, 2328, 2145, 3404, 3080, 
            3497, 2146, 3081, 3498, 2147, 3082, 3499, 2148, 3083, 3500, 2149, 
            3084, 3501, 2150, 3085, 3502, 2151, 3086, 3503, 2152, 3405, 2329, 
            2153}], 
           
           Line[{2155, 3087, 3504, 2154, 3088, 3505, 2156, 3089, 3506, 2157, 
            3090, 3507, 2158, 3091, 3508, 2159, 3092, 3509, 2160, 3406, 3093, 
            3510, 2161, 3094, 3511, 2162, 3095, 3512, 2163, 3096, 3513, 2164, 
            3097, 3514, 2165, 3098, 3515, 2166, 3099, 3516, 2167, 3100, 3517, 
            2168}], 
           
           Line[{2172, 3407, 2330, 2170, 3408, 2331, 2174, 3409, 2332, 2176, 
            3410, 2333, 2178, 3411, 2334, 2180, 3412, 2335, 2182, 3413, 3108, 
            3526, 2184, 3414, 2336, 2186, 3415, 2337, 2188, 3416, 2338, 2190, 
            3417, 2339, 2192, 3418, 2340, 2194, 3419, 2341, 2196, 3420, 2342, 
            2198}], 
           
           Line[{2197, 3533, 3115, 2195, 3532, 3114, 2193, 3531, 3113, 2191, 
            3530, 3112, 2189, 3529, 3111, 2187, 3528, 3110, 2185, 3527, 3109, 
            2183, 3525, 3524, 3107, 2181, 3523, 3106, 2179, 3522, 3105, 2177, 
            3521, 3104, 2175, 3520, 3103, 2173, 3519, 3102, 2169, 3518, 3101, 
            2171}], 
           
           Line[{2200, 3116, 3534, 2199, 3421, 2343, 2201, 3422, 2344, 2202, 
            3423, 2345, 2203, 3424, 2346, 2204, 3425, 2347, 2205, 3426, 3117, 
            3535, 2206, 3118, 3536, 2207, 3427, 2348, 2208, 3428, 2349, 2209, 
            3429, 2350, 2210, 3430, 2351, 2211, 3431, 2352, 2212, 3432, 2353, 
            2213}], 
           
           Line[{2215, 3119, 3537, 2214, 3120, 3538, 2216, 3433, 2354, 2217, 
            3434, 2355, 2218, 3435, 2356, 2219, 3436, 2357, 2220, 3437, 3121, 
            3539, 2221, 3122, 3540, 2222, 3123, 3541, 2223, 3438, 2358, 2224, 
            3439, 2359, 2225, 3440, 2360, 2226, 3441, 2361, 2227, 3442, 2362, 
            2228}], 
           
           Line[{2230, 3124, 3542, 2229, 3125, 3543, 2231, 3126, 3544, 2232, 
            3443, 2363, 2233, 3444, 2364, 2234, 3445, 2365, 2235, 3446, 3127, 
            3545, 2236, 3128, 3546, 2237, 3129, 3547, 2238, 3130, 3548, 2239, 
            3447, 2366, 2240, 3448, 2367, 2241, 3449, 2368, 2242, 3450, 2369, 
            2243}], 
           
           Line[{2245, 3131, 3549, 2244, 3132, 3550, 2246, 3133, 3551, 2247, 
            3134, 3552, 2248, 3451, 2370, 2249, 3452, 2371, 2250, 3453, 3135, 
            3553, 2251, 3136, 3554, 2252, 3137, 3555, 2253, 3138, 3556, 2254, 
            3139, 3557, 2255, 3454, 2372, 2256, 3455, 2373, 2257, 3456, 2374, 
            2258}], 
           
           Line[{2260, 3140, 3558, 2259, 3141, 3559, 2261, 3142, 3560, 2262, 
            3143, 3561, 2263, 3144, 3562, 2264, 3457, 2375, 2265, 3458, 3145, 
            3563, 2266, 3146, 3564, 2267, 3147, 3565, 2268, 3148, 3566, 2269, 
            3149, 3567, 2270, 3150, 3568, 2271, 3459, 2376, 2272, 3460, 2377, 
            2273}], 
           
           Line[{2287, 2384, 2383, 3582, 2286, 3580, 3162, 2285, 3579, 3161, 
            2284, 3578, 3160, 2283, 3577, 3159, 2282, 3576, 3158, 2281, 3575, 
            3157, 2280, 3574, 3156, 3461, 2279, 3573, 3155, 2278, 3572, 3154, 
            2277, 3571, 3153, 2276, 3570, 3152, 2275, 3569, 3151, 2274, 3581, 
            2381, 2380, 2382}], 
           
           Line[{2386, 2708, 1410, 2385, 3681, 2608, 2387, 3682, 2609, 2388, 
            3683, 2610, 2389, 3684, 2611, 2390, 3685, 2612, 2391, 3686, 2613, 
            2392, 3687, 1418, 2393, 3688, 2614, 2394, 3689, 2615, 2395, 3690, 
            2616, 2396, 3691, 2617, 2397, 3692, 2618, 2398, 3260, 3796, 2619, 
            2709}], 
           
           Line[{2400, 3163, 3583, 2399, 1425, 2401, 3693, 2620, 2402, 3694, 
            2621, 2403, 3695, 2622, 2404, 3696, 2623, 2405, 3697, 2624, 2406, 
            3698, 3164, 3584, 2407, 1433, 2408, 3699, 2625, 2409, 3700, 2626, 
            2410, 3701, 2627, 2411, 3702, 2628, 2412, 3703, 2629, 2413}], 
           
           Line[{2415, 3165, 3585, 2414, 3166, 3586, 2416, 1441, 2417, 3704, 
            2630, 2418, 3705, 2631, 2419, 3706, 2632, 2420, 3707, 2633, 2421, 
            3708, 3167, 3587, 2422, 3168, 3588, 2423, 1449, 2424, 3709, 2634, 
            2425, 3710, 2635, 2426, 3711, 2636, 2427, 3712, 2637, 2428}], 
           
           Line[{2430, 3169, 3589, 2429, 3170, 3590, 2431, 3171, 3591, 2432, 
            1457, 2433, 3713, 2638, 2434, 3714, 2639, 2435, 3715, 2640, 2436, 
            3716, 3172, 3592, 2437, 3173, 3593, 2438, 3174, 3594, 2439, 1465, 
            2440, 3717, 2641, 2441, 3718, 2642, 2442, 3719, 2643, 2443}], 
           
           Line[{2445, 3175, 3595, 2444, 3176, 3596, 2446, 3177, 3597, 2447, 
            3178, 3598, 2448, 3720, 2644, 2449, 3721, 2645, 2450, 3722, 2646, 
            2451, 3723, 3179, 3599, 2452, 3180, 3600, 2453, 3181, 3601, 2454, 
            3182, 3602, 2455, 1481, 2456, 3724, 2647, 2457, 3725, 2648, 
            2458}], 
           
           Line[{2460, 3183, 3603, 2459, 3184, 3604, 2461, 3185, 3605, 2462, 
            3186, 3606, 2463, 3187, 3607, 2464, 3726, 2649, 2465, 3727, 2650, 
            2466, 3728, 3188, 3608, 2467, 3189, 3609, 2468, 3190, 3610, 2469, 
            3191, 3611, 2470, 3192, 3612, 2471, 1497, 2472, 3729, 2651, 
            2473}], 
           
           Line[{2475, 3193, 3613, 2474, 3194, 3614, 2476, 3195, 3615, 2477, 
            3196, 3616, 2478, 3197, 3617, 2479, 3198, 3618, 2480, 3730, 2652, 
            2481, 3731, 3199, 3619, 2482, 3200, 3620, 2483, 3201, 3621, 2484, 
            3202, 3622, 2485, 3203, 3623, 2486, 3204, 3624, 2487, 1513, 
            2488}], 
           
           Line[{2492, 3732, 2653, 2490, 3733, 2654, 2494, 3734, 2655, 2496, 
            3735, 2656, 2498, 3736, 2657, 2500, 3737, 2658, 2502, 3738, 2659, 
            2504, 3740, 3741, 2660, 2506, 3742, 2661, 2508, 3743, 2662, 2510, 
            3744, 2663, 2512, 3745, 2664, 2514, 3746, 2665, 2516, 3747, 2666, 
            2518}], 
           
           Line[{2517, 3638, 3218, 2515, 3637, 3217, 2513, 3636, 3216, 2511, 
            3635, 3215, 2509, 3634, 3214, 2507, 3633, 3213, 2505, 3632, 3212, 
            3739, 2503, 3631, 3211, 2501, 3630, 3210, 2499, 3629, 3209, 2497, 
            3628, 3208, 2495, 3627, 3207, 2493, 3626, 3206, 2489, 3625, 3205, 
            2491}], 
           
           Line[{2520, 3219, 3639, 2519, 3748, 2667, 2521, 3749, 2668, 2522, 
            3750, 2669, 2523, 3751, 2670, 2524, 3752, 2671, 2525, 3753, 2672, 
            2526, 3754, 3220, 3640, 2527, 3755, 2673, 2528, 3756, 2674, 2529, 
            3757, 2675, 2530, 3758, 2676, 2531, 3759, 2677, 2532, 3760, 2678, 
            2533}], 
           
           Line[{2535, 3221, 3641, 2534, 3222, 3642, 2536, 3761, 2679, 2537, 
            3762, 2680, 2538, 3763, 2681, 2539, 3764, 2682, 2540, 3765, 2683, 
            2541, 3766, 3223, 3643, 2542, 3224, 3644, 2543, 3767, 2684, 2544, 
            3768, 2685, 2545, 3769, 2686, 2546, 3770, 2687, 2547, 3771, 2688, 
            2548}], 
           
           Line[{2550, 3225, 3645, 2549, 3226, 3646, 2551, 3227, 3647, 2552, 
            3772, 2689, 2553, 3773, 2690, 2554, 3774, 2691, 2555, 3775, 2692, 
            2556, 3776, 3228, 3648, 2557, 3229, 3649, 2558, 3230, 3650, 2559, 
            3777, 2693, 2560, 3778, 2694, 2561, 3779, 2695, 2562, 3780, 2696, 
            2563}], 
           
           Line[{2565, 3231, 3651, 2564, 3232, 3652, 2566, 3233, 3653, 2567, 
            3234, 3654, 2568, 3781, 2697, 2569, 3782, 2698, 2570, 3783, 2699, 
            2571, 3784, 3235, 3655, 2572, 3236, 3656, 2573, 3237, 3657, 2574, 
            3238, 3658, 2575, 3785, 2700, 2576, 3786, 2701, 2577, 3787, 2702, 
            2578}], 
           
           Line[{2580, 3239, 3659, 2579, 3240, 3660, 2581, 3241, 3661, 2582, 
            3242, 3662, 2583, 3243, 3663, 2584, 3788, 2703, 2585, 3789, 2704, 
            2586, 3790, 3244, 3664, 2587, 3245, 3665, 2588, 3246, 3666, 2589, 
            3247, 3667, 2590, 3248, 3668, 2591, 3791, 2705, 2592, 3792, 2706, 
            2593}], 
           
           Line[{2607, 2714, 2713, 3795, 2606, 3680, 3259, 2605, 3679, 3258, 
            2604, 3678, 3257, 2603, 3677, 3256, 2602, 3676, 3255, 2601, 3675, 
            3254, 3794, 2600, 2707, 3793, 2599, 3674, 3253, 2598, 3673, 3252, 
            2597, 3672, 3251, 2596, 3671, 3250, 2595, 3670, 3249, 2594, 3669, 
            2711, 2710, 2712}], 
           
           Line[{2716, 3038, 1849, 2715, 3895, 2938, 2717, 3896, 2939, 2718, 
            3897, 2940, 2719, 3898, 2941, 2720, 3899, 2942, 2721, 3900, 2943, 
            2722, 3901, 1857, 2723, 3902, 2944, 2724, 3903, 2945, 2725, 3904, 
            2946, 2726, 3905, 2947, 2727, 3906, 2948, 2728, 3358, 4010, 2949, 
            3039}], 
           
           Line[{2730, 3261, 3797, 2729, 1864, 2731, 3907, 2950, 2732, 3908, 
            2951, 2733, 3909, 2952, 2734, 3910, 2953, 2735, 3911, 2954, 2736, 
            3912, 3262, 3798, 2737, 1872, 2738, 3913, 2955, 2739, 3914, 2956, 
            2740, 3915, 2957, 2741, 3916, 2958, 2742, 3917, 2959, 2743}], 
           
           Line[{2745, 3263, 3799, 2744, 3264, 3800, 2746, 1880, 2747, 3918, 
            2960, 2748, 3919, 2961, 2749, 3920, 2962, 2750, 3921, 2963, 2751, 
            3922, 3265, 3801, 2752, 3266, 3802, 2753, 1888, 2754, 3923, 2964, 
            2755, 3924, 2965, 2756, 3925, 2966, 2757, 3926, 2967, 2758}], 
           
           Line[{2760, 3267, 3803, 2759, 3268, 3804, 2761, 3269, 3805, 2762, 
            1896, 2763, 3927, 2968, 2764, 3928, 2969, 2765, 3929, 2970, 2766, 
            3930, 3270, 3806, 2767, 3271, 3807, 2768, 3272, 3808, 2769, 1904, 
            2770, 3931, 2971, 2771, 3932, 2972, 2772, 3933, 2973, 2773}], 
           
           Line[{2775, 3273, 3809, 2774, 3274, 3810, 2776, 3275, 3811, 2777, 
            3276, 3812, 2778, 3934, 2974, 2779, 3935, 2975, 2780, 3936, 2976, 
            2781, 3937, 3277, 3813, 2782, 3278, 3814, 2783, 3279, 3815, 2784, 
            3280, 3816, 2785, 1920, 2786, 3938, 2977, 2787, 3939, 2978, 
            2788}], 
           
           Line[{2790, 3281, 3817, 2789, 3282, 3818, 2791, 3283, 3819, 2792, 
            3284, 3820, 2793, 3285, 3821, 2794, 3940, 2979, 2795, 3941, 2980, 
            2796, 3942, 3286, 3822, 2797, 3287, 3823, 2798, 3288, 3824, 2799, 
            3289, 3825, 2800, 3290, 3826, 2801, 1936, 2802, 3943, 2981, 
            2803}], 
           
           Line[{2805, 3291, 3827, 2804, 3292, 3828, 2806, 3293, 3829, 2807, 
            3294, 3830, 2808, 3295, 3831, 2809, 3296, 3832, 2810, 3944, 2982, 
            2811, 3945, 3297, 3833, 2812, 3298, 3834, 2813, 3299, 3835, 2814, 
            3300, 3836, 2815, 3301, 3837, 2816, 3302, 3838, 2817, 1952, 
            2818}], 
           
           Line[{2822, 3946, 2983, 2820, 3947, 2984, 2824, 3948, 2985, 2826, 
            3949, 2986, 2828, 3950, 2987, 2830, 3951, 2988, 2832, 3952, 2989, 
            2834, 3954, 3955, 2990, 2836, 3956, 2991, 2838, 3957, 2992, 2840, 
            3958, 2993, 2842, 3959, 2994, 2844, 3960, 2995, 2846, 3961, 2996, 
            2848}], 
           
           Line[{2847, 3852, 3316, 2845, 3851, 3315, 2843, 3850, 3314, 2841, 
            3849, 3313, 2839, 3848, 3312, 2837, 3847, 3311, 2835, 3846, 3310, 
            3953, 2833, 3845, 3309, 2831, 3844, 3308, 2829, 3843, 3307, 2827, 
            3842, 3306, 2825, 3841, 3305, 2823, 3840, 3304, 2819, 3839, 3303, 
            2821}], 
           
           Line[{2850, 3317, 3853, 2849, 3962, 2997, 2851, 3963, 2998, 2852, 
            3964, 2999, 2853, 3965, 3000, 2854, 3966, 3001, 2855, 3967, 3002, 
            2856, 3968, 3318, 3854, 2857, 3969, 3003, 2858, 3970, 3004, 2859, 
            3971, 3005, 2860, 3972, 3006, 2861, 3973, 3007, 2862, 3974, 3008, 
            2863}], 
           
           Line[{2865, 3319, 3855, 2864, 3320, 3856, 2866, 3975, 3009, 2867, 
            3976, 3010, 2868, 3977, 3011, 2869, 3978, 3012, 2870, 3979, 3013, 
            2871, 3980, 3321, 3857, 2872, 3322, 3858, 2873, 3981, 3014, 2874, 
            3982, 3015, 2875, 3983, 3016, 2876, 3984, 3017, 2877, 3985, 3018, 
            2878}], 
           
           Line[{2880, 3323, 3859, 2879, 3324, 3860, 2881, 3325, 3861, 2882, 
            3986, 3019, 2883, 3987, 3020, 2884, 3988, 3021, 2885, 3989, 3022, 
            2886, 3990, 3326, 3862, 2887, 3327, 3863, 2888, 3328, 3864, 2889, 
            3991, 3023, 2890, 3992, 3024, 2891, 3993, 3025, 2892, 3994, 3026, 
            2893}], 
           
           Line[{2895, 3329, 3865, 2894, 3330, 3866, 2896, 3331, 3867, 2897, 
            3332, 3868, 2898, 3995, 3027, 2899, 3996, 3028, 2900, 3997, 3029, 
            2901, 3998, 3333, 3869, 2902, 3334, 3870, 2903, 3335, 3871, 2904, 
            3336, 3872, 2905, 3999, 3030, 2906, 4000, 3031, 2907, 4001, 3032, 
            2908}], 
           
           Line[{2910, 3337, 3873, 2909, 3338, 3874, 2911, 3339, 3875, 2912, 
            3340, 3876, 2913, 3341, 3877, 2914, 4002, 3033, 2915, 4003, 3034, 
            2916, 4004, 3342, 3878, 2917, 3343, 3879, 2918, 3344, 3880, 2919, 
            3345, 3881, 2920, 3346, 3882, 2921, 4005, 3035, 2922, 4006, 3036, 
            2923}], 
           
           Line[{2937, 3044, 3043, 4009, 2936, 3894, 3357, 2935, 3893, 3356, 
            2934, 3892, 3355, 2933, 3891, 3354, 2932, 3890, 3353, 2931, 3889, 
            3352, 4008, 2930, 3037, 4007, 2929, 3888, 3351, 2928, 3887, 3350, 
            2927, 3886, 3349, 2926, 3885, 3348, 2925, 3884, 3347, 2924, 3883, 
            3041, 3040, 3042}]}, {
           GrayLevel[0.2], 
           
           Line[{749, 972, 3360, 750, 986, 3371, 778, 3469, 1001, 793, 3475, 
            1016, 808, 3483, 1031, 823, 3493, 1046, 838, 3505, 1061, 853, 
            3519, 1076, 3408, 868, 1091, 3421, 883, 3538, 1106, 898, 3543, 
            1121, 913, 3550, 1136, 928, 3559, 1151, 943, 3569, 1166, 958}], 
           
           Line[{751, 973, 3361, 752, 987, 3372, 779, 1002, 3382, 794, 3476, 
            1017, 809, 3484, 1032, 824, 3494, 1047, 839, 3506, 1062, 854, 
            3520, 1077, 3409, 869, 1092, 3422, 884, 1107, 3433, 899, 3544, 
            1122, 914, 3551, 1137, 929, 3560, 1152, 944, 3570, 1167, 959}], 
           
           Line[{753, 974, 3362, 754, 988, 3373, 780, 1003, 3383, 795, 1018, 
            3391, 810, 3485, 1033, 825, 3495, 1048, 840, 3507, 1063, 855, 
            3521, 1078, 3410, 870, 1093, 3423, 885, 1108, 3434, 900, 1123, 
            3443, 915, 3552, 1138, 930, 3561, 1153, 945, 3571, 1168, 960}], 
           
           Line[{755, 975, 3363, 756, 989, 3374, 781, 1004, 3384, 796, 1019, 
            3392, 811, 1034, 3398, 826, 3496, 1049, 841, 3508, 1064, 856, 
            3522, 1079, 3411, 871, 1094, 3424, 886, 1109, 3435, 901, 1124, 
            3444, 916, 1139, 3451, 931, 3562, 1154, 946, 3572, 1169, 961}], 
           Line[{757, 976, 3364, 758, 990, 3375, 782, 1005, 3385, 797, 1020, 
            3393, 812, 1035, 3399, 827, 1050, 3403, 842, 3509, 1065, 857, 
            3523, 1080, 3412, 872, 1095, 3425, 887, 1110, 3436, 902, 1125, 
            3445, 917, 1140, 3452, 932, 1155, 3457, 947, 3573, 1170, 962}], 
           
           Line[{759, 977, 3365, 761, 991, 3376, 783, 1006, 3386, 798, 1021, 
            3394, 813, 1036, 3400, 828, 1051, 3404, 843, 1066, 3406, 858, 
            3524, 1081, 3413, 873, 1096, 3426, 888, 1111, 3437, 903, 1126, 
            3446, 918, 1141, 3453, 933, 1156, 3458, 948, 1171, 3461, 963}], 
           
           Line[{763, 3463, 979, 764, 3466, 993, 785, 3471, 1008, 800, 3478, 
            1023, 815, 3487, 1038, 830, 3498, 1053, 845, 3511, 1068, 860, 
            3527, 1083, 3414, 875, 3536, 1098, 890, 3540, 1113, 905, 3546, 
            1128, 920, 3554, 1143, 935, 3564, 1158, 950, 3575, 1173, 965}], 
           
           Line[{765, 980, 3366, 766, 3467, 994, 786, 3472, 1009, 801, 3479, 
            1024, 816, 3488, 1039, 831, 3499, 1054, 846, 3512, 1069, 861, 
            3528, 1084, 3415, 876, 1099, 3427, 891, 3541, 1114, 906, 3547, 
            1129, 921, 3555, 1144, 936, 3565, 1159, 951, 3576, 1174, 966}], 
           
           Line[{767, 981, 3367, 768, 995, 3377, 787, 3473, 1010, 802, 3480, 
            1025, 817, 3489, 1040, 832, 3500, 1055, 847, 3513, 1070, 862, 
            3529, 1085, 3416, 877, 1100, 3428, 892, 1115, 3438, 907, 3548, 
            1130, 922, 3556, 1145, 937, 3566, 1160, 952, 3577, 1175, 967}], 
           
           Line[{769, 982, 3368, 770, 996, 3378, 788, 1011, 3387, 803, 3481, 
            1026, 818, 3490, 1041, 833, 3501, 1056, 848, 3514, 1071, 863, 
            3530, 1086, 3417, 878, 1101, 3429, 893, 1116, 3439, 908, 1131, 
            3447, 923, 3557, 1146, 938, 3567, 1161, 953, 3578, 1176, 968}], 
           
           Line[{771, 983, 3369, 772, 997, 3379, 789, 1012, 3388, 804, 1027, 
            3395, 819, 3491, 1042, 834, 3502, 1057, 849, 3515, 1072, 864, 
            3531, 1087, 3418, 879, 1102, 3430, 894, 1117, 3440, 909, 1132, 
            3448, 924, 1147, 3454, 939, 3568, 1162, 954, 3579, 1177, 969}], 
           Line[{773, 984, 3370, 774, 998, 3380, 790, 1013, 3389, 805, 1028, 
            3396, 820, 1043, 3401, 835, 3503, 1058, 850, 3516, 1073, 865, 
            3532, 1088, 3419, 880, 1103, 3431, 895, 1118, 3441, 910, 1133, 
            3449, 925, 1148, 3455, 940, 1163, 3459, 955, 3580, 1178, 970}], 
           
           Line[{775, 1180, 1181, 776, 999, 3381, 791, 1014, 3390, 806, 1029, 
            3397, 821, 1044, 3402, 836, 1059, 3405, 851, 3517, 1074, 866, 
            3533, 1089, 3420, 881, 1104, 3432, 896, 1119, 3442, 911, 1134, 
            3450, 926, 1149, 3456, 941, 1164, 3460, 956, 1183, 3582, 1184, 
            1185}], 
           
           Line[{957, 1165, 3581, 1182, 942, 1150, 3558, 927, 1135, 3549, 912,
             1120, 3542, 897, 1105, 3537, 882, 1090, 3534, 867, 3407, 1075, 
            3518, 852, 1060, 3504, 837, 1045, 3492, 822, 1030, 3482, 807, 
            1015, 3474, 792, 1000, 3468, 777, 985, 3464, 748, 3359, 971, 1179,
             1186}], 
           
           Line[{964, 1172, 3574, 949, 1157, 3563, 934, 1142, 3553, 919, 1127,
             3545, 904, 1112, 3539, 889, 1097, 3535, 874, 1082, 3526, 3525, 
            859, 1067, 3510, 844, 1052, 3497, 829, 1037, 3486, 814, 1022, 
            3477, 799, 1007, 3470, 784, 992, 3465, 762, 978, 3462, 760}], 
           
           Line[{1188, 1411, 3681, 1189, 1425, 1217, 3586, 1440, 1232, 3590, 
            1455, 1247, 3596, 1470, 1262, 3604, 1485, 1277, 3614, 1500, 1292, 
            3626, 1515, 3733, 1307, 1530, 3748, 1322, 3642, 1545, 1337, 3646, 
            1560, 1352, 3652, 1575, 1367, 3660, 1590, 1382, 3670, 1605, 
            1397}], 
           
           Line[{1190, 1412, 3682, 1191, 1426, 3693, 1218, 1441, 1233, 3591, 
            1456, 1248, 3597, 1471, 1263, 3605, 1486, 1278, 3615, 1501, 1293, 
            3627, 1516, 3734, 1308, 1531, 3749, 1323, 1546, 3761, 1338, 3647, 
            1561, 1353, 3653, 1576, 1368, 3661, 1591, 1383, 3671, 1606, 
            1398}], 
           
           Line[{1192, 1413, 3683, 1193, 1427, 3694, 1219, 1442, 3704, 1234, 
            1457, 1249, 3598, 1472, 1264, 3606, 1487, 1279, 3616, 1502, 1294, 
            3628, 1517, 3735, 1309, 1532, 3750, 1324, 1547, 3762, 1339, 1562, 
            3772, 1354, 3654, 1577, 1369, 3662, 1592, 1384, 3672, 1607, 
            1399}], 
           
           Line[{1194, 1414, 3684, 1195, 1428, 3695, 1220, 1443, 3705, 1235, 
            1458, 3713, 1250, 1473, 3720, 1265, 3607, 1488, 1280, 3617, 1503, 
            1295, 3629, 1518, 3736, 1310, 1533, 3751, 1325, 1548, 3763, 1340, 
            1563, 3773, 1355, 1578, 3781, 1370, 3663, 1593, 1385, 3673, 1608, 
            1400}], 
           
           Line[{1196, 1415, 3685, 1197, 1429, 3696, 1221, 1444, 3706, 1236, 
            1459, 3714, 1251, 1474, 3721, 1266, 1489, 3726, 1281, 3618, 1504, 
            1296, 3630, 1519, 3737, 1311, 1534, 3752, 1326, 1549, 3764, 1341, 
            1564, 3774, 1356, 1579, 3782, 1371, 1594, 3788, 1386, 3674, 1609, 
            1401}], 
           
           Line[{1198, 1416, 3686, 1199, 1430, 3697, 1222, 1445, 3707, 1237, 
            1460, 3715, 1252, 1475, 3722, 1267, 1490, 3727, 1282, 1505, 3730, 
            1297, 3631, 1520, 3738, 1312, 1535, 3753, 1327, 1550, 3765, 1342, 
            1565, 3775, 1357, 1580, 3783, 1372, 1595, 3789, 1387, 1610, 3793, 
            1402}], 
           
           Line[{1200, 1417, 3687, 1202, 1431, 3698, 1223, 1446, 3708, 1238, 
            1461, 3716, 1253, 1476, 3723, 1268, 1491, 3728, 1283, 1506, 3731, 
            1298, 1521, 3739, 3740, 1313, 1536, 3754, 1328, 1551, 3766, 1343, 
            1566, 3776, 1358, 1581, 3784, 1373, 1596, 3790, 1388, 1611, 3794, 
            1403}], 
           
           Line[{1204, 1419, 3688, 1205, 1433, 1225, 3588, 1448, 1240, 3593, 
            1463, 1255, 3600, 1478, 1270, 3609, 1493, 1285, 3620, 1508, 1300, 
            3633, 1523, 3742, 1315, 1538, 3755, 1330, 3644, 1553, 1345, 3649, 
            1568, 1360, 3656, 1583, 1375, 3665, 1598, 1390, 3676, 1613, 
            1405}], 
           
           Line[{1206, 1420, 3689, 1207, 1434, 3699, 1226, 1449, 1241, 3594, 
            1464, 1256, 3601, 1479, 1271, 3610, 1494, 1286, 3621, 1509, 1301, 
            3634, 1524, 3743, 1316, 1539, 3756, 1331, 1554, 3767, 1346, 3650, 
            1569, 1361, 3657, 1584, 1376, 3666, 1599, 1391, 3677, 1614, 
            1406}], 
           
           Line[{1208, 1421, 3690, 1209, 1435, 3700, 1227, 1450, 3709, 1242, 
            1465, 1257, 3602, 1480, 1272, 3611, 1495, 1287, 3622, 1510, 1302, 
            3635, 1525, 3744, 1317, 1540, 3757, 1332, 1555, 3768, 1347, 1570, 
            3777, 1362, 3658, 1585, 1377, 3667, 1600, 1392, 3678, 1615, 
            1407}], 
           
           Line[{1210, 1422, 3691, 1211, 1436, 3701, 1228, 1451, 3710, 1243, 
            1466, 3717, 1258, 1481, 1273, 3612, 1496, 1288, 3623, 1511, 1303, 
            3636, 1526, 3745, 1318, 1541, 3758, 1333, 1556, 3769, 1348, 1571, 
            3778, 1363, 1586, 3785, 1378, 3668, 1601, 1393, 3679, 1616, 
            1408}], 
           
           Line[{1212, 1423, 3692, 1213, 1437, 3702, 1229, 1452, 3711, 1244, 
            1467, 3718, 1259, 1482, 3724, 1274, 1497, 1289, 3624, 1512, 1304, 
            3637, 1527, 3746, 1319, 1542, 3759, 1334, 1557, 3770, 1349, 1572, 
            3779, 1364, 1587, 3786, 1379, 1602, 3791, 1394, 3680, 1617, 
            1409}], 
           
           Line[{1214, 1619, 1620, 3796, 1215, 1438, 3703, 1230, 1453, 3712, 
            1245, 1468, 3719, 1260, 1483, 3725, 1275, 1498, 3729, 1290, 1513, 
            1305, 3638, 1528, 3747, 1320, 1543, 3760, 1335, 1558, 3771, 1350, 
            1573, 3780, 1365, 1588, 3787, 1380, 1603, 3792, 1395, 1622, 3795, 
            1623, 1624}], 
           
           Line[{1396, 1604, 3669, 1621, 1381, 1589, 3659, 1366, 1574, 3651, 
            1351, 1559, 3645, 1336, 1544, 3641, 1321, 1529, 3639, 1306, 3732, 
            1514, 3625, 1291, 1499, 3613, 1276, 1484, 3603, 1261, 1469, 3595, 
            1246, 1454, 3589, 1231, 1439, 3585, 1216, 1424, 3583, 1187, 1410, 
            1618, 1625}], 
           
           Line[{1404, 1612, 3675, 1389, 1597, 3664, 1374, 1582, 3655, 1359, 
            1567, 3648, 1344, 1552, 3643, 1329, 1537, 3640, 1314, 3741, 1522, 
            3632, 1299, 1507, 3619, 1284, 1492, 3608, 1269, 1477, 3599, 1254, 
            1462, 3592, 1239, 1447, 3587, 1224, 1432, 3584, 1203, 1418, 
            1201}], 
           
           Line[{1627, 1850, 3895, 1628, 1864, 1656, 3800, 1879, 1671, 3804, 
            1894, 1686, 3810, 1909, 1701, 3818, 1924, 1716, 3828, 1939, 1731, 
            3840, 1954, 3947, 1746, 1969, 3962, 1761, 3856, 1984, 1776, 3860, 
            1999, 1791, 3866, 2014, 1806, 3874, 2029, 1821, 3884, 2044, 
            1836}], 
           
           Line[{1629, 1851, 3896, 1630, 1865, 3907, 1657, 1880, 1672, 3805, 
            1895, 1687, 3811, 1910, 1702, 3819, 1925, 1717, 3829, 1940, 1732, 
            3841, 1955, 3948, 1747, 1970, 3963, 1762, 1985, 3975, 1777, 3861, 
            2000, 1792, 3867, 2015, 1807, 3875, 2030, 1822, 3885, 2045, 
            1837}], 
           
           Line[{1631, 1852, 3897, 1632, 1866, 3908, 1658, 1881, 3918, 1673, 
            1896, 1688, 3812, 1911, 1703, 3820, 1926, 1718, 3830, 1941, 1733, 
            3842, 1956, 3949, 1748, 1971, 3964, 1763, 1986, 3976, 1778, 2001, 
            3986, 1793, 3868, 2016, 1808, 3876, 2031, 1823, 3886, 2046, 
            1838}], 
           
           Line[{1633, 1853, 3898, 1634, 1867, 3909, 1659, 1882, 3919, 1674, 
            1897, 3927, 1689, 1912, 3934, 1704, 3821, 1927, 1719, 3831, 1942, 
            1734, 3843, 1957, 3950, 1749, 1972, 3965, 1764, 1987, 3977, 1779, 
            2002, 3987, 1794, 2017, 3995, 1809, 3877, 2032, 1824, 3887, 2047, 
            1839}], 
           
           Line[{1635, 1854, 3899, 1636, 1868, 3910, 1660, 1883, 3920, 1675, 
            1898, 3928, 1690, 1913, 3935, 1705, 1928, 3940, 1720, 3832, 1943, 
            1735, 3844, 1958, 3951, 1750, 1973, 3966, 1765, 1988, 3978, 1780, 
            2003, 3988, 1795, 2018, 3996, 1810, 2033, 4002, 1825, 3888, 2048, 
            1840}], 
           
           Line[{1637, 1855, 3900, 1638, 1869, 3911, 1661, 1884, 3921, 1676, 
            1899, 3929, 1691, 1914, 3936, 1706, 1929, 3941, 1721, 1944, 3944, 
            1736, 3845, 1959, 3952, 1751, 1974, 3967, 1766, 1989, 3979, 1781, 
            2004, 3989, 1796, 2019, 3997, 1811, 2034, 4003, 1826, 2049, 4007, 
            1841}], 
           
           Line[{1639, 1856, 3901, 1641, 1870, 3912, 1662, 1885, 3922, 1677, 
            1900, 3930, 1692, 1915, 3937, 1707, 1930, 3942, 1722, 1945, 3945, 
            1737, 1960, 3953, 3954, 1752, 1975, 3968, 1767, 1990, 3980, 1782, 
            2005, 3990, 1797, 2020, 3998, 1812, 2035, 4004, 1827, 2050, 4008, 
            1842}], 
           
           Line[{1643, 1858, 3902, 1644, 1872, 1664, 3802, 1887, 1679, 3807, 
            1902, 1694, 3814, 1917, 1709, 3823, 1932, 1724, 3834, 1947, 1739, 
            3847, 1962, 3956, 1754, 1977, 3969, 1769, 3858, 1992, 1784, 3863, 
            2007, 1799, 3870, 2022, 1814, 3879, 2037, 1829, 3890, 2052, 
            1844}], 
           
           Line[{1645, 1859, 3903, 1646, 1873, 3913, 1665, 1888, 1680, 3808, 
            1903, 1695, 3815, 1918, 1710, 3824, 1933, 1725, 3835, 1948, 1740, 
            3848, 1963, 3957, 1755, 1978, 3970, 1770, 1993, 3981, 1785, 3864, 
            2008, 1800, 3871, 2023, 1815, 3880, 2038, 1830, 3891, 2053, 
            1845}], 
           
           Line[{1647, 1860, 3904, 1648, 1874, 3914, 1666, 1889, 3923, 1681, 
            1904, 1696, 3816, 1919, 1711, 3825, 1934, 1726, 3836, 1949, 1741, 
            3849, 1964, 3958, 1756, 1979, 3971, 1771, 1994, 3982, 1786, 2009, 
            3991, 1801, 3872, 2024, 1816, 3881, 2039, 1831, 3892, 2054, 
            1846}], 
           
           Line[{1649, 1861, 3905, 1650, 1875, 3915, 1667, 1890, 3924, 1682, 
            1905, 3931, 1697, 1920, 1712, 3826, 1935, 1727, 3837, 1950, 1742, 
            3850, 1965, 3959, 1757, 1980, 3972, 1772, 1995, 3983, 1787, 2010, 
            3992, 1802, 2025, 3999, 1817, 3882, 2040, 1832, 3893, 2055, 
            1847}], 
           
           Line[{1651, 1862, 3906, 1652, 1876, 3916, 1668, 1891, 3925, 1683, 
            1906, 3932, 1698, 1921, 3938, 1713, 1936, 1728, 3838, 1951, 1743, 
            3851, 1966, 3960, 1758, 1981, 3973, 1773, 1996, 3984, 1788, 2011, 
            3993, 1803, 2026, 4000, 1818, 2041, 4005, 1833, 3894, 2056, 
            1848}], 
           
           Line[{1653, 2058, 2059, 4010, 1654, 1877, 3917, 1669, 1892, 3926, 
            1684, 1907, 3933, 1699, 1922, 3939, 1714, 1937, 3943, 1729, 1952, 
            1744, 3852, 1967, 3961, 1759, 1982, 3974, 1774, 1997, 3985, 1789, 
            2012, 3994, 1804, 2027, 4001, 1819, 2042, 4006, 1834, 2061, 4009, 
            2062, 2063}], 
           
           Line[{1835, 2043, 3883, 2060, 1820, 2028, 3873, 1805, 2013, 3865, 
            1790, 1998, 3859, 1775, 1983, 3855, 1760, 1968, 3853, 1745, 3946, 
            1953, 3839, 1730, 1938, 3827, 1715, 1923, 3817, 1700, 1908, 3809, 
            1685, 1893, 3803, 1670, 1878, 3799, 1655, 1863, 3797, 1626, 1849, 
            2057, 2064}], 
           
           Line[{1843, 2051, 3889, 1828, 2036, 3878, 1813, 2021, 3869, 1798, 
            2006, 3862, 1783, 1991, 3857, 1768, 1976, 3854, 1753, 3955, 1961, 
            3846, 1738, 1946, 3833, 1723, 1931, 3822, 1708, 1916, 3813, 1693, 
            1901, 3806, 1678, 1886, 3801, 1663, 1871, 3798, 1642, 1857, 
            1640}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1: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
59EYe9KFhqSq6+gF0hgfNJ/hlo5ywVLZMbtlCxVRH1Iu9aWOwfHO8fOfK7hg
7adnNbaSgsJm5Cop02NQu381OTiJCz9EUn/Z6mTke4j+tdObBXt8nj4bOcSF
8PTl9Dp9Enq45dSHtnKsJ7ffMZAw4sL75WvHE4s70XYK6XYiloN953oPXsb0
H88rPHdBnoh2jtPv+Bmz4edTC32lKUyfiph7+lkE5D29a8+7/9ggszthNHyQ
A5f91LZ6G7QjdCm7NTefDb3v3D8b4jhgTSTlMLl4VObw224O63Whurb7N37g
gOQr6Re9H3BIrNGqvyl+GDzK1LWngngwf0Xw+LxfL9KYSmmuMWWAmU795/sq
POD1Le1a/Y+ODmn0nJ1WYsJIFo+NI4zDHRXTv7ved6MHLt9G2WQm6FRd9YDU
cUg7v4Ox6QIN7XFxMBGdHYVDTOPw/Q7joL//55yFNxXd8FimorNkDJjr4iP6
l4xD4OmOw3b2FJS54ldx6PUxeON9nphL44LHTauPZfZkdMb/A1sZ0/nWdLI4
8RkXIjXfS2Z5k1DAks+DwRif3UOlQ46c4cJvRzZDONmJDm7geeu/ZEGtJy9T
7gAXSj/GEe56E1Fdxc5HK76xQMVMzs5EnwvXfytO8noIKO2qCUrexsZ4kdR4
A+PP6W8dbdST7SjrKjW5JIwNSnbdaxomOZBgN31076Y2ZH9NZ92tbDYcLBhQ
vYbprz3g88P/Gw69yny0V+MzGx4dS1iRhufAmrQuaceuVtQZYT+RWDUMebPc
lVn3eLD400zOHa0epFJDOnPQhQEbn03c1HbgQXx1op7jYDfS13bcnqzFhDnW
peqWX+MQEZSS+uQ5DY2ULyyrHWSCg2VibV7lOPyOqLW/f4WK7DJT3Iwuj8LJ
E1v4+6LHoc0tRBwXS0EhG8t6+uXHwGp0e6G5wTjQ/t0aZseQUevMj9OemM61
x/KEF2e4YBgko+qfRELb+a3rfmB8Xv91fn5pM8bhr06mi2y7kJGaGevzQRbQ
H5z+Hx1vHo3V+4WNGzJEyZAhSVKmyBAyxU1mzVFkrlChKElIGiREaVJEpSii
kiFzO+MzmJ7JPM+eEUVKye981+r9vWu9n9W/9zrrPPe59t7Xvva2XKaVjybB
4EWu3EBmC0r91rQ/4tUYZPALitgETgL+O32lhXwz6rvCqChijAHT99GLE5he
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
I04pSY6IfhusbeOKYTla8S79+NohEMtI6xdcSUD+ua3eV8MGQePcpYfufSwY
znuzyx3bGMwMy/dvJwYh7kSXRF4GC0JbqdnT23CoPNLjcyi2l8eEVt1aGsgC
C4sDHYHvWlGf+66S5Z/pUFj4dtk2axZ4rGeSToi2IHZHZlI9nw5PnHd1NWuw
QDX/W47psyak8vj5WRkspwgfUkj/uJYFkeIHhM6rNaK+hkgbTWcGWPQ7GThM
MWGLh31hKKsenVTr1N+I5UGdujvaX6hMUC6+d4T7vQ7Nr6zJKy5iwFXl8qqD
LUzoWH6htjauFqkE7f48akGBn7u/7a8yZYNnLNvoZFEHsl4xJmGuTIVm+x8h
i+eHIFJmmbxSKJZPafPverB8t+hWjWJw/hC4rDMmebsSkQHZdENzIA18Tqb5
sf2GYJHUrL7fGQLiUn8NiS7Hckfq8q/PNIdAKS09mI35iqXMGA91rJ67rEtD
X0yzIIgWJa7rgUObi0Jtn/8aBDmbLVtpdSzYwUbValKYTzj1dYeaJR1ktD46
WMazILDx2fstt1tQ1ESpY0sSHZyC3DXf+7AgYfdL3MWpJmR4TRrG2HRo+pH+
PsiEBW0Tb8YmXzSiZXNb7o+qMKD115fdGdswnZH5ITVq0IAKr0jJ8f8XXW8e
DeUb//9XtigVWQqVIqQilL2uCCXKmrWQihZS2VqoUEKJUlSKiizZspSSvLLO
jHV2+24GM2ZIEUn97j6f+Z7fOT7n/e995tz3dV3363pdr9e5n/N8HMPq4fFZ
Rs3yYdhTy9K+LIpHZho7Qxn3GHCef7j/xncmdCYWZ5JYdUju7uvI9+8Z4CPC
XxKP9WvqLSU6SzprkeLSXXdLwrpBt32rjNv1IWjRtcAPZA4iTXRkaiurF4zJ
r4dDCrC+/73StpSrA0jsgZ3Miz99ICKcivNuG4I5+883GQ79KHqxyfmH/f0w
6h+ZMfBrCNy2nP5iu7cP1dide+X+egCepFl7Bq1hgNMtcfudl3rQkXDcC1fT
Qaj7IWPorcmAa8Okr/m3ulDFdPiOIqMhIHcJu6i4M+DE76qX70Tb0UnlmmuT
r4bgz76iZbb+DDiqZxzgHd6KXPkSAxSw/b75uENMSiQDagsl22Ql6chtWHpb
/k5svmuXFjtjfXA3zb+5o5qKPD95/HqJ5dWqVRdzSnMYcC7m3upn9yjoe5GK
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
RTxq8fvRkaL70f8HZS/luw==
         "]], {
       DisplayFunction -> Identity, 
        Ticks -> {Automatic, Automatic, Automatic}, 
        FaceGrids -> {{{0, 0, -1}, {{0, 
             Rational[1, 10], 
             Rational[1, 5], 
             Rational[3, 10], 
             Rational[2, 5], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[3, 5], 
             Rational[7, 10], 
             Rational[4, 5], 
             Rational[9, 10], 1}}}, {{0, 1, 0}, {{0, 
             Rational[1, 10], 
             Rational[1, 5], 
             Rational[3, 10], 
             Rational[2, 5], 
             Rational[1, 2]}, {0, 
             Rational[1, 2], 1, 
             Rational[3, 2], 2, 
             Rational[5, 2], 3}}}, {{1, 0, 0}, {{
             Rational[1, 2], 
             Rational[3, 5], 
             Rational[7, 10], 
             Rational[4, 5], 
             Rational[9, 10], 1}, {0, 
             Rational[1, 2], 1, 
             Rational[3, 2], 2, 
             Rational[5, 2], 3}}}}, DisplayFunction -> Identity, Axes -> True,
         AxesLabel -> {
          Style["", 15, Bold, 
           RGBColor[1, 0, 0]], 
          Style["", 15, Bold, 
           RGBColor[1, 0, 0]], 
          Style["", 15, Bold, 
           RGBColor[1, 0, 0]]}, 
        AxesOrigin -> {Automatic, Automatic, Automatic}, Boxed -> False, 
        BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, 
        FaceGrids -> {{0, 0, -1}, {0, 1, 0}, {1, 0, 0}}, FaceGridsStyle -> 
        Automatic, ImageSize -> {473., Automatic}, 
        LabelStyle -> {FontSize -> 13.5, Bold}, 
        Method -> {"DefaultBoundaryStyle" -> Directive[
            GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
        PlotRange -> {{0., 0.5}, {0.6, 1.}, {0., 2.74999971607144}}, 
        PlotRangePadding -> {
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
        ViewPoint -> {-1.963961, -1.03555567, 0.70428}}], 
      Placed[
       Unevaluated[
        SwatchLegend[{
          Directive[Lighting -> Automatic, 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[Lighting -> Automatic, 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[Lighting -> Automatic, 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(c\)]\)", 
          "\!\(\*SubscriptBox[\(M\), \(c\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(c\)]\)"}, LegendMarkers -> Graphics3D[
           Sphere[{0, 0, 0}], ViewPoint -> {0, 0, 
             DirectedInfinity[1]}, 
           PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 0], 
         LabelStyle -> {FontSize -> 13.5, Bold}, LegendLayout -> "Column", 
         LegendMarkerSize -> 12]], {0.1, 0.1}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.957401633793045*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"ed24eb1a-7040-4ec8-8bac-022dc3b55780"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "4.245266535195725`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "4.061688311688312`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.927902734272805`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "3.829640947288006`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "3.757142857142857`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "3.7035953177257523`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "3.6641579000778`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "3.6353383458646613`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "3.6145825913780283`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "3.6`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "3.9155844155844157`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "3.477272727272727`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.1454849498327757`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.8928571428571432`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.7`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.5528846153846154`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "2.4411764705882355`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.3571428571428568`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "2.29491833030853`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "2.25`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.0200663853856864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.8513769654945165`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7263258691404864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.6329732864097677`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5630241177918776`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.5105955126680715`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.4714405458445614`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.4424453788758347`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.4212955871431885`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.40625`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(r\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(M\), \(r\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(L\), \(r\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.15"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Variable \[GothicCapitalB]\>\"", ",", "\"\<Function value\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Right Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Blue"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Middle Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Green"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Left Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Magenta"}], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.67", ",", "0.15"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9574016858470273`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"d99575a1-793e-4872-8335-54f7368abe28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1180073`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
           3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
           3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
           3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
           3.6145825913780283`}, {1., 3.6}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{0.1, 3.9155844155844157`}, {0.2, 3.477272727272727}, {0.3,
            3.1454849498327757`}, {0.4, 2.8928571428571432`}, {0.5, 2.7}, {
           0.6, 2.5528846153846154`}, {0.7, 2.4411764705882355`}, {0.8, 
           2.3571428571428568`}, {0.9, 2.29491833030853}, {1., 2.25}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{0, Small}], 
          LineBox[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {
           0.3, 1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
           1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
           1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
           1.4212955871431885`}, {1., 1.40625}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 4.245266535195725}}, {{0.2, 
           4.061688311688312}}, {{0.3, 3.927902734272805}}, {{0.4, 
           3.829640947288006}}, {{0.5, 3.757142857142857}}, {{0.6, 
           3.7035953177257523`}}, {{0.7, 3.6641579000778}}, {{0.8, 
           3.6353383458646613`}}, {{0.9, 3.6145825913780283`}}, {{1., 
           3.6}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 3.9155844155844157`}}, {{0.2,
            3.477272727272727}}, {{0.3, 3.1454849498327757`}}, {{0.4, 
           2.8928571428571432`}}, {{0.5, 2.7}}, {{0.6, 
           2.5528846153846154`}}, {{0.7, 2.4411764705882355`}}, {{0.8, 
           2.3571428571428568`}}, {{0.9, 2.29491833030853}}, {{1., 2.25}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{0, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 2.0200663853856864`}}, {{
           0.2, 1.8513769654945165`}}, {{0.3, 1.7263258691404864`}}, {{0.4, 
           1.6329732864097677`}}, {{0.5, 1.5630241177918776`}}, {{0.6, 
           1.5105955126680715`}}, {{0.7, 1.4714405458445614`}}, {{0.8, 
           1.4424453788758347`}}, {{0.9, 1.4212955871431885`}}, {{1., 
           1.40625}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(r\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(M\\), \\(r\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(r\\)]\\)\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {40, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.1, 0.15}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"Variable \[GothicCapitalB]\"", TraditionalForm], 
       FormBox["\"Function value\"", TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Right Term Value of Theorem 1.4 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], StripOnInput -> False]}, {
              StyleBox[
              "\"Middle Term Value of Theorem 1.4 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 1, 0], StripOnInput -> False]}, {
              StyleBox[
              "\"Left Term Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\
\[Chi]\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.67, 0.15}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 4.245266535195725}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
            3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
            3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
            3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
            3.6145825913780283`}, {1., 3.6}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 3.9155844155844157`}, {0.2, 3.477272727272727}, {0.3, 
            3.1454849498327757`}, {0.4, 2.8928571428571432`}, {0.5, 2.7}, {
            0.6, 2.5528846153846154`}, {0.7, 2.4411764705882355`}, {0.8, 
            2.3571428571428568`}, {0.9, 2.29491833030853}, {1., 2.25}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {0.3,
             1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
            1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
            1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
            1.4212955871431885`}, {1., 1.40625}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            4.245266535195725}}, {{0.2, 4.061688311688312}}, {{0.3, 
            3.927902734272805}}, {{0.4, 3.829640947288006}}, {{0.5, 
            3.757142857142857}}, {{0.6, 3.7035953177257523`}}, {{0.7, 
            3.6641579000778}}, {{0.8, 3.6353383458646613`}}, {{0.9, 
            3.6145825913780283`}}, {{1., 3.6}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            3.9155844155844157`}}, {{0.2, 3.477272727272727}}, {{0.3, 
            3.1454849498327757`}}, {{0.4, 2.8928571428571432`}}, {{0.5, 
            2.7}}, {{0.6, 2.5528846153846154`}}, {{0.7, 
            2.4411764705882355`}}, {{0.8, 2.3571428571428568`}}, {{0.9, 
            2.29491833030853}}, {{1., 2.25}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            2.0200663853856864`}}, {{0.2, 1.8513769654945165`}}, {{0.3, 
            1.7263258691404864`}}, {{0.4, 1.6329732864097677`}}, {{0.5, 
            1.5630241177918776`}}, {{0.6, 1.5105955126680715`}}, {{0.7, 
            1.4714405458445614`}}, {{0.8, 1.4424453788758347`}}, {{0.9, 
            1.4212955871431885`}}, {{1., 
            1.40625}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 4.245266535195725}}, PlotRangeClipping -> 
        True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, 
        AxesLabel -> {"Variable \[GothicCapitalB]", "Function value"}, 
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "Right Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\
\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\
\(n\), \(o\)]\)=1", 
              RGBColor[0, 0, 1]], 
             Style[
             "Middle Term Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[0, 1, 0]], 
             Style[
             "Left Term Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[1, 0, 1]]}], RoundingRadius -> 5], 
          Scaled[{0.67, 0.15}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0, 1.}, {0, 4.245266535195725}}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(r\)]\)", 
          "\!\(\*SubscriptBox[\(M\), \(r\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(r\)]\)"}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}}, 
         Joined -> {True, True, True}, LabelStyle -> {}, LegendLayout -> 
         "Column"]], {0.1, 0.15}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9574016937154455`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"0ffc16ad-4208-404c-bb17-e76a6f0fcc3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "2.3584814084420693`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "2.2564935064935066`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.1821681857071136`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.1275783040488925`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.0873015873015874`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "2.0575529542920847`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.035643277821`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "2.0196324143692563`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "2.0081014396544603`"}], "}"}]}], "}"}]}], ";", 
   "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.175324675324675`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.9318181818181817`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7474916387959865`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.6071428571428572`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.4182692307692308`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.3562091503267977`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.3095238095238093`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.2749546279491835`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.25`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.122259102992048`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.0285427586080647`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "0.9590699273002703`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.9072073813387599`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.8683467321065987`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.8392197292600396`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.8174669699136452`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8013585438199081`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.7896086595239935`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.78125`"}], "}"}]}], "}"}]}], ";", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(c\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(M\), \(c\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(L\), \(c\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.15"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Variable \[GothicCapitalB]\>\"", ",", "\"\<Function value\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Right Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Blue"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Middle Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Green"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Left Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Magenta"}], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.67", ",", "0.15"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9574017677617874`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"6b6416cc-adb9-4222-b66c-5728418331a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0780251`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.5}, {0.2, 2.3584814084420693`}, {0.3, 
           2.2564935064935066`}, {0.4, 2.1821681857071136`}, {0.5, 
           2.1275783040488925`}, {0.6, 2.0873015873015874`}, {0.7, 
           2.0575529542920847`}, {0.8, 2.035643277821}, {0.9, 
           2.0196324143692563`}, {1., 2.0081014396544603`}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{0.1, 2.175324675324675}, {0.2, 1.9318181818181817`}, {0.3,
            1.7474916387959865`}, {0.4, 1.6071428571428572`}, {0.5, 1.5}, {
           0.6, 1.4182692307692308`}, {0.7, 1.3562091503267977`}, {0.8, 
           1.3095238095238093`}, {0.9, 1.2749546279491835`}, {1., 1.25}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{0, Small}], 
          LineBox[{{0.1, 1.122259102992048}, {0.2, 1.0285427586080647`}, {0.3,
            0.9590699273002703}, {0.4, 0.9072073813387599}, {0.5, 
           0.8683467321065987}, {0.6, 0.8392197292600396}, {0.7, 
           0.8174669699136452}, {0.8, 0.8013585438199081}, {0.9, 
           0.7896086595239935}, {1., 0.78125}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.5}}, {{0.2, 
           2.3584814084420693`}}, {{0.3, 2.2564935064935066`}}, {{0.4, 
           2.1821681857071136`}}, {{0.5, 2.1275783040488925`}}, {{0.6, 
           2.0873015873015874`}}, {{0.7, 2.0575529542920847`}}, {{0.8, 
           2.035643277821}}, {{0.9, 2.0196324143692563`}}, {{1., 
           2.0081014396544603`}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.175324675324675}}, {{0.2, 
           1.9318181818181817`}}, {{0.3, 1.7474916387959865`}}, {{0.4, 
           1.6071428571428572`}}, {{0.5, 1.5}}, {{0.6, 
           1.4182692307692308`}}, {{0.7, 1.3562091503267977`}}, {{0.8, 
           1.3095238095238093`}}, {{0.9, 1.2749546279491835`}}, {{1., 
           1.25}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{0, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 1.122259102992048}}, {{0.2, 
           1.0285427586080647`}}, {{0.3, 0.9590699273002703}}, {{0.4, 
           0.9072073813387599}}, {{0.5, 0.8683467321065987}}, {{0.6, 
           0.8392197292600396}}, {{0.7, 0.8174669699136452}}, {{0.8, 
           0.8013585438199081}}, {{0.9, 0.7896086595239935}}, {{1., 
           0.78125}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(c\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(M\\), \\(c\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(c\\)]\\)\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {40, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.1, 0.15}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"Variable \[GothicCapitalB]\"", TraditionalForm], 
       FormBox["\"Function value\"", TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Right Term Value of Theorem 1.4 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], StripOnInput -> False]}, {
              StyleBox[
              "\"Middle Term Value of Theorem 1.4 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 1, 0], StripOnInput -> False]}, {
              StyleBox[
              "\"Left Term Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\
\[Chi]\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.67, 0.15}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 2.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.5}, {0.2, 2.3584814084420693`}, {0.3, 
            2.2564935064935066`}, {0.4, 2.1821681857071136`}, {0.5, 
            2.1275783040488925`}, {0.6, 2.0873015873015874`}, {0.7, 
            2.0575529542920847`}, {0.8, 2.035643277821}, {0.9, 
            2.0196324143692563`}, {1., 2.0081014396544603`}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.175324675324675}, {0.2, 1.9318181818181817`}, {0.3, 
            1.7474916387959865`}, {0.4, 1.6071428571428572`}, {0.5, 1.5}, {
            0.6, 1.4182692307692308`}, {0.7, 1.3562091503267977`}, {0.8, 
            1.3095238095238093`}, {0.9, 1.2749546279491835`}, {1., 1.25}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 1.122259102992048}, {0.2, 1.0285427586080647`}, {0.3, 
            0.9590699273002703}, {0.4, 0.9072073813387599}, {0.5, 
            0.8683467321065987}, {0.6, 0.8392197292600396}, {0.7, 
            0.8174669699136452}, {0.8, 0.8013585438199081}, {0.9, 
            0.7896086595239935}, {1., 0.78125}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.5}}, {{0.2, 2.3584814084420693`}}, {{0.3, 
            2.2564935064935066`}}, {{0.4, 2.1821681857071136`}}, {{0.5, 
            2.1275783040488925`}}, {{0.6, 2.0873015873015874`}}, {{0.7, 
            2.0575529542920847`}}, {{0.8, 2.035643277821}}, {{0.9, 
            2.0196324143692563`}}, {{1., 2.0081014396544603`}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.175324675324675}}, {{0.2, 1.9318181818181817`}}, {{0.3, 
            1.7474916387959865`}}, {{0.4, 1.6071428571428572`}}, {{0.5, 
            1.5}}, {{0.6, 1.4182692307692308`}}, {{0.7, 
            1.3562091503267977`}}, {{0.8, 1.3095238095238093`}}, {{0.9, 
            1.2749546279491835`}}, {{1., 1.25}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            1.122259102992048}}, {{0.2, 1.0285427586080647`}}, {{0.3, 
            0.9590699273002703}}, {{0.4, 0.9072073813387599}}, {{0.5, 
            0.8683467321065987}}, {{0.6, 0.8392197292600396}}, {{0.7, 
            0.8174669699136452}}, {{0.8, 0.8013585438199081}}, {{0.9, 
            0.7896086595239935}}, {{1., 0.78125}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 2.5}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, 
        AxesLabel -> {"Variable \[GothicCapitalB]", "Function value"}, 
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "Right Term Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\
\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\
\(n\), \(o\)]\)=1", 
              RGBColor[0, 0, 1]], 
             Style[
             "Middle Term Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[0, 1, 0]], 
             Style[
             "Left Term Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[1, 0, 1]]}], RoundingRadius -> 5], 
          Scaled[{0.67, 0.15}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 2.5}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(c\)]\)", 
          "\!\(\*SubscriptBox[\(M\), \(c\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(c\)]\)"}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}}, 
         Joined -> {True, True, True}, LabelStyle -> {}, LegendLayout -> 
         "Column"]], {0.1, 0.15}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9574017704997363`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"5517eee0-a92e-436f-bda6-018ff13832a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "2.3584814084420693`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "2.2564935064935066`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.1821681857071136`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.1275783040488925`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.0873015873015874`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "2.0575529542920847`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.035643277821`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "2.0196324143692563`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "2.0081014396544603`"}], "}"}]}], "}"}]}], ";", 
   "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.122259102992048`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.0285427586080647`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "0.9590699273002703`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.9072073813387599`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.8683467321065987`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.8392197292600396`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.8174669699136452`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8013585438199081`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.7896086595239935`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.78125`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "2.5"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"data4", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.25`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.125`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3", ",", " ", "data4"}], "}"}],
      ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(s\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(L\), \(s\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(R\), \(c\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(L\), \(c\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Variable \[GothicCapitalB]\>\"", ",", "\"\<Function value\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.9574018248657556`*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"c6e45158-d60b-43ec-bafe-5b411eff076c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0640024`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.5}, {0.2, 2.3584814084420693`}, {0.3, 
           2.2564935064935066`}, {0.4, 2.1821681857071136`}, {0.5, 
           2.1275783040488925`}, {0.6, 2.0873015873015874`}, {0.7, 
           2.0575529542920847`}, {0.8, 2.035643277821}, {0.9, 
           2.0196324143692563`}, {1., 2.0081014396544603`}}]}, 
         {GrayLevel[0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 1.122259102992048}, {0.2, 1.0285427586080647`}, {0.3,
            0.9590699273002703}, {0.4, 0.9072073813387599}, {0.5, 
           0.8683467321065987}, {0.6, 0.8392197292600396}, {0.7, 
           0.8174669699136452}, {0.8, 0.8013585438199081}, {0.9, 
           0.7896086595239935}, {1., 0.78125}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{0.1, 2.5}, {0.2, 2.5}, {0.3, 2.5}, {0.4, 2.5}, {0.5, 
           2.5}, {0.6, 2.5}, {0.7, 2.5}, {0.8, 2.5}, {0.9, 2.5}, {1., 2.5}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{0, Small}], 
          LineBox[{{0.1, 1.25}, {0.2, 1.125}, {0.3, 1.125}, {0.4, 1.125}, {
           0.5, 1.125}, {0.6, 1.125}, {0.7, 1.125}, {0.8, 1.125}, {0.9, 
           1.125}, {1., 1.125}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.5}}, {{0.2, 
           2.3584814084420693`}}, {{0.3, 2.2564935064935066`}}, {{0.4, 
           2.1821681857071136`}}, {{0.5, 2.1275783040488925`}}, {{0.6, 
           2.0873015873015874`}}, {{0.7, 2.0575529542920847`}}, {{0.8, 
           2.035643277821}}, {{0.9, 2.0196324143692563`}}, {{1., 
           2.0081014396544603`}}}]}, 
         {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 1.122259102992048}}, {{0.2, 
           1.0285427586080647`}}, {{0.3, 0.9590699273002703}}, {{0.4, 
           0.9072073813387599}}, {{0.5, 0.8683467321065987}}, {{0.6, 
           0.8392197292600396}}, {{0.7, 0.8174669699136452}}, {{0.8, 
           0.8013585438199081}}, {{0.9, 0.7896086595239935}}, {{1., 
           0.78125}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 2.5}}, {{0.2, 2.5}}, {{0.3, 
           2.5}}, {{0.4, 2.5}}, {{0.5, 2.5}}, {{0.6, 2.5}}, {{0.7, 2.5}}, {{
           0.8, 2.5}}, {{0.9, 2.5}}, {{1., 2.5}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{0, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledUpTriangle]\"\>",
             StripOnInput->False,
             FontSize->10.24], {0., 0.}], {{{0.1, 1.25}}, {{0.2, 1.125}}, {{
           0.3, 1.125}}, {{0.4, 1.125}}, {{0.5, 1.125}}, {{0.6, 1.125}}, {{
           0.7, 1.125}}, {{0.8, 1.125}}, {{0.9, 1.125}}, {{1., 
           1.125}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(s\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(s\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(c\\)]\\)\"",
         "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(c\\)]\\)\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {40, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.24}, {40, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], FontSize -> 10.24, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], 
                    "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.8}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"Variable \[GothicCapitalB]\"", TraditionalForm], 
       FormBox["\"Function value\"", TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 2.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.5}, {0.2, 2.3584814084420693`}, {0.3, 
            2.2564935064935066`}, {0.4, 2.1821681857071136`}, {0.5, 
            2.1275783040488925`}, {0.6, 2.0873015873015874`}, {0.7, 
            2.0575529542920847`}, {0.8, 2.035643277821}, {0.9, 
            2.0196324143692563`}, {1., 2.0081014396544603`}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large]], 
           
           Line[{{0.1, 1.122259102992048}, {0.2, 1.0285427586080647`}, {0.3, 
            0.9590699273002703}, {0.4, 0.9072073813387599}, {0.5, 
            0.8683467321065987}, {0.6, 0.8392197292600396}, {0.7, 
            0.8174669699136452}, {0.8, 0.8013585438199081}, {0.9, 
            0.7896086595239935}, {1., 0.78125}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.5}, {0.2, 2.5}, {0.3, 2.5}, {0.4, 2.5}, {0.5, 2.5}, {
            0.6, 2.5}, {0.7, 2.5}, {0.8, 2.5}, {0.9, 2.5}, {1., 2.5}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 1.25}, {0.2, 1.125}, {0.3, 1.125}, {0.4, 1.125}, {0.5, 
            1.125}, {0.6, 1.125}, {0.7, 1.125}, {0.8, 1.125}, {0.9, 1.125}, {
            1., 1.125}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.5}}, {{0.2, 2.3584814084420693`}}, {{0.3, 
            2.2564935064935066`}}, {{0.4, 2.1821681857071136`}}, {{0.5, 
            2.1275783040488925`}}, {{0.6, 2.0873015873015874`}}, {{0.7, 
            2.0575529542920847`}}, {{0.8, 2.035643277821}}, {{0.9, 
            2.0196324143692563`}}, {{1., 2.0081014396544603`}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            1.122259102992048}}, {{0.2, 1.0285427586080647`}}, {{0.3, 
            0.9590699273002703}}, {{0.4, 0.9072073813387599}}, {{0.5, 
            0.8683467321065987}}, {{0.6, 0.8392197292600396}}, {{0.7, 
            0.8174669699136452}}, {{0.8, 0.8013585438199081}}, {{0.9, 
            0.7896086595239935}}, {{1., 0.78125}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            2.5}}, {{0.2, 2.5}}, {{0.3, 2.5}}, {{0.4, 2.5}}, {{0.5, 2.5}}, {{
            0.6, 2.5}}, {{0.7, 2.5}}, {{0.8, 2.5}}, {{0.9, 2.5}}, {{1., 
            2.5}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledUpTriangle]", FontSize -> 10.24], {0., 0.}], {{{
            0.1, 1.25}}, {{0.2, 1.125}}, {{0.3, 1.125}}, {{0.4, 1.125}}, {{
            0.5, 1.125}}, {{0.6, 1.125}}, {{0.7, 1.125}}, {{0.8, 1.125}}, {{
            0.9, 1.125}}, {{1., 1.125}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 2.5}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, 
        AxesLabel -> {"Variable \[GothicCapitalB]", "Function value"}, 
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 2.5}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "\!\(\*SubscriptBox[\(R\), \(s\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(s\)]\)", 
          "\!\(\*SubscriptBox[\(R\), \(c\)]\)", 
          "\!\(\*SubscriptBox[\(L\), \(c\)]\)"}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}, {
           "\[FilledUpTriangle]", 10.24}}, Joined -> {True, True, True, True},
          LabelStyle -> {}, LegendLayout -> "Column"]], {0.9, 0.8}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.957401829158883*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"025b7a67-a88f-4ee3-8907-3925e0b2fe05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "4.245266535195725`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "4.061688311688312`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.927902734272805`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "3.829640947288006`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "3.757142857142857`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "3.7035953177257523`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "3.6641579000778`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "3.6353383458646613`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "3.6145825913780283`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "3.6`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.0200663853856864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.8513769654945165`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7263258691404864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.6329732864097677`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5630241177918776`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.5105955126680715`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.4714405458445614`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.4424453788758347`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.4212955871431885`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.40625`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", 
        FractionBox["9", "2"]}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data4", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.125`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3", ",", " ", "data4"}], "}"}],
      ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<R-\!\(\*SubscriptBox[\(r\), \(s\)]\)\>\"", ",", 
          "\"\<L-\!\(\*SubscriptBox[\(r\), \(s\)]\)\>\"", ",", 
          "\"\<R-\!\(\*SubscriptBox[\(r\), \(c\)]\)\>\"", ",", 
          "\"\<L-\!\(\*SubscriptBox[\(r\), \(c\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Variable \[GothicCapitalB]\>\"", ",", "\"\<Function value\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.95740190610905*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"f048df06-ba78-4750-883e-328a773e92aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0893746`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
           3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
           3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
           3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
           3.6145825913780283`}, {1., 3.6}}]}, 
         {GrayLevel[0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {
           0.3, 1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
           1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
           1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
           1.4212955871431885`}, {1., 1.40625}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{0.1, 4.5}, {0.2, 4.5}, {0.3, 4.5}, {0.4, 4.5}, {0.5, 
           4.5}, {0.6, 4.5}, {0.7, 4.5}, {0.8, 4.5}, {0.9, 4.5}, {1., 4.5}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          Dashing[{0, Small}], 
          LineBox[{{0.1, 1.125}, {0.2, 1.125}, {0.3, 1.125}, {0.4, 1.125}, {
           0.5, 1.125}, {0.6, 1.125}, {0.7, 1.125}, {0.8, 1.125}, {0.9, 
           1.125}, {1., 1.125}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 4.245266535195725}}, {{0.2, 
           4.061688311688312}}, {{0.3, 3.927902734272805}}, {{0.4, 
           3.829640947288006}}, {{0.5, 3.757142857142857}}, {{0.6, 
           3.7035953177257523`}}, {{0.7, 3.6641579000778}}, {{0.8, 
           3.6353383458646613`}}, {{0.9, 3.6145825913780283`}}, {{1., 
           3.6}}}]}, 
         {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.0200663853856864`}}, {{0.2,
            1.8513769654945165`}}, {{0.3, 1.7263258691404864`}}, {{0.4, 
           1.6329732864097677`}}, {{0.5, 1.5630241177918776`}}, {{0.6, 
           1.5105955126680715`}}, {{0.7, 1.4714405458445614`}}, {{0.8, 
           1.4424453788758347`}}, {{0.9, 1.4212955871431885`}}, {{1., 
           1.40625}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 4.5}}, {{0.2, 4.5}}, {{0.3, 
           4.5}}, {{0.4, 4.5}}, {{0.5, 4.5}}, {{0.6, 4.5}}, {{0.7, 4.5}}, {{
           0.8, 4.5}}, {{0.9, 4.5}}, {{1., 4.5}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          Dashing[{0, Small}], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledUpTriangle]\"\>",
             StripOnInput->False,
             FontSize->10.24], {0., 0.}], {{{0.1, 1.125}}, {{0.2, 1.125}}, {{
           0.3, 1.125}}, {{0.4, 1.125}}, {{0.5, 1.125}}, {{0.6, 1.125}}, {{
           0.7, 1.125}}, {{0.8, 1.125}}, {{0.9, 1.125}}, {{1., 
           1.125}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{
        "\"R-\\!\\(\\*SubscriptBox[\\(r\\), \\(s\\)]\\)\"",
         "\"L-\\!\\(\\*SubscriptBox[\\(r\\), \\(s\\)]\\)\"",
         "\"R-\\!\\(\\*SubscriptBox[\\(r\\), \\(c\\)]\\)\"",
         "\"L-\\!\\(\\*SubscriptBox[\\(r\\), \\(c\\)]\\)\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {40, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {40, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.24}, {40, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 40], 0.175]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 40]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], FontSize -> 10.24, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], 
                    "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.6}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"Variable \[GothicCapitalB]\"", TraditionalForm], 
       FormBox["\"Function value\"", TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 4.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
            3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
            3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
            3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
            3.6145825913780283`}, {1., 3.6}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {0.3,
             1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
            1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
            1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
            1.4212955871431885`}, {1., 1.40625}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.5}, {0.2, 4.5}, {0.3, 4.5}, {0.4, 4.5}, {0.5, 4.5}, {
            0.6, 4.5}, {0.7, 4.5}, {0.8, 4.5}, {0.9, 4.5}, {1., 4.5}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large]], 
           
           Line[{{0.1, 1.125}, {0.2, 1.125}, {0.3, 1.125}, {0.4, 1.125}, {0.5,
             1.125}, {0.6, 1.125}, {0.7, 1.125}, {0.8, 1.125}, {0.9, 1.125}, {
            1., 1.125}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            4.245266535195725}}, {{0.2, 4.061688311688312}}, {{0.3, 
            3.927902734272805}}, {{0.4, 3.829640947288006}}, {{0.5, 
            3.757142857142857}}, {{0.6, 3.7035953177257523`}}, {{0.7, 
            3.6641579000778}}, {{0.8, 3.6353383458646613`}}, {{0.9, 
            3.6145825913780283`}}, {{1., 3.6}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.0200663853856864`}}, {{0.2, 1.8513769654945165`}}, {{0.3, 
            1.7263258691404864`}}, {{0.4, 1.6329732864097677`}}, {{0.5, 
            1.5630241177918776`}}, {{0.6, 1.5105955126680715`}}, {{0.7, 
            1.4714405458445614`}}, {{0.8, 1.4424453788758347`}}, {{0.9, 
            1.4212955871431885`}}, {{1., 1.40625}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Dashing[{Small, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            4.5}}, {{0.2, 4.5}}, {{0.3, 4.5}}, {{0.4, 4.5}}, {{0.5, 4.5}}, {{
            0.6, 4.5}}, {{0.7, 4.5}}, {{0.8, 4.5}}, {{0.9, 4.5}}, {{1., 
            4.5}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledUpTriangle]", FontSize -> 10.24], {0., 0.}], {{{
            0.1, 1.125}}, {{0.2, 1.125}}, {{0.3, 1.125}}, {{0.4, 1.125}}, {{
            0.5, 1.125}}, {{0.6, 1.125}}, {{0.7, 1.125}}, {{0.8, 1.125}}, {{
            0.9, 1.125}}, {{1., 1.125}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 4.5}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, 
        AxesLabel -> {"Variable \[GothicCapitalB]", "Function value"}, 
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 4.5}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Dashing[{0, Small}], 
           Thickness[Large]]}, {
         "R-\!\(\*SubscriptBox[\(r\), \(s\)]\)", 
          "L-\!\(\*SubscriptBox[\(r\), \(s\)]\)", 
          "R-\!\(\*SubscriptBox[\(r\), \(c\)]\)", 
          "L-\!\(\*SubscriptBox[\(r\), \(c\)]\)"}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}, {
           "\[FilledUpTriangle]", 10.24}}, Joined -> {True, True, True, True},
          LabelStyle -> {}, LegendLayout -> "Column"]], {0.9, 0.6}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.957401910126111*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"9114d975-44dd-4225-9938-4b10bf052d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"9", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"9", "-", 
                RowBox[{"9", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"9", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"9", "-", 
                RowBox[{"9", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", "9", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], "3"], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", "9", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], "3"], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<RHS via Riemann\[Dash]Liouville\>\"", ",", 
         "\"\<LHS via Riemann\[Dash]Liouville\>\""}], " ", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<Integral Value\>\""}], "}"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{3.9574019709066067`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"9ed48324-025c-4acf-b71b-962a5bd31fa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.7724938`", ",", 
   TagBox[
    GraphicsBox[{{{{}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVj3tUjHkcxhO5pJuOXcu+U+9PWkTHdpHd0PfbhVMhpNNJ7kTtRo0uzCbh
lKIal4Rac1To2C42rctuMzut7sWMZtJ0GaNm1DRjprxjmQqlbf94znM+f32e
h+yPDT5oamJismky//fix8na/Pwq2GRnb5HQTXBNZeXr+2VVcO/PgqTtkxxc
PqBoElbBWlOO1muSk29tkRpVVdC/0qF21iS3XVjE3+rEhzELyyMFXQRTIkVZ
swR8cEvi3HzaSVD2DbXiF4UAElIcwukOgqknBIlh9tWg96zLbG4juOChjrsm
tQZc9E//iX9GcCxOkuAhroO1C32Ex+oJsryiaytnN8K5wPasWCFBLS+e6klq
hk8uHfcvPyK4tj7EPOHJU6hsW99qvDe5/9TtaQIPMZzOaPprXzHBpPV3D6YW
tcKuQw1lV3kEid77Xvg7CahJuO3UXILysQHnjU5tYNt6ne+fSbArjsOJC3oB
7IAe64bTBI0xEce6D7cDZfJD2tTjBDXuGZ/ybstgifxKyWA0Qbs91/y5DR0w
YJWa9dU+gk7bFJR8ohN0H31zG0MIhoqT70S6d0OJbt5Uyp9gU9ms4aUhcojX
yMzrVhO0DBGL/bJfgki5sbrBmWDe3pOxuRUK6OKde7SIJjjqEXF9jf4VeDxY
ZxDaEDx+pTjOkfRC2mtBxajJpL/0TRYhShjIXu5Z/o7GaOZGkUKohMPvdRNs
JY3yQ36U6xYVPOZnF1e30rid/Gq426sCUebqFnE1jbU4e2bgidcg9Q6TNpfR
GJQTl5Zu0QdhDcZVsfk01vsbfZmSPhBxZYX9aTQG+jju4vj1w5EzvxXMYdP4
75ENL2+098Nlz6tq6500nv2SzdOz1dAzxczy73U0etbU18pMB2B4PHlF0Pc0
TjSW+CgvD4C8Ybt7zQIaK1xKzeY5a4A/ulpbb0rjmeeFzlqhBtgVtoFlnfbo
JfkjTx2uhRhHs6tP7tgja5og6uSQFm5WDed/m2CPFifYOStPvoHcDHFPpK89
qkO9J+bP18G199GhHEt7VEXMlOaV6qA31Uix5HbY1KlT+/rr4fCzCMneIjsU
cpNCrPv04DOHPZcXZYeyRJMlifGDEJQ44sh3tcOu2iKvGTZDsHupn3nwCAvH
vX/ku90agv2OU5TD1Sx0nZZy8bTLWxjpk5/VpLMweFnP3Y+it6BoMZnvHsDC
3DR3R8vdDNzMX/6dzIqFH5BjyN3LQHGfQ+tzSxZuGxcIqAMMpC3e8VOzBQtt
j/kGL49iwPP8laMCcxZejAw+tSGOASu3o9LC6SzMDGR3n09noPGchTTqC4Vn
bMq50ysYIJecVUNDFCpFTNiFSgbClhofqwcpxPNui75+yEDGvo0pr/QUfpki
4DtWMbCw/IFK9IbC5PctGr86BiT91z6XqinkdGi8UzsZuHPjQErEKwq7cpZZ
zpYz4PR5a8wOBYWrNsd25SgYCBkb2Rz8ksLhpuGYWyoGDNoELXRTGF9lxqvR
M1B6nROzQEZhW2JAZMBbBtpW/Dxo006hqyvXVWpgIP344p0zXlBoKJ3bojQy
8Lud9ZwPEgq3RIblRo0yYJ3qFaprpbDCgbfH8Gnyb6EvV/mcQitlrxNnnIEC
4filDjGFMTyH4YkJBtpnSCQiEYX/ATvzXHY=
           "]]},
         Annotation[#, "Charting`Private`Tag$324053#1"]& ], 
        TagBox[
         {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV0Gs01AkYBvBJdEPxN25jTGNLK+WaS1uz3tfl7BGbW5Js94RNac6Uy2a6
WLaNjCKHUdpFLRtJqtM2M9l2sEOtKSliGjWTywxT/afVCNGs/fCc5/w+Pec8
DnsORe0zoFAoG2fzf395h6suKxPAx8roHfw0JrIaG1/fqBMAY8nYzdJUJkZd
G5a3NQnAsPfNstIjTORWRTzRKQVQmDEYV8JhYlfBcmGksxCkyix6SQoTjyd2
nFkoEkJ//D7NhQQmdtvQ3X6Qi8B1c9yvghgmZmeKUmOX/gnCNsqlEF8m0m6P
8ljZYmhP9G71GlmK05zOIz7SFlixLU/nwV6K9n7JzY3GEhBam9wXTzNQXX6Y
/vJoO9DVVQH6Hxn4dWv0oiN/PQSfl2aRWVQGsk5cNhT5SCFBciXavMIej35T
sy+78jFMD225N+Vujw4a//q4953wi/tk2hcddJRND7t869wF7Szfulu76djL
ycjghD2FlMWaik8UOupS4tP6DjyDPX3mW3hX7FDl9fMU/3I3jLKk9j0BdsjY
WRLM+7sHTteH1n8aoaHzJjldpn8OwUVhBbR8GsZIuVcSvfogdv6K3DBPGrbV
LRxfGS2DoLFISYnCFk2jpdKg/BewPz2bS82zRf6uY4eKG+QgpVdFwnpbnPCJ
L2Vp+qGVu7ajS2WD6ed/4zg6vIKZJG2mrNQGGbUjZxwcFMBo2R6tCrPBZPJi
pbxJAQp+f07uHBuUJQTRPSOU4L5d3CITWuNWhwvamldKCA4wLxxLs8ZmNF4Q
kvka9gxOtktcrTGsiJNzymQAovwm+c1vrLA1WBdIXh2ACjOFrqzaCkMCHLdn
BA3C78VeT832WuG/B0NfXHw2CA/dtWxfRyv86XN+uYY9BGlRsdTNA5a4Ttza
3G0wDO3Hc98PVluiXnI1QFE4DNV2cgX/gCU2eNQaWbuowJK25kycqyVmPapw
UTepoEw+onTTUdGv8yZ/KE4N/SxjI6e7VLQ3FCUde6uGc/aXwOAkFU0y2UXe
x0Zg8Ebo7jsbqDgU46+3tR2FG5Pn+y4toaIyfsETfu0oJIXk6u1kFtj2fHQo
MFgDtEd1W/srLLCJdzR6yYAG1PNc63Z+b4HdqRSn1MNvwMCl5qCPjwX2Nlf6
zTd7C92m7IltegJn/L8Srql6C5tRKLjTQaCn4fGzJz3ewdq2x4KCiwRGrXpZ
M9nxDvCyU5o4gcDiHC9H0x0keMpS9uu8CfyAGdriXSTkf1x5mj7rTTMiEX0v
CX7ywuuBXgQSaYFRq5NIkFXusizyJPBsYtSJUA4J9FZJiJsbgXkh7L7cUyTc
X07flOxEYJbZNd68BhLOua6TjtAIVHSQsQWNJPDq58+Yzxpz1yy3uk1CsUmw
9zpbAj/PEQkdBSSEb6Tdz7MmkDv2QBXUQsJnx6e+q6kEZvSo/LOfk7CAuege
25TA3qJVpsYyEgIcPThlJgT6hh/qLZKTYPXPdfdmYwLH28ZTqpQkfJiollgs
IvCwwKhcrCEheWprzB/zCOxK3ZC44R0JZgyjcIXR7F+ePM8nWhJ8yInwhbPW
1lIfKHQkrLh6a/93cwmMSIwtTpog4S4tPSfHgMCGZeU7tVMkRIRyq+vnELhY
8co5Y4aE9JPizh4KgSnly8b1+tl97fq5lFn/B+cUQEM=
           "]]},
         Annotation[#, "Charting`Private`Tag$324053#2"]& ]}, {}, {}}, InsetBox[
       TemplateBox[{
        "\"RHS via Riemann\[Dash]Liouville\"",
         "\"LHS via Riemann\[Dash]Liouville\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.6}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"Integral Value\"", TraditionalForm]},
     AxesOrigin->{0.1, 4.500000048192522},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0.1, 1}, {4.500000048192522, 8.924713496016148}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJwVj3tUjHkcxhO5pJuOXcu+U+9PWkTHdpHd0PfbhVMhpNNJ7kTtRo0uzCbh
lKIal4Rac1To2C42rctuMzut7sWMZtJ0GaNm1DRjprxjmQqlbf94znM+f32e
h+yPDT5oamJismky//fix8na/Pwq2GRnb5HQTXBNZeXr+2VVcO/PgqTtkxxc
PqBoElbBWlOO1muSk29tkRpVVdC/0qF21iS3XVjE3+rEhzELyyMFXQRTIkVZ
swR8cEvi3HzaSVD2DbXiF4UAElIcwukOgqknBIlh9tWg96zLbG4juOChjrsm
tQZc9E//iX9GcCxOkuAhroO1C32Ex+oJsryiaytnN8K5wPasWCFBLS+e6klq
hk8uHfcvPyK4tj7EPOHJU6hsW99qvDe5/9TtaQIPMZzOaPprXzHBpPV3D6YW
tcKuQw1lV3kEid77Xvg7CahJuO3UXILysQHnjU5tYNt6ne+fSbArjsOJC3oB
7IAe64bTBI0xEce6D7cDZfJD2tTjBDXuGZ/ybstgifxKyWA0Qbs91/y5DR0w
YJWa9dU+gk7bFJR8ohN0H31zG0MIhoqT70S6d0OJbt5Uyp9gU9ms4aUhcojX
yMzrVhO0DBGL/bJfgki5sbrBmWDe3pOxuRUK6OKde7SIJjjqEXF9jf4VeDxY
ZxDaEDx+pTjOkfRC2mtBxajJpL/0TRYhShjIXu5Z/o7GaOZGkUKohMPvdRNs
JY3yQ36U6xYVPOZnF1e30rid/Gq426sCUebqFnE1jbU4e2bgidcg9Q6TNpfR
GJQTl5Zu0QdhDcZVsfk01vsbfZmSPhBxZYX9aTQG+jju4vj1w5EzvxXMYdP4
75ENL2+098Nlz6tq6500nv2SzdOz1dAzxczy73U0etbU18pMB2B4PHlF0Pc0
TjSW+CgvD4C8Ybt7zQIaK1xKzeY5a4A/ulpbb0rjmeeFzlqhBtgVtoFlnfbo
JfkjTx2uhRhHs6tP7tgja5og6uSQFm5WDed/m2CPFifYOStPvoHcDHFPpK89
qkO9J+bP18G199GhHEt7VEXMlOaV6qA31Uix5HbY1KlT+/rr4fCzCMneIjsU
cpNCrPv04DOHPZcXZYeyRJMlifGDEJQ44sh3tcOu2iKvGTZDsHupn3nwCAvH
vX/ku90agv2OU5TD1Sx0nZZy8bTLWxjpk5/VpLMweFnP3Y+it6BoMZnvHsDC
3DR3R8vdDNzMX/6dzIqFH5BjyN3LQHGfQ+tzSxZuGxcIqAMMpC3e8VOzBQtt
j/kGL49iwPP8laMCcxZejAw+tSGOASu3o9LC6SzMDGR3n09noPGchTTqC4Vn
bMq50ysYIJecVUNDFCpFTNiFSgbClhofqwcpxPNui75+yEDGvo0pr/QUfpki
4DtWMbCw/IFK9IbC5PctGr86BiT91z6XqinkdGi8UzsZuHPjQErEKwq7cpZZ
zpYz4PR5a8wOBYWrNsd25SgYCBkb2Rz8ksLhpuGYWyoGDNoELXRTGF9lxqvR
M1B6nROzQEZhW2JAZMBbBtpW/Dxo006hqyvXVWpgIP344p0zXlBoKJ3bojQy
8Lud9ZwPEgq3RIblRo0yYJ3qFaprpbDCgbfH8Gnyb6EvV/mcQitlrxNnnIEC
4filDjGFMTyH4YkJBtpnSCQiEYX/ATvzXHY=
             "]]}, "Charting`Private`Tag$324053#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0], 
             Dashing[{Small, Small}], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJwV0Gs01AkYBvBJdEPxN25jTGNLK+WaS1uz3tfl7BGbW5Js94RNac6Uy2a6
WLaNjCKHUdpFLRtJqtM2M9l2sEOtKSliGjWTywxT/afVCNGs/fCc5/w+Pec8
DnsORe0zoFAoG2fzf395h6suKxPAx8roHfw0JrIaG1/fqBMAY8nYzdJUJkZd
G5a3NQnAsPfNstIjTORWRTzRKQVQmDEYV8JhYlfBcmGksxCkyix6SQoTjyd2
nFkoEkJ//D7NhQQmdtvQ3X6Qi8B1c9yvghgmZmeKUmOX/gnCNsqlEF8m0m6P
8ljZYmhP9G71GlmK05zOIz7SFlixLU/nwV6K9n7JzY3GEhBam9wXTzNQXX6Y
/vJoO9DVVQH6Hxn4dWv0oiN/PQSfl2aRWVQGsk5cNhT5SCFBciXavMIej35T
sy+78jFMD225N+Vujw4a//q4953wi/tk2hcddJRND7t869wF7Szfulu76djL
ycjghD2FlMWaik8UOupS4tP6DjyDPX3mW3hX7FDl9fMU/3I3jLKk9j0BdsjY
WRLM+7sHTteH1n8aoaHzJjldpn8OwUVhBbR8GsZIuVcSvfogdv6K3DBPGrbV
LRxfGS2DoLFISYnCFk2jpdKg/BewPz2bS82zRf6uY4eKG+QgpVdFwnpbnPCJ
L2Vp+qGVu7ajS2WD6ed/4zg6vIKZJG2mrNQGGbUjZxwcFMBo2R6tCrPBZPJi
pbxJAQp+f07uHBuUJQTRPSOU4L5d3CITWuNWhwvamldKCA4wLxxLs8ZmNF4Q
kvka9gxOtktcrTGsiJNzymQAovwm+c1vrLA1WBdIXh2ACjOFrqzaCkMCHLdn
BA3C78VeT832WuG/B0NfXHw2CA/dtWxfRyv86XN+uYY9BGlRsdTNA5a4Ttza
3G0wDO3Hc98PVluiXnI1QFE4DNV2cgX/gCU2eNQaWbuowJK25kycqyVmPapw
UTepoEw+onTTUdGv8yZ/KE4N/SxjI6e7VLQ3FCUde6uGc/aXwOAkFU0y2UXe
x0Zg8Ebo7jsbqDgU46+3tR2FG5Pn+y4toaIyfsETfu0oJIXk6u1kFtj2fHQo
MFgDtEd1W/srLLCJdzR6yYAG1PNc63Z+b4HdqRSn1MNvwMCl5qCPjwX2Nlf6
zTd7C92m7IltegJn/L8Srql6C5tRKLjTQaCn4fGzJz3ewdq2x4KCiwRGrXpZ
M9nxDvCyU5o4gcDiHC9H0x0keMpS9uu8CfyAGdriXSTkf1x5mj7rTTMiEX0v
CX7ywuuBXgQSaYFRq5NIkFXusizyJPBsYtSJUA4J9FZJiJsbgXkh7L7cUyTc
X07flOxEYJbZNd68BhLOua6TjtAIVHSQsQWNJPDq58+Yzxpz1yy3uk1CsUmw
9zpbAj/PEQkdBSSEb6Tdz7MmkDv2QBXUQsJnx6e+q6kEZvSo/LOfk7CAuege
25TA3qJVpsYyEgIcPThlJgT6hh/qLZKTYPXPdfdmYwLH28ZTqpQkfJiollgs
IvCwwKhcrCEheWprzB/zCOxK3ZC44R0JZgyjcIXR7F+ePM8nWhJ8yInwhbPW
1lIfKHQkrLh6a/93cwmMSIwtTpog4S4tPSfHgMCGZeU7tVMkRIRyq+vnELhY
8co5Y4aE9JPizh4KgSnly8b1+tl97fq5lFn/B+cUQEM=
             "]]}, "Charting`Private`Tag$324053#2"]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0.1, 4.500000048192522}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {"\[Beta]", "Integral Value"}, 
        AxesOrigin -> {0.1, 4.500000048192522}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.1, 1}, {4.500000048192522, 8.924713496016148}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]]}, {
         "RHS via Riemann\[Dash]Liouville", 
          "LHS via Riemann\[Dash]Liouville"}, LegendMarkers -> None, 
         LabelStyle -> {}, LegendLayout -> "Column"]], {0.9, 0.6}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.957401976976754*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"b2a06736-4222-4a19-ae7e-46d8a9eddcf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"5", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"5", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"5", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"5", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], "3"]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], "3"]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<RHS via Riemann\[Dash]Liouville\>\"", ",", 
         "\"\<LHS via Riemann\[Dash]Liouville\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<Integral Value\>\""}], "}"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{3.9574020354534225`*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"e533b00a-ffe5-403c-8272-56f0fa77061b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.6870198`", ",", 
   TagBox[
    GraphicsBox[{{{{}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV1Gs4lAkUB3BpKBW9M29P16EmbCjbNtl6kpzj1iJkJ5XtIltqptpKEzUZ
001sSAqraWk3GokSNtrGrF2JyJrNNZcG4z6Z9I5aaotm3z6c5zy/D//znPPl
cHYf4e01NDAw8KXrc1/yIFJz7ZocNtcWpC1tJtGpsLCn4I4cuMmi2Wa0eXcH
VFWlcmjcGn1Z10RiZKZ//Wi3HMYNg88V0264ZFXyrV0JdNnJdwDtU/zaeBNF
CayRvdPwGklsnsteflKlgDe3i785WU9ilFgRHrjwT3C+7/19uZLE+UVDCU5R
j6BHM2F6vZLEcWFd2CrlY2i4Sri3lZJo7nywvHD6EyiOT7Wd9oBETfoxdmdE
NfjlSON98khcVxEwLaysBuKNZWtbZfT+p28yFKuUEPpMttg/jcSI9dl7ozKe
gYDt+yL2CokcrUvetpE60EfI90++QGL7+IC9j10D7F97caeDhMRWoUgk9GuE
4VsZzEwhiaOHQ463/dAEiwwKGH/zSRx0+PGD9GYzLAs5+IdoO4kWu1I9Eyqf
QwJxz+PQRhLtNqnY7foW4HDHuGUuJG5RRsr4Dm1wY11lYN5KEqvumIzZBrTD
wz6xzag1iaYBSqX7xRcglPVS+2eTKA2WHEnJVwEVKF7rMYXE96tCrjppO6Dm
qG+wzRgLTyRnCa05XVDwMSgus4+FFrkv4zkcNfSM+GozG1l4kErLUJWqwfkM
55KkjIXt+9zZXP9uSEq1W6/LY+F3nJ912V3dcNTGNc48jYXlOH2qt7gHTvzi
kfwxmoV+ScLzMTN64cE7LyPpURZWeI66UTm9sOCs2KpyGwu9Xa13itz7wOVu
izLDjYVvDm14kdbUB4LUOfp99iyM/nQxXRvaD4KtJ8yks1jo+KiivNlwADZ0
x92qHmei/kmOq/rKAHi9H7nzvI+J+StyjebYD4JVjNjiqxomnv3nhr2mdBCS
bSJPFRUw0bnuN2n/Ng0Y3QybOJDCRHOGQiAZ1oAFvzM35CQTZ4hDk76WvAT1
l8IvtgQxsX+Li37evCG4rQrz2YVM7A6ZWi/NHYK6ZR88WyyZWNUy1O/mqQVN
To8jj8HE0oSIgJm9Wrhfx5FU9xHYHG5gE37sFZhFxK5oe0Jga3mG8xRiGByy
rjq3ZhE44bKmZGXmMFTMMl8SG0Mgl3Eq8cyK1+CwW2sfwieQt7Qz+7/a1+C6
WjjC9iAw5byDtWkQBQur5vrlWxH4L4p0KcEU7Pg9OtGc9qYJhYK9hwJmR1l1
vCWBrONuvGUCCpx8shcLFhOYyOed3iCkADdvD1u0iMA479C22BgK4pb/dDlx
AYFnibsJxvkU+HSOF/NZBKprqcBLhRT8daHjbROTQIxdaTW7iIKx7Ie2rrQ/
TVKUWMspENTvkbAJAiPfPh10f0xBjW1ORZ0pgaLngy5RLRQYO4Y2rTah709a
ajq9nYJbvF+TZFMJXL3xSGuSis7P7/Jk0h6rGjuc2U1BtGfq9SFjAo/JjdIf
aSkIWjBNk84gsCHci+/1mp5/u3+fCW0uN4Fbr6PgnElHR/hkAnW5s56qRymw
abUq8jMk0J8fmCJ4T4F2pohUTCIw3zJ9l+4DBdn3Xh1YQttM3WUnmqBg0Kcn
K9mAwMPplmN6PQWMfEf6nRH4P8zLPmM=
           "]]},
         Annotation[#, "Charting`Private`Tag$332666#1"]& ], 
        TagBox[
         {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV0H0w1AkcBvBNv7Xedm1b43pZNXtxnDi1HOrw/Xq5hu0qLTU0h4pSEd16
aZNyzSotLUOmdDRTVHtpL+1duXb3tkPKMQh5T6y8LYuf1+2ukz33xzPPfP57
5uEcSeAfNaJQKLuX83/bVaRpb95UgLPvhPN7Hgs95fL3jx8q4IzqmaEmkIV8
2UhvrVoBWnsaKQ1gYVpJUMvCgAJYu9c7xu9kYWuOjXKfgxIMVbJNiz4svBDT
kG2qUsLt4A1j1ttZ2L6W7Xy2VwWZN2bHhHYsFJ1TJYdueg42cUP12QQL1z8Z
l3iKqkBTO3RPoFyFi4LmJLfGF7D342oXjzOr0No7tlpu/gpER+S7rdxXobY4
kd2X+hd0KLThP8wx0asmxCypsh7qmm3nGRVM9EwvJVRujcCWfq6PSGZi6k7p
UdGd1yCZ+aCWujORo/P55eBMM/ymWaP2NVhiz+KI03cOrVDVEnaJIrbELoFQ
KNjzBq7PpYSLrS1xIT46pTuuDfhRH6baKxg46pr5sbC0HZKe5nj58Ri4MfJ6
gORlB0TcdY8Vj9LRIbiX3WPohH+fJ85tT6fjgca0uzGu3VCha3uSuIGOtQ9N
9V+G9ID+GTVTWmmB9JDGRv+rbyHMOSzryiELLDx0PqGgvBdk9RHUGRML/Nst
+oan7h10rS2QgMwcz1y7J7Dl9MNi3VNxdLA5biwby+ZwNHBWpA4/YGSOsWTR
nV61BtZ46LWRMjPsOebP5gYNQPXCrdsd4WYYxvlpWto/AEHzGfoolhlWo7kJ
79x72DtQ6sqtNsU9+YKMyxaDID+8zaNLaIo1AQt+5INBELIq5wcdTJHnaxsu
9B+CgLgdTd39Jjh7atfborYhuM+3s+cUmeClpavFutPDsPD426qJfSa4o6qm
ut1oBO4vfXHhJcMEDa8e+GryRmBapuIaGmlYvq2M+pnTKIgptYc7rtDwYtNt
J616FPaLHt3bF0hD7+ZfC4cPasHJ7veGi1QaWhOq4+cntcDzCpvZWGuMFudO
5399fgzENUt367OMcfiAj2HdunFwy4wt9uIZ40C0SUth2TjkZRe+qmMYY23n
+LBfgA4e5J5o/+o1FdWS1BDLQR2wbVyeX86jYnsyxT45cQLqS2fxUSgVu6rv
eNOYk1B4y6/kjw1U/OSzXelSMgmTUTp58iCBXOJC7o/bpmCsctPZThmB/C19
0n8apkBpdoznKCCwIMPVlh5BgkQR4TX/DYHzKJwuOETCM/WCz8plB39SqdhR
JFjwtgaxdhDISvHjOx4nYWdzpnirB4G5Mfz0XQIScjIyE065EpjFO90tvkxC
+hsj2pgjgReZMolxOQnH+pr2j1oTqGkgQ3PkJGyxmsj6wCYQxS42Vk9IqE6P
q6Mte2mFSmmrICGfknvEfj2BaXN1o/4vSMhK30w9aUWgsGPUR9RJQur3raYk
g8Cu/C108x4SnIrc2gx0At33JnTl95JQ83OflLlsfa0+vmSAhNkTsye55gQm
KqjFVToSHnNnI1NoBLYmB8YETpGw9Zp3Uqbx8l9cCbdlmoRHvn/mFVIJnC5b
U6dZICG6a79WuZLAoJjQguN/k9A0FMNpMCKwfHNx5PTH5b1X70e9W0EgQ9Pv
IPxEwuohy/IpCoHxxZv1BgMJAeSNlZRl/wcyRUVg
           "]]},
         Annotation[#, "Charting`Private`Tag$332666#2"]& ]}, {}, {}}, InsetBox[
       TemplateBox[{
        "\"RHS via Riemann\[Dash]Liouville\"",
         "\"LHS via Riemann\[Dash]Liouville\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.6}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"Integral Value\"", TraditionalForm]},
     AxesOrigin->{0.1, 2.5000000267736233`},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0.1, 1}, {2.5000000267736233`, 4.958174164453415}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJwV1Gs4lAkUB3BpKBW9M29P16EmbCjbNtl6kpzj1iJkJ5XtIltqptpKEzUZ
001sSAqraWk3GokSNtrGrF2JyJrNNZcG4z6Z9I5aaotm3z6c5zy/D//znPPl
cHYf4e01NDAw8KXrc1/yIFJz7ZocNtcWpC1tJtGpsLCn4I4cuMmi2Wa0eXcH
VFWlcmjcGn1Z10RiZKZ//Wi3HMYNg88V0264ZFXyrV0JdNnJdwDtU/zaeBNF
CayRvdPwGklsnsteflKlgDe3i785WU9ilFgRHrjwT3C+7/19uZLE+UVDCU5R
j6BHM2F6vZLEcWFd2CrlY2i4Sri3lZJo7nywvHD6EyiOT7Wd9oBETfoxdmdE
NfjlSON98khcVxEwLaysBuKNZWtbZfT+p28yFKuUEPpMttg/jcSI9dl7ozKe
gYDt+yL2CokcrUvetpE60EfI90++QGL7+IC9j10D7F97caeDhMRWoUgk9GuE
4VsZzEwhiaOHQ463/dAEiwwKGH/zSRx0+PGD9GYzLAs5+IdoO4kWu1I9Eyqf
QwJxz+PQRhLtNqnY7foW4HDHuGUuJG5RRsr4Dm1wY11lYN5KEqvumIzZBrTD
wz6xzag1iaYBSqX7xRcglPVS+2eTKA2WHEnJVwEVKF7rMYXE96tCrjppO6Dm
qG+wzRgLTyRnCa05XVDwMSgus4+FFrkv4zkcNfSM+GozG1l4kErLUJWqwfkM
55KkjIXt+9zZXP9uSEq1W6/LY+F3nJ912V3dcNTGNc48jYXlOH2qt7gHTvzi
kfwxmoV+ScLzMTN64cE7LyPpURZWeI66UTm9sOCs2KpyGwu9Xa13itz7wOVu
izLDjYVvDm14kdbUB4LUOfp99iyM/nQxXRvaD4KtJ8yks1jo+KiivNlwADZ0
x92qHmei/kmOq/rKAHi9H7nzvI+J+StyjebYD4JVjNjiqxomnv3nhr2mdBCS
bSJPFRUw0bnuN2n/Ng0Y3QybOJDCRHOGQiAZ1oAFvzM35CQTZ4hDk76WvAT1
l8IvtgQxsX+Li37evCG4rQrz2YVM7A6ZWi/NHYK6ZR88WyyZWNUy1O/mqQVN
To8jj8HE0oSIgJm9Wrhfx5FU9xHYHG5gE37sFZhFxK5oe0Jga3mG8xRiGByy
rjq3ZhE44bKmZGXmMFTMMl8SG0Mgl3Eq8cyK1+CwW2sfwieQt7Qz+7/a1+C6
WjjC9iAw5byDtWkQBQur5vrlWxH4L4p0KcEU7Pg9OtGc9qYJhYK9hwJmR1l1
vCWBrONuvGUCCpx8shcLFhOYyOed3iCkADdvD1u0iMA479C22BgK4pb/dDlx
AYFnibsJxvkU+HSOF/NZBKprqcBLhRT8daHjbROTQIxdaTW7iIKx7Ie2rrQ/
TVKUWMspENTvkbAJAiPfPh10f0xBjW1ORZ0pgaLngy5RLRQYO4Y2rTah709a
ajq9nYJbvF+TZFMJXL3xSGuSis7P7/Jk0h6rGjuc2U1BtGfq9SFjAo/JjdIf
aSkIWjBNk84gsCHci+/1mp5/u3+fCW0uN4Fbr6PgnElHR/hkAnW5s56qRymw
abUq8jMk0J8fmCJ4T4F2pohUTCIw3zJ9l+4DBdn3Xh1YQttM3WUnmqBg0Kcn
K9mAwMPplmN6PQWMfEf6nRH4P8zLPmM=
             "]]}, "Charting`Private`Tag$332666#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0], 
             Dashing[{Small, Small}], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJwV0H0w1AkcBvBNv7Xedm1b43pZNXtxnDi1HOrw/Xq5hu0qLTU0h4pSEd16
aZNyzSotLUOmdDRTVHtpL+1duXb3tkPKMQh5T6y8LYuf1+2ukz33xzPPfP57
5uEcSeAfNaJQKLuX83/bVaRpb95UgLPvhPN7Hgs95fL3jx8q4IzqmaEmkIV8
2UhvrVoBWnsaKQ1gYVpJUMvCgAJYu9c7xu9kYWuOjXKfgxIMVbJNiz4svBDT
kG2qUsLt4A1j1ttZ2L6W7Xy2VwWZN2bHhHYsFJ1TJYdueg42cUP12QQL1z8Z
l3iKqkBTO3RPoFyFi4LmJLfGF7D342oXjzOr0No7tlpu/gpER+S7rdxXobY4
kd2X+hd0KLThP8wx0asmxCypsh7qmm3nGRVM9EwvJVRujcCWfq6PSGZi6k7p
UdGd1yCZ+aCWujORo/P55eBMM/ymWaP2NVhiz+KI03cOrVDVEnaJIrbELoFQ
KNjzBq7PpYSLrS1xIT46pTuuDfhRH6baKxg46pr5sbC0HZKe5nj58Ri4MfJ6
gORlB0TcdY8Vj9LRIbiX3WPohH+fJ85tT6fjgca0uzGu3VCha3uSuIGOtQ9N
9V+G9ID+GTVTWmmB9JDGRv+rbyHMOSzryiELLDx0PqGgvBdk9RHUGRML/Nst
+oan7h10rS2QgMwcz1y7J7Dl9MNi3VNxdLA5biwby+ZwNHBWpA4/YGSOsWTR
nV61BtZ46LWRMjPsOebP5gYNQPXCrdsd4WYYxvlpWto/AEHzGfoolhlWo7kJ
79x72DtQ6sqtNsU9+YKMyxaDID+8zaNLaIo1AQt+5INBELIq5wcdTJHnaxsu
9B+CgLgdTd39Jjh7atfborYhuM+3s+cUmeClpavFutPDsPD426qJfSa4o6qm
ut1oBO4vfXHhJcMEDa8e+GryRmBapuIaGmlYvq2M+pnTKIgptYc7rtDwYtNt
J616FPaLHt3bF0hD7+ZfC4cPasHJ7veGi1QaWhOq4+cntcDzCpvZWGuMFudO
5399fgzENUt367OMcfiAj2HdunFwy4wt9uIZ40C0SUth2TjkZRe+qmMYY23n
+LBfgA4e5J5o/+o1FdWS1BDLQR2wbVyeX86jYnsyxT45cQLqS2fxUSgVu6rv
eNOYk1B4y6/kjw1U/OSzXelSMgmTUTp58iCBXOJC7o/bpmCsctPZThmB/C19
0n8apkBpdoznKCCwIMPVlh5BgkQR4TX/DYHzKJwuOETCM/WCz8plB39SqdhR
JFjwtgaxdhDISvHjOx4nYWdzpnirB4G5Mfz0XQIScjIyE065EpjFO90tvkxC
+hsj2pgjgReZMolxOQnH+pr2j1oTqGkgQ3PkJGyxmsj6wCYQxS42Vk9IqE6P
q6Mte2mFSmmrICGfknvEfj2BaXN1o/4vSMhK30w9aUWgsGPUR9RJQur3raYk
g8Cu/C108x4SnIrc2gx0At33JnTl95JQ83OflLlsfa0+vmSAhNkTsye55gQm
KqjFVToSHnNnI1NoBLYmB8YETpGw9Zp3Uqbx8l9cCbdlmoRHvn/mFVIJnC5b
U6dZICG6a79WuZLAoJjQguN/k9A0FMNpMCKwfHNx5PTH5b1X70e9W0EgQ9Pv
IPxEwuohy/IpCoHxxZv1BgMJAeSNlZRl/wcyRUVg
             "]]}, "Charting`Private`Tag$332666#2"]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0.1, 2.5000000267736233`}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {"\[Beta]", "Integral Value"}, 
        AxesOrigin -> {0.1, 2.5000000267736233`}, DisplayFunction :> Identity,
         Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.1, 1}, {2.5000000267736233`, 4.958174164453415}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]]}, {
         "RHS via Riemann\[Dash]Liouville", 
          "LHS via Riemann\[Dash]Liouville"}, LegendMarkers -> None, 
         LabelStyle -> {}, LegendLayout -> "Column"]], {0.9, 0.6}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9574020405978556`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"cb5e4d20-e18a-4b8a-9606-0f2e0f983094"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "7.4358"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "6.2208"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "5.2038"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "4.2768"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "3.375"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.4768"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.6038"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8208"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.2358"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0."}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "6.561"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "4.608"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.087"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.944"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.125"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.576"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.243"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.072"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.009"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0."}], "}"}]}], "}"}]}], ";", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"plot2", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data1", ",", "data2"}], "}"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<R\>\"", ",", "\"\<r\>\""}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<L\>\"", ",", "\"\<r\>\""}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Variable \[GothicCapitalB]\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Function value\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "ensures", " ", "at", " ", "least", " ", "1000", "px", " ", "wide"}], 
       "*)"}], 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "30"}], "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Right Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\>\"", ",", "Blue", ",", "28"}], 
               "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Left Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\>\"", ",", "Magenta", ",", 
                "28"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.92"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9581426190046797`*^9, 3.9581426205469875`*^9}, 
   3.9581427032816696`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"05446100-6d4a-4f7b-9fdc-1951df056c15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.317326`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 7.4358}, {0.1, 0.}, {1., 0.}, {0.9, 0.2358}, {
            0.8, 0.8208}, {0.7, 1.6038}, {0.6, 2.4768}, {0.5, 3.375}, {0.4, 
            4.2768}, {0.3, 5.2038}, {0.2, 6.2208}}]]}, {}, 
         {RGBColor[1, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 6.561}, {0.1, 0.}, {1., 0.}, {0.9, 0.009}, {0.8, 
            0.072}, {0.7, 0.243}, {0.6, 0.576}, {0.5, 1.125}, {0.4, 1.944}, {
            0.3, 3.087}, {0.2, 4.608}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 7.4358}, {0.2, 6.2208}, {0.3, 5.2038}, {0.4, 
           4.2768}, {0.5, 3.375}, {0.6, 2.4768}, {0.7, 1.6038}, {0.8, 
           0.8208}, {0.9, 0.2358}, {1., 0.}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 6.561}, {0.2, 4.608}, {0.3, 3.087}, {0.4, 1.944}, {
           0.5, 1.125}, {0.6, 0.576}, {0.7, 0.243}, {0.8, 0.072}, {0.9, 
           0.009}, {1., 0.}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 7.4358}}, {{0.2, 6.2208}}, {{
           0.3, 5.2038}}, {{0.4, 4.2768}}, {{0.5, 3.375}}, {{0.6, 2.4768}}, {{
           0.7, 1.6038}}, {{0.8, 0.8208}}, {{0.9, 0.2358}}, {{1., 0.}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 6.561}}, {{0.2, 4.608}}, {{
           0.3, 3.087}}, {{0.4, 1.944}}, {{0.5, 1.125}}, {{0.6, 0.576}}, {{
           0.7, 0.243}}, {{0.8, 0.072}}, {{0.9, 0.009}}, {{1., 
           0.}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{StyleBox[
          SubscriptBox["\"R\"", "\"r\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"L\"", "\"r\""], FontSize -> 40, StripOnInput -> 
          False]},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], 30], FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", "30"}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        StyleBox[
        "\"Variable \[GothicCapitalB]\"", FontSize -> 30, StripOnInput -> 
         False], TraditionalForm], 
       FormBox[
        StyleBox["\"Function value\"", FontSize -> 30, StripOnInput -> False],
         TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Right Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(r\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], 28, StripOnInput -> False]}, {
              StyleBox[
              "\"Left Term Value of Definition 3.2 via \\!\\(\\*SubscriptBox[\
\\(\[Chi]\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 \
and \\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], 28, StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.6, 0.92}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], 30],
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 7.4358}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 7.4358}, {0.1, 0.}, {1., 0.}, {0.9, 0.2358}, {
               0.8, 0.8208}, {0.7, 1.6038}, {0.6, 2.4768}, {0.5, 3.375}, {0.4,
                4.2768}, {0.3, 5.2038}, {0.2, 6.2208}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 6.561}, {0.1, 0.}, {1., 0.}, {0.9, 0.009}, {0.8, 
               0.072}, {0.7, 0.243}, {0.6, 0.576}, {0.5, 1.125}, {0.4, 
               1.944}, {0.3, 3.087}, {0.2, 
               4.608}}]}}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 7.4358}, {0.2, 6.2208}, {0.3, 5.2038}, {0.4, 4.2768}, {
            0.5, 3.375}, {0.6, 2.4768}, {0.7, 1.6038}, {0.8, 0.8208}, {0.9, 
            0.2358}, {1., 0.}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 6.561}, {0.2, 4.608}, {0.3, 3.087}, {0.4, 1.944}, {0.5,
             1.125}, {0.6, 0.576}, {0.7, 0.243}, {0.8, 0.072}, {0.9, 0.009}, {
            1., 0.}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            7.4358}}, {{0.2, 6.2208}}, {{0.3, 5.2038}}, {{0.4, 4.2768}}, {{
            0.5, 3.375}}, {{0.6, 2.4768}}, {{0.7, 1.6038}}, {{0.8, 
            0.8208}}, {{0.9, 0.2358}}, {{1., 0.}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            6.561}}, {{0.2, 4.608}}, {{0.3, 3.087}}, {{0.4, 1.944}}, {{0.5, 
            1.125}}, {{0.6, 0.576}}, {{0.7, 0.243}}, {{0.8, 0.072}}, {{0.9, 
            0.009}}, {{1., 0.}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 7.4358}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
          Style["Variable \[GothicCapitalB]", FontSize -> 30], 
          Style["Function value", FontSize -> 30]}, AxesOrigin -> {0, 0}, 
        DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "Right Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[0, 0, 1], 28], 
             Style[
             "Left Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[1, 0, 1], 28]}], RoundingRadius -> 5], 
          Scaled[{0.6, 0.92}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], 30], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 7.4358}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Thickness[Large]]}, {
          Style[
           Subscript["R", "r"], FontSize -> 40], 
          Style[
           Subscript["L", "r"], FontSize -> 40]}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}}, Joined -> {True, True}, LabelStyle -> 
         Directive[
           GrayLevel[0], 30], LegendLayout -> "Column"]], {0.9, 0.9}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.958142707742649*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"47f41e5e-d7d5-4e1b-b943-f9c111eb33f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "4.131`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "3.456`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "2.891`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.376`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.875`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.3759999999999994`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.8909999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.4559999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.13099999999999992`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "3.6450000000000005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "2.5600000000000005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7149999999999996`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.08`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.625`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.3199999999999998`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.1349999999999999`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.03999999999999997`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.004999999999999997`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.`"}], "}"}]}], "}"}]}], ";", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"plot2", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data1", ",", "data2"}], "}"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<R\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<L\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Variable \[GothicCapitalB]\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Function value\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "ensures", " ", "at", " ", "least", " ", "1000", "px", " ", "wide"}], 
       "*)"}], 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "30"}], "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Right Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(c\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\>\"", ",", "Blue", ",", "28"}], 
               "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Left Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(c\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\>\"", ",", "Magenta", ",", 
                "28"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.92"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.958142783062544*^9, 3.958142785165708*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"89bfc55a-48d8-4692-b3d1-4aec8579f201"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0955507`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 4.131}, {0.1, 0.}, {1., 0.}, {0.9, 
            0.13099999999999992`}, {0.8, 0.4559999999999998}, {0.7, 
            0.8909999999999998}, {0.6, 1.3759999999999994`}, {0.5, 1.875}, {
            0.4, 2.376}, {0.3, 2.891}, {0.2, 3.456}}]]}, {}, 
         {RGBColor[1, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 3.6450000000000005`}, {0.1, 0.}, {1., 0.}, {0.9, 
            0.004999999999999997}, {0.8, 0.03999999999999997}, {0.7, 
            0.1349999999999999}, {0.6, 0.3199999999999998}, {0.5, 0.625}, {
            0.4, 1.08}, {0.3, 1.7149999999999996`}, {0.2, 
            2.5600000000000005`}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.131}, {0.2, 3.456}, {0.3, 2.891}, {0.4, 2.376}, {
           0.5, 1.875}, {0.6, 1.3759999999999994`}, {0.7, 
           0.8909999999999998}, {0.8, 0.4559999999999998}, {0.9, 
           0.13099999999999992`}, {1., 0.}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 3.6450000000000005`}, {0.2, 2.5600000000000005`}, {
           0.3, 1.7149999999999996`}, {0.4, 1.08}, {0.5, 0.625}, {0.6, 
           0.3199999999999998}, {0.7, 0.1349999999999999}, {0.8, 
           0.03999999999999997}, {0.9, 0.004999999999999997}, {1., 0.}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 4.131}}, {{0.2, 3.456}}, {{
           0.3, 2.891}}, {{0.4, 2.376}}, {{0.5, 1.875}}, {{0.6, 
           1.3759999999999994`}}, {{0.7, 0.8909999999999998}}, {{0.8, 
           0.4559999999999998}}, {{0.9, 0.13099999999999992`}}, {{1., 0.}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 3.6450000000000005`}}, {{0.2,
            2.5600000000000005`}}, {{0.3, 1.7149999999999996`}}, {{0.4, 
           1.08}}, {{0.5, 0.625}}, {{0.6, 0.3199999999999998}}, {{0.7, 
           0.1349999999999999}}, {{0.8, 0.03999999999999997}}, {{0.9, 
           0.004999999999999997}}, {{1., 0.}}}]}, {}}}, {}, {}, {}, {}}, 
      InsetBox[
       TemplateBox[{StyleBox[
          SubscriptBox["\"R\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"L\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False]},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], 30], FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", "30"}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        StyleBox[
        "\"Variable \[GothicCapitalB]\"", FontSize -> 30, StripOnInput -> 
         False], TraditionalForm], 
       FormBox[
        StyleBox["\"Function value\"", FontSize -> 30, StripOnInput -> False],
         TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Right Term Value of Definition 3.2 via \
\\!\\(\\*SubscriptBox[\\(\[Chi]\\), \\(c\\)]\\) for \
\\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], 28, StripOnInput -> False]}, {
              StyleBox[
              "\"Left Term Value of Definition 3.2 via \\!\\(\\*SubscriptBox[\
\\(\[Chi]\\), \\(c\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 \
and \\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], 28, StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.6, 0.92}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], 30],
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 4.131}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 4.131}, {0.1, 0.}, {1., 0.}, {0.9, 
               0.13099999999999992`}, {0.8, 0.4559999999999998}, {0.7, 
               0.8909999999999998}, {0.6, 1.3759999999999994`}, {0.5, 
               1.875}, {0.4, 2.376}, {0.3, 2.891}, {0.2, 3.456}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 3.6450000000000005`}, {0.1, 0.}, {1., 0.}, {0.9, 
               0.004999999999999997}, {0.8, 0.03999999999999997}, {0.7, 
               0.1349999999999999}, {0.6, 0.3199999999999998}, {0.5, 0.625}, {
               0.4, 1.08}, {0.3, 1.7149999999999996`}, {0.2, 
               2.5600000000000005`}}]}}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.131}, {0.2, 3.456}, {0.3, 2.891}, {0.4, 2.376}, {0.5,
             1.875}, {0.6, 1.3759999999999994`}, {0.7, 0.8909999999999998}, {
            0.8, 0.4559999999999998}, {0.9, 0.13099999999999992`}, {1., 
            0.}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 3.6450000000000005`}, {0.2, 2.5600000000000005`}, {0.3,
             1.7149999999999996`}, {0.4, 1.08}, {0.5, 0.625}, {0.6, 
            0.3199999999999998}, {0.7, 0.1349999999999999}, {0.8, 
            0.03999999999999997}, {0.9, 0.004999999999999997}, {1., 0.}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            4.131}}, {{0.2, 3.456}}, {{0.3, 2.891}}, {{0.4, 2.376}}, {{0.5, 
            1.875}}, {{0.6, 1.3759999999999994`}}, {{0.7, 
            0.8909999999999998}}, {{0.8, 0.4559999999999998}}, {{0.9, 
            0.13099999999999992`}}, {{1., 0.}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            3.6450000000000005`}}, {{0.2, 2.5600000000000005`}}, {{0.3, 
            1.7149999999999996`}}, {{0.4, 1.08}}, {{0.5, 0.625}}, {{0.6, 
            0.3199999999999998}}, {{0.7, 0.1349999999999999}}, {{0.8, 
            0.03999999999999997}}, {{0.9, 0.004999999999999997}}, {{1., 
            0.}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 4.131}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
          Style["Variable \[GothicCapitalB]", FontSize -> 30], 
          Style["Function value", FontSize -> 30]}, AxesOrigin -> {0, 0}, 
        DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "Right Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[0, 0, 1], 28], 
             Style[
             "Left Term Value of Definition 3.2 via \!\(\*SubscriptBox[\(\
\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \
\!\(\*SubscriptBox[\(n\), \(o\)]\)=1", 
              RGBColor[1, 0, 1], 28]}], RoundingRadius -> 5], 
          Scaled[{0.6, 0.92}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], 30], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 4.131}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Thickness[Large]]}, {
          Style[
           Subscript["R", "c"], FontSize -> 40], 
          Style[
           Subscript["L", "c"], FontSize -> 40]}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}}, Joined -> {True, True}, LabelStyle -> 
         Directive[
           GrayLevel[0], 30], LegendLayout -> "Column"]], {0.9, 0.9}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.958142787117264*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e7485b10-4e5b-4606-8e5c-0df6d60e5d48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"9", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"9", "-", 
                RowBox[{"9", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"9", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"9", "-", 
                RowBox[{"9", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", "9", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], "3"], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", "9", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], "3"], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<RHS via Riemann\[Dash]Liouville\>\"", ",", 
         "\"\<LHS via Riemann\[Dash]Liouville\>\""}], " ", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<Integral Value\>\""}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "ensures", " ", "at", " ", "least", " ", "1000", "px", " ", "wide"}], 
     "*)"}], 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "30"}], "]"}]}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.958142819603814*^9, 3.9581428460800915`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5e7733cd-2553-4f7c-a0e6-a03a6b242ba9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.1577634`", ",", 
   TagBox[
    GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
        "], {{{}, 
          {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 156, 157, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
             74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 
             45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
             29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
             13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
             71}}]]}, {}, 
          {RGBColor[1, 0, 1], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{78, 155, 127, 154, 147, 153, 141, 146, 152, 136, 140,
              145, 151, 132, 135, 139, 144, 150, 129, 131, 134, 138, 143, 149,
              126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114,
              113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101,
              100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85,
              84, 83, 82, 81, 80, 79, 128, 130, 133, 137, 142, 
             148}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
             11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
             27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
             43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 
             58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]},
           Annotation[#, "Charting`Private`Tag$5590#1"]& ], 
          TagBox[
           {RGBColor[1, 0, 1], Thickness[Large], Opacity[1.], 
            LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84,
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
              101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
              114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
              149, 143, 138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145,
              140, 136, 152, 146, 141, 153, 147, 154, 127}]},
           Annotation[#, "Charting`Private`Tag$5590#2"]& ]}}], {}, {}}, 
      InsetBox[
       TemplateBox[{
        "\"RHS via Riemann\[Dash]Liouville\"",
         "\"LHS via Riemann\[Dash]Liouville\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], 30], FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", "30"}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.6}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"Integral Value\"", TraditionalForm]},
     AxesOrigin->{0.1, 4.500000048192522},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], 30],
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True},
     PlotRange->{{0.1, 1}, {4.500000048192522, 8.924713496016148}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{
        GraphicsComplex[CompressedData["
1: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
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0, 0, 1], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{1, 156, 157, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
               74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46,
                45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
               30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15,
                14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 
               65, 71}}]}]}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[1, 0, 1], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{78, 155, 127, 154, 147, 153, 141, 146, 152, 136, 140, 
               145, 151, 132, 135, 139, 144, 150, 129, 131, 134, 138, 143, 
               149, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 
               115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 
               103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89,
                88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 128, 130, 133, 137, 
               142, 148}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1], 
              Thickness[Large]], 
             
             Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
              12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
              28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
              44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
              55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
            "Charting`Private`Tag$5590#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Thickness[Large]], 
             
             Line[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
               101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
              113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
               126, 149, 143, 138, 134, 131, 129, 150, 144, 139, 135, 132, 
              151, 145, 140, 136, 152, 146, 141, 153, 147, 154, 127}]}, 
            "Charting`Private`Tag$5590#2"]}}], {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0.1, 4.500000048192522}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {"\[Beta]", "Integral Value"}, 
        AxesOrigin -> {0.1, 4.500000048192522}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], 30], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}, "AxesInFront" -> True}, 
        PlotRange -> {{0.1, 1}, {4.500000048192522, 8.924713496016148}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Thickness[Large]]}, {
         "RHS via Riemann\[Dash]Liouville", 
          "LHS via Riemann\[Dash]Liouville"}, LegendMarkers -> None, 
         LabelStyle -> Directive[
           GrayLevel[0], 30], LegendLayout -> "Column"]], {0.9, 0.6}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9581428538096676`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d6a49589-b365-4d7d-807e-621c1952d65e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"5", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"5", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", 
              RowBox[{"(", 
               RowBox[{"0", "-", 
                RowBox[{"5", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], "^", "3"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"5", 
                 RowBox[{"(", 
                  RowBox[{"t", "^", "3"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], "3"]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "0"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", "1"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}], "3"]}], ")"}], "/", 
           RowBox[{"Gamma", "[", "\[Beta]", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<RHS via Riemann\[Dash]Liouville\>\"", ",", 
         "\"\<LHS via Riemann\[Dash]Liouville\>\""}], " ", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<Integral Value\>\""}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "ensures", " ", "at", " ", "least", " ", "1000", "px", " ", "wide"}], 
     "*)"}], 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "30"}], "]"}]}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.958142870445424*^9, 3.958142902695133*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"2ddd7932-5de8-40e3-a274-76b534c50545"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.7354408`", ",", 
   TagBox[
    GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
        "], {{{}, 
          {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{1, 156, 157, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
             74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 
             45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
             29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
             13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
             71}}]]}, {}, 
          {RGBColor[1, 0, 1], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[
            PolygonBox[{{78, 155, 127, 154, 147, 153, 141, 146, 152, 136, 140,
              145, 151, 132, 135, 139, 144, 150, 129, 131, 134, 138, 143, 149,
              126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114,
              113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101,
              100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85,
              84, 83, 82, 81, 80, 79, 128, 130, 133, 137, 142, 
             148}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
             11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
             27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
             43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 
             58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]},
           Annotation[#, "Charting`Private`Tag$14556#1"]& ], 
          TagBox[
           {RGBColor[1, 0, 1], Thickness[Large], Opacity[1.], 
            LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84,
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
              101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
              114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
              149, 143, 138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145,
              140, 136, 152, 146, 141, 153, 147, 154, 127}]},
           Annotation[#, "Charting`Private`Tag$14556#2"]& ]}}], {}, {}}, 
      InsetBox[
       TemplateBox[{
        "\"RHS via Riemann\[Dash]Liouville\"",
         "\"LHS via Riemann\[Dash]Liouville\""},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], 30], FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", "30"}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.6}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox["\"\[Beta]\"", TraditionalForm], 
       FormBox["\"Integral Value\"", TraditionalForm]},
     AxesOrigin->{0.1, 2.5000000267736233`},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], 30],
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True},
     PlotRange->{{0.1, 1}, {2.5000000267736233`, 4.958174164453415}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{
        GraphicsComplex[CompressedData["
1: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
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0, 0, 1], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{1, 156, 157, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
               74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46,
                45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
               30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15,
                14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 
               65, 71}}]}]}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[1, 0, 1], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{78, 155, 127, 154, 147, 153, 141, 146, 152, 136, 140, 
               145, 151, 132, 135, 139, 144, 150, 129, 131, 134, 138, 143, 
               149, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 
               115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 
               103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89,
                88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 128, 130, 133, 137, 
               142, 148}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1], 
              Thickness[Large]], 
             
             Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
              12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
              28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
              44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
              55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
            "Charting`Private`Tag$14556#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1], 
              Thickness[Large]], 
             
             Line[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
               101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
              113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
               126, 149, 143, 138, 134, 131, 129, 150, 144, 139, 135, 132, 
              151, 145, 140, 136, 152, 146, 141, 153, 147, 154, 127}]}, 
            "Charting`Private`Tag$14556#2"]}}], {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0.1, 2.5000000267736233`}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {"\[Beta]", "Integral Value"}, 
        AxesOrigin -> {0.1, 2.5000000267736233`}, DisplayFunction :> Identity,
         Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], 30], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}, "AxesInFront" -> True}, 
        PlotRange -> {{0.1, 1}, {2.5000000267736233`, 4.958174164453415}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Thickness[Large]]}, {
         "RHS via Riemann\[Dash]Liouville", 
          "LHS via Riemann\[Dash]Liouville"}, LegendMarkers -> None, 
         LabelStyle -> Directive[
           GrayLevel[0], 30], LegendLayout -> "Column"]], {0.9, 0.6}, 
       Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9581429103528337`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7a4f8608-0de7-481c-834e-54e200bf5736"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "4.245266535195725`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "4.061688311688312`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.927902734272805`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "3.829640947288006`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "3.757142857142857`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "3.7035953177257523`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "3.6641579000778`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "3.6353383458646613`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "3.6145825913780283`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "3.6`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "3.9155844155844157`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "3.477272727272727`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.1454849498327757`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.8928571428571432`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.7`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.5528846153846154`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "2.4411764705882355`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.3571428571428568`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "2.29491833030853`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "2.25`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.0200663853856864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.8513769654945165`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7263258691404864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.6329732864097677`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5630241177918776`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.5105955126680715`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.4714405458445614`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.4424453788758347`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.4212955871431885`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.40625`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<R\>\"", ",", "\"\<r\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<M\>\"", ",", "\"\<r\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<L\>\"", ",", "\"\<r\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Variable \[GothicCapitalB]\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Function value\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Ensures", " ", "large", " ", "visual", " ", "size"}], "*)"}], 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<RHS Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Blue", ",", 
               "28"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<MHS Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Green", ",", 
               "28"}], "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<LHS Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(r\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Magenta", ",",
                "28"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.56", ",", "0.12"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.958142923445614*^9, 3.958142951734342*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9071638e-e1c5-4b9b-8659-b81732f12570"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0593997`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 4.245266535195725}, {0.1, 0.}, {1., 0.}, {1., 
            3.6}, {0.9, 3.6145825913780283`}, {0.8, 3.6353383458646613`}, {
            0.7, 3.6641579000778}, {0.6, 3.7035953177257523`}, {0.5, 
            3.757142857142857}, {0.4, 3.829640947288006}, {0.3, 
            3.927902734272805}, {0.2, 4.061688311688312}}]]}, {}, 
         {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 3.9155844155844157`}, {0.1, 0.}, {1., 0.}, {1., 
            2.25}, {0.9, 2.29491833030853}, {0.8, 2.3571428571428568`}, {0.7, 
            2.4411764705882355`}, {0.6, 2.5528846153846154`}, {0.5, 2.7}, {
            0.4, 2.8928571428571432`}, {0.3, 3.1454849498327757`}, {0.2, 
            3.477272727272727}}]]}, {}, 
         {RGBColor[1, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 2.0200663853856864`}, {0.1, 0.}, {1., 0.}, {1., 
            1.40625}, {0.9, 1.4212955871431885`}, {0.8, 
            1.4424453788758347`}, {0.7, 1.4714405458445614`}, {0.6, 
            1.5105955126680715`}, {0.5, 1.5630241177918776`}, {0.4, 
            1.6329732864097677`}, {0.3, 1.7263258691404864`}, {0.2, 
            1.8513769654945165`}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
           3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
           3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
           3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
           3.6145825913780283`}, {1., 3.6}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 3.9155844155844157`}, {0.2, 3.477272727272727}, {0.3,
            3.1454849498327757`}, {0.4, 2.8928571428571432`}, {0.5, 2.7}, {
           0.6, 2.5528846153846154`}, {0.7, 2.4411764705882355`}, {0.8, 
           2.3571428571428568`}, {0.9, 2.29491833030853}, {1., 2.25}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {
           0.3, 1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
           1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
           1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
           1.4212955871431885`}, {1., 1.40625}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 4.245266535195725}}, {{0.2, 
           4.061688311688312}}, {{0.3, 3.927902734272805}}, {{0.4, 
           3.829640947288006}}, {{0.5, 3.757142857142857}}, {{0.6, 
           3.7035953177257523`}}, {{0.7, 3.6641579000778}}, {{0.8, 
           3.6353383458646613`}}, {{0.9, 3.6145825913780283`}}, {{1., 
           3.6}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 3.9155844155844157`}}, {{0.2,
            3.477272727272727}}, {{0.3, 3.1454849498327757`}}, {{0.4, 
           2.8928571428571432`}}, {{0.5, 2.7}}, {{0.6, 
           2.5528846153846154`}}, {{0.7, 2.4411764705882355`}}, {{0.8, 
           2.3571428571428568`}}, {{0.9, 2.29491833030853}}, {{1., 2.25}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 2.0200663853856864`}}, {{
           0.2, 1.8513769654945165`}}, {{0.3, 1.7263258691404864`}}, {{0.4, 
           1.6329732864097677`}}, {{0.5, 1.5630241177918776`}}, {{0.6, 
           1.5105955126680715`}}, {{0.7, 1.4714405458445614`}}, {{0.8, 
           1.4424453788758347`}}, {{0.9, 1.4212955871431885`}}, {{1., 
           1.40625}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{StyleBox[
          SubscriptBox["\"R\"", "\"r\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"M\"", "\"r\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"L\"", "\"r\""], FontSize -> 40, StripOnInput -> 
          False]},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], FontSize -> 16], FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        StyleBox[
        "\"Variable \[GothicCapitalB]\"", FontSize -> 30, StripOnInput -> 
         False], TraditionalForm], 
       FormBox[
        StyleBox["\"Function value\"", FontSize -> 30, StripOnInput -> False],
         TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"RHS Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\[Chi]\
\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], 28, StripOnInput -> False]}, {
              StyleBox[
              "\"MHS Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\[Chi]\
\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 1, 0], 28, StripOnInput -> False]}, {
              StyleBox[
              "\"LHS Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\[Chi]\
\\), \\(r\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], 28, StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.56, 0.12}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], FontSize -> 16],
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 4.245266535195725}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 4.245266535195725}, {0.1, 0.}, {1., 0.}, {1., 
               3.6}, {0.9, 3.6145825913780283`}, {0.8, 3.6353383458646613`}, {
               0.7, 3.6641579000778}, {0.6, 3.7035953177257523`}, {0.5, 
               3.757142857142857}, {0.4, 3.829640947288006}, {0.3, 
               3.927902734272805}, {0.2, 4.061688311688312}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 1, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 3.9155844155844157`}, {0.1, 0.}, {1., 0.}, {1., 
               2.25}, {0.9, 2.29491833030853}, {0.8, 2.3571428571428568`}, {
               0.7, 2.4411764705882355`}, {0.6, 2.5528846153846154`}, {0.5, 
               2.7}, {0.4, 2.8928571428571432`}, {0.3, 3.1454849498327757`}, {
               0.2, 3.477272727272727}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 2.0200663853856864`}, {0.1, 0.}, {1., 0.}, {1., 
               1.40625}, {0.9, 1.4212955871431885`}, {0.8, 
               1.4424453788758347`}, {0.7, 1.4714405458445614`}, {0.6, 
               1.5105955126680715`}, {0.5, 1.5630241177918776`}, {0.4, 
               1.6329732864097677`}, {0.3, 1.7263258691404864`}, {0.2, 
               1.8513769654945165`}}]}}]}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
            3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
            3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
            3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
            3.6145825913780283`}, {1., 3.6}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]], 
           
           Line[{{0.1, 3.9155844155844157`}, {0.2, 3.477272727272727}, {0.3, 
            3.1454849498327757`}, {0.4, 2.8928571428571432`}, {0.5, 2.7}, {
            0.6, 2.5528846153846154`}, {0.7, 2.4411764705882355`}, {0.8, 
            2.3571428571428568`}, {0.9, 2.29491833030853}, {1., 2.25}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {0.3,
             1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
            1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
            1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
            1.4212955871431885`}, {1., 1.40625}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            4.245266535195725}}, {{0.2, 4.061688311688312}}, {{0.3, 
            3.927902734272805}}, {{0.4, 3.829640947288006}}, {{0.5, 
            3.757142857142857}}, {{0.6, 3.7035953177257523`}}, {{0.7, 
            3.6641579000778}}, {{0.8, 3.6353383458646613`}}, {{0.9, 
            3.6145825913780283`}}, {{1., 3.6}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            3.9155844155844157`}}, {{0.2, 3.477272727272727}}, {{0.3, 
            3.1454849498327757`}}, {{0.4, 2.8928571428571432`}}, {{0.5, 
            2.7}}, {{0.6, 2.5528846153846154`}}, {{0.7, 
            2.4411764705882355`}}, {{0.8, 2.3571428571428568`}}, {{0.9, 
            2.29491833030853}}, {{1., 2.25}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            2.0200663853856864`}}, {{0.2, 1.8513769654945165`}}, {{0.3, 
            1.7263258691404864`}}, {{0.4, 1.6329732864097677`}}, {{0.5, 
            1.5630241177918776`}}, {{0.6, 1.5105955126680715`}}, {{0.7, 
            1.4714405458445614`}}, {{0.8, 1.4424453788758347`}}, {{0.9, 
            1.4212955871431885`}}, {{1., 
            1.40625}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 4.245266535195725}}, PlotRangeClipping -> 
        True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
          Style["Variable \[GothicCapitalB]", FontSize -> 30], 
          Style["Function value", FontSize -> 30]}, AxesOrigin -> {0, 0}, 
        DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "RHS Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\), \(r\
\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \
\(o\)]\)=1", 
              RGBColor[0, 0, 1], 28], 
             Style[
             "MHS Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\), \(r\
\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \
\(o\)]\)=1", 
              RGBColor[0, 1, 0], 28], 
             Style[
             "LHS Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\), \(r\
\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \
\(o\)]\)=1", 
              RGBColor[1, 0, 1], 28]}], RoundingRadius -> 5], 
          Scaled[{0.56, 0.12}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], FontSize -> 16], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0, 1.}, {0, 4.245266535195725}}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Thickness[Large]]}, {
          Style[
           Subscript["R", "r"], FontSize -> 40], 
          Style[
           Subscript["M", "r"], FontSize -> 40], 
          Style[
           Subscript["L", "r"], FontSize -> 40]}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}}, 
         Joined -> {True, True, True}, LabelStyle -> Directive[
           GrayLevel[0], FontSize -> 16], LegendLayout -> "Column"]], {0.9, 
       0.9}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.958142955762147*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"cb6b5efc-170d-4b42-bba7-3ed94136c6a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "2.3584814084420693`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "2.2564935064935066`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "2.1821681857071136`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "2.1275783040488925`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "2.0873015873015874`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "2.0575529542920847`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.035643277821`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "2.0196324143692563`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "2.0081014396544603`"}], "}"}]}], "}"}]}], ";", 
   "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.175324675324675`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.9318181818181817`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7474916387959865`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.6071428571428572`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.4182692307692308`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.3562091503267977`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.3095238095238093`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.2749546279491835`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.25`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.122259102992048`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.0285427586080647`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "0.9590699273002703`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.9072073813387599`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.8683467321065987`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.8392197292600396`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.8174669699136452`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8013585438199081`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.7896086595239935`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "0.78125`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<R\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<M\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<L\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Variable \[GothicCapitalB]\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Function value\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Ensures", " ", "large", " ", "visual", " ", "size"}], "*)"}], 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<RHS Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Blue", ",", 
               "28"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<MHS Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Green", ",", 
               "28"}], "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<LHS Value of Theorem 1.4 via \
\!\(\*SubscriptBox[\(\[Chi]\), \(c\)]\) for \!\(\*SubscriptBox[\(m\), \
\(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \(o\)]\)=1\>\"", ",", "Magenta", ",",
                "28"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.56", ",", "0.12"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9581429772474875`*^9, 3.9581429981234303`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a1a01aee-5ce7-419f-9768-aec4fcb72647"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0901155`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 2.5}, {0.1, 0.}, {1., 0.}, {1., 
            2.0081014396544603`}, {0.9, 2.0196324143692563`}, {0.8, 
            2.035643277821}, {0.7, 2.0575529542920847`}, {0.6, 
            2.0873015873015874`}, {0.5, 2.1275783040488925`}, {0.4, 
            2.1821681857071136`}, {0.3, 2.2564935064935066`}, {0.2, 
            2.3584814084420693`}}]]}, {}, 
         {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 2.175324675324675}, {0.1, 0.}, {1., 0.}, {1., 
            1.25}, {0.9, 1.2749546279491835`}, {0.8, 1.3095238095238093`}, {
            0.7, 1.3562091503267977`}, {0.6, 1.4182692307692308`}, {0.5, 
            1.5}, {0.4, 1.6071428571428572`}, {0.3, 1.7474916387959865`}, {
            0.2, 1.9318181818181817`}}]]}, {}, 
         {RGBColor[1, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 1.122259102992048}, {0.1, 0.}, {1., 0.}, {1., 
            0.78125}, {0.9, 0.7896086595239935}, {0.8, 0.8013585438199081}, {
            0.7, 0.8174669699136452}, {0.6, 0.8392197292600396}, {0.5, 
            0.8683467321065987}, {0.4, 0.9072073813387599}, {0.3, 
            0.9590699273002703}, {0.2, 
            1.0285427586080647`}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.5}, {0.2, 2.3584814084420693`}, {0.3, 
           2.2564935064935066`}, {0.4, 2.1821681857071136`}, {0.5, 
           2.1275783040488925`}, {0.6, 2.0873015873015874`}, {0.7, 
           2.0575529542920847`}, {0.8, 2.035643277821}, {0.9, 
           2.0196324143692563`}, {1., 2.0081014396544603`}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.175324675324675}, {0.2, 1.9318181818181817`}, {0.3,
            1.7474916387959865`}, {0.4, 1.6071428571428572`}, {0.5, 1.5}, {
           0.6, 1.4182692307692308`}, {0.7, 1.3562091503267977`}, {0.8, 
           1.3095238095238093`}, {0.9, 1.2749546279491835`}, {1., 1.25}}]}, 
         {RGBColor[1, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 1.122259102992048}, {0.2, 1.0285427586080647`}, {0.3,
            0.9590699273002703}, {0.4, 0.9072073813387599}, {0.5, 
           0.8683467321065987}, {0.6, 0.8392197292600396}, {0.7, 
           0.8174669699136452}, {0.8, 0.8013585438199081}, {0.9, 
           0.7896086595239935}, {1., 0.78125}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.5}}, {{0.2, 
           2.3584814084420693`}}, {{0.3, 2.2564935064935066`}}, {{0.4, 
           2.1821681857071136`}}, {{0.5, 2.1275783040488925`}}, {{0.6, 
           2.0873015873015874`}}, {{0.7, 2.0575529542920847`}}, {{0.8, 
           2.035643277821}}, {{0.9, 2.0196324143692563`}}, {{1., 
           2.0081014396544603`}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.175324675324675}}, {{0.2, 
           1.9318181818181817`}}, {{0.3, 1.7474916387959865`}}, {{0.4, 
           1.6071428571428572`}}, {{0.5, 1.5}}, {{0.6, 
           1.4182692307692308`}}, {{0.7, 1.3562091503267977`}}, {{0.8, 
           1.3095238095238093`}}, {{0.9, 1.2749546279491835`}}, {{1., 
           1.25}}}]}, 
         {RGBColor[1, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 1.122259102992048}}, {{0.2, 
           1.0285427586080647`}}, {{0.3, 0.9590699273002703}}, {{0.4, 
           0.9072073813387599}}, {{0.5, 0.8683467321065987}}, {{0.6, 
           0.8392197292600396}}, {{0.7, 0.8174669699136452}}, {{0.8, 
           0.8013585438199081}}, {{0.9, 0.7896086595239935}}, {{1., 
           0.78125}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{StyleBox[
          SubscriptBox["\"R\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"M\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"L\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False]},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], FontSize -> 16], FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
                 "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        StyleBox[
        "\"Variable \[GothicCapitalB]\"", FontSize -> 30, StripOnInput -> 
         False], TraditionalForm], 
       FormBox[
        StyleBox["\"Function value\"", FontSize -> 30, StripOnInput -> False],
         TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Epilog->InsetBox[
       BoxData[
        FormBox[
         FrameBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"RHS Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\[Chi]\
\\), \\(c\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 0, 1], 28, StripOnInput -> False]}, {
              StyleBox[
              "\"MHS Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\[Chi]\
\\), \\(c\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[0, 1, 0], 28, StripOnInput -> False]}, {
              StyleBox[
              "\"LHS Value of Theorem 1.4 via \\!\\(\\*SubscriptBox[\\(\[Chi]\
\\), \\(c\\)]\\) for \\!\\(\\*SubscriptBox[\\(m\\), \\(o\\)]\\)=0 and \
\\!\\(\\*SubscriptBox[\\(n\\), \\(o\\)]\\)=1\"", 
               RGBColor[1, 0, 1], 28, StripOnInput -> False]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]], 
       Scaled[{0.56, 0.12}]],
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], FontSize -> 16],
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 2.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 2.5}, {0.1, 0.}, {1., 0.}, {1., 
               2.0081014396544603`}, {0.9, 2.0196324143692563`}, {0.8, 
               2.035643277821}, {0.7, 2.0575529542920847`}, {0.6, 
               2.0873015873015874`}, {0.5, 2.1275783040488925`}, {0.4, 
               2.1821681857071136`}, {0.3, 2.2564935064935066`}, {0.2, 
               2.3584814084420693`}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 1, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 2.175324675324675}, {0.1, 0.}, {1., 0.}, {1., 
               1.25}, {0.9, 1.2749546279491835`}, {0.8, 
               1.3095238095238093`}, {0.7, 1.3562091503267977`}, {0.6, 
               1.4182692307692308`}, {0.5, 1.5}, {0.4, 1.6071428571428572`}, {
               0.3, 1.7474916387959865`}, {0.2, 
               1.9318181818181817`}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 1.122259102992048}, {0.1, 0.}, {1., 0.}, {1., 
               0.78125}, {0.9, 0.7896086595239935}, {0.8, 
               0.8013585438199081}, {0.7, 0.8174669699136452}, {0.6, 
               0.8392197292600396}, {0.5, 0.8683467321065987}, {0.4, 
               0.9072073813387599}, {0.3, 0.9590699273002703}, {0.2, 
               1.0285427586080647`}}]}}]}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.5}, {0.2, 2.3584814084420693`}, {0.3, 
            2.2564935064935066`}, {0.4, 2.1821681857071136`}, {0.5, 
            2.1275783040488925`}, {0.6, 2.0873015873015874`}, {0.7, 
            2.0575529542920847`}, {0.8, 2.035643277821}, {0.9, 
            2.0196324143692563`}, {1., 2.0081014396544603`}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.175324675324675}, {0.2, 1.9318181818181817`}, {0.3, 
            1.7474916387959865`}, {0.4, 1.6071428571428572`}, {0.5, 1.5}, {
            0.6, 1.4182692307692308`}, {0.7, 1.3562091503267977`}, {0.8, 
            1.3095238095238093`}, {0.9, 1.2749546279491835`}, {1., 1.25}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 1.122259102992048}, {0.2, 1.0285427586080647`}, {0.3, 
            0.9590699273002703}, {0.4, 0.9072073813387599}, {0.5, 
            0.8683467321065987}, {0.6, 0.8392197292600396}, {0.7, 
            0.8174669699136452}, {0.8, 0.8013585438199081}, {0.9, 
            0.7896086595239935}, {1., 0.78125}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.5}}, {{0.2, 2.3584814084420693`}}, {{0.3, 
            2.2564935064935066`}}, {{0.4, 2.1821681857071136`}}, {{0.5, 
            2.1275783040488925`}}, {{0.6, 2.0873015873015874`}}, {{0.7, 
            2.0575529542920847`}}, {{0.8, 2.035643277821}}, {{0.9, 
            2.0196324143692563`}}, {{1., 2.0081014396544603`}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.175324675324675}}, {{0.2, 1.9318181818181817`}}, {{0.3, 
            1.7474916387959865`}}, {{0.4, 1.6071428571428572`}}, {{0.5, 
            1.5}}, {{0.6, 1.4182692307692308`}}, {{0.7, 
            1.3562091503267977`}}, {{0.8, 1.3095238095238093`}}, {{0.9, 
            1.2749546279491835`}}, {{1., 1.25}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            1.122259102992048}}, {{0.2, 1.0285427586080647`}}, {{0.3, 
            0.9590699273002703}}, {{0.4, 0.9072073813387599}}, {{0.5, 
            0.8683467321065987}}, {{0.6, 0.8392197292600396}}, {{0.7, 
            0.8174669699136452}}, {{0.8, 0.8013585438199081}}, {{0.9, 
            0.7896086595239935}}, {{1., 0.78125}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 2.5}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
          Style["Variable \[GothicCapitalB]", FontSize -> 30], 
          Style["Function value", FontSize -> 30]}, AxesOrigin -> {0, 0}, 
        DisplayFunction :> Identity, Epilog -> Inset[
          Framed[
           Column[{
             Style[
             "RHS Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\), \(c\
\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \
\(o\)]\)=1", 
              RGBColor[0, 0, 1], 28], 
             Style[
             "MHS Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\), \(c\
\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \
\(o\)]\)=1", 
              RGBColor[0, 1, 0], 28], 
             Style[
             "LHS Value of Theorem 1.4 via \!\(\*SubscriptBox[\(\[Chi]\), \(c\
\)]\) for \!\(\*SubscriptBox[\(m\), \(o\)]\)=0 and \!\(\*SubscriptBox[\(n\), \
\(o\)]\)=1", 
              RGBColor[1, 0, 1], 28]}], RoundingRadius -> 5], 
          Scaled[{0.56, 0.12}]], Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], FontSize -> 16], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 2.5}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1], 
           Thickness[Large]]}, {
          Style[
           Subscript["R", "c"], FontSize -> 40], 
          Style[
           Subscript["M", "c"], FontSize -> 40], 
          Style[
           Subscript["L", "c"], FontSize -> 40]}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}}, 
         Joined -> {True, True, True}, LabelStyle -> Directive[
           GrayLevel[0], FontSize -> 16], LegendLayout -> "Column"]], {0.9, 
       0.9}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9581430018338876`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"2b796bc4-24eb-4a96-80fd-2520d0ad715c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Sample", " ", "data", " ", "placeholders"}], "\[LongDash]", 
    RowBox[{
    "replace", " ", "with", " ", "actual", " ", "numerical", " ", "data"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "4.245266535195725`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "4.061688311688312`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "3.927902734272805`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "3.829640947288006`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "3.757142857142857`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "3.7035953177257523`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "3.6641579000778`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "3.6353383458646613`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "3.6145825913780283`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "3.6`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "2.0200663853856864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.8513769654945165`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.7263258691404864`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.6329732864097677`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5630241177918776`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.5105955126680715`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.4714405458445614`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.4424453788758347`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.4212955871431885`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.40625`"}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data3", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", 
        FractionBox["9", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", 
        FractionBox["9", "2"]}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"data4", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.9", ",", "1.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.125`"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1", ",", "data2", ",", "data3", ",", " ", "data4"}], "}"}],
      ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<R-r\>\"", ",", "\"\<s\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<L-r\>\"", ",", "\"\<s\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<R-r\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}], ",", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<L-r\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "40"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Variable \[GothicCapitalB]\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Function value\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{"Ensures", " ", "large", " ", "visual", " ", "size"}], "*)"}], 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Ensures", " ", "large", " ", "visual", " ", "size"}], "*)"}], 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9581430237868023`*^9, 3.9581430568397655`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"c3f98b0c-19b6-4a17-aaf5-74823e1557ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.088678`", ",", 
   TagBox[
    GraphicsBox[{{{}, {{{}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 4.245266535195725}, {0.1, 0.}, {1., 0.}, {1., 
            3.6}, {0.9, 3.6145825913780283`}, {0.8, 3.6353383458646613`}, {
            0.7, 3.6641579000778}, {0.6, 3.7035953177257523`}, {0.5, 
            3.757142857142857}, {0.4, 3.829640947288006}, {0.3, 
            3.927902734272805}, {0.2, 4.061688311688312}}]]}, {}, 
         {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 2.0200663853856864`}, {0.1, 0.}, {1., 0.}, {1., 
            1.40625}, {0.9, 1.4212955871431885`}, {0.8, 
            1.4424453788758347`}, {0.7, 1.4714405458445614`}, {0.6, 
            1.5105955126680715`}, {0.5, 1.5630241177918776`}, {0.4, 
            1.6329732864097677`}, {0.3, 1.7263258691404864`}, {0.2, 
            1.8513769654945165`}}]]}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 4.5}, {0.1, 0.}, {1., 0.}, {1., 4.5}, {0.9, 
            4.5}, {0.8, 4.5}, {0.7, 4.5}, {0.6, 4.5}, {0.5, 4.5}, {0.4, 
            4.5}, {0.3, 4.5}, {0.2, 4.5}}]]}, {}, 
         {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{0.1, 1.125}, {0.1, 0.}, {1., 0.}, {1., 1.125}, {0.9, 
            1.125}, {0.8, 1.125}, {0.7, 1.125}, {0.6, 1.125}, {0.5, 1.125}, {
            0.4, 1.125}, {0.3, 1.125}, {0.2, 
            1.125}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
           3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
           3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
           3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
           3.6145825913780283`}, {1., 3.6}}]}, 
         {GrayLevel[0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {
           0.3, 1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
           1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
           1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
           1.4212955871431885`}, {1., 1.40625}}]}, 
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 4.5}, {0.2, 4.5}, {0.3, 4.5}, {0.4, 4.5}, {0.5, 
           4.5}, {0.6, 4.5}, {0.7, 4.5}, {0.8, 4.5}, {0.9, 4.5}, {1., 4.5}}]}, 
         {RGBColor[0, 1, 0], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
          LineBox[{{0.1, 1.125}, {0.2, 1.125}, {0.3, 1.125}, {0.4, 1.125}, {
           0.5, 1.125}, {0.6, 1.125}, {0.7, 1.125}, {0.8, 1.125}, {0.9, 
           1.125}, {1., 1.125}}]}}, {
         {RGBColor[0, 0, 1], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledCircle]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 4.245266535195725}}, {{0.2, 
           4.061688311688312}}, {{0.3, 3.927902734272805}}, {{0.4, 
           3.829640947288006}}, {{0.5, 3.757142857142857}}, {{0.6, 
           3.7035953177257523`}}, {{0.7, 3.6641579000778}}, {{0.8, 
           3.6353383458646613`}}, {{0.9, 3.6145825913780283`}}, {{1., 
           3.6}}}]}, 
         {GrayLevel[0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledSquare]\"\>",
             StripOnInput->False,
             FontSize->8.96], {0., 0.}], {{{0.1, 2.0200663853856864`}}, {{0.2,
            1.8513769654945165`}}, {{0.3, 1.7263258691404864`}}, {{0.4, 
           1.6329732864097677`}}, {{0.5, 1.5630241177918776`}}, {{0.6, 
           1.5105955126680715`}}, {{0.7, 1.4714405458445614`}}, {{0.8, 
           1.4424453788758347`}}, {{0.9, 1.4212955871431885`}}, {{1., 
           1.40625}}}]}, 
         {RGBColor[1, 0, 0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->10.88], {0., 0.}], {{{0.1, 4.5}}, {{0.2, 4.5}}, {{0.3, 
           4.5}}, {{0.4, 4.5}}, {{0.5, 4.5}}, {{0.6, 4.5}}, {{0.7, 4.5}}, {{
           0.8, 4.5}}, {{0.9, 4.5}}, {{1., 4.5}}}]}, 
         {RGBColor[0, 1, 0], AbsolutePointSize[6], Thickness[Large], 
          GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledUpTriangle]\"\>",
             StripOnInput->False,
             FontSize->10.24], {0., 0.}], {{{0.1, 1.125}}, {{0.2, 1.125}}, {{
           0.3, 1.125}}, {{0.4, 1.125}}, {{0.5, 1.125}}, {{0.6, 1.125}}, {{
           0.7, 1.125}}, {{0.8, 1.125}}, {{0.9, 1.125}}, {{1., 
           1.125}}}]}, {}}}, {}, {}, {}, {}}, InsetBox[
       TemplateBox[{StyleBox[
          SubscriptBox["\"R-r\"", "\"s\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"L-r\"", "\"s\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"R-r\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False],StyleBox[
          SubscriptBox["\"L-r\"", "\"c\""], FontSize -> 40, StripOnInput -> 
          False]},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    Rational[7, 20]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], FontSize -> 10.24, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[
             GrayLevel[0], FontSize -> 16], FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], 
                    "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.9, 0.9}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        StyleBox[
        "\"Variable \[GothicCapitalB]\"", FontSize -> 30, StripOnInput -> 
         False], TraditionalForm], 
       FormBox[
        StyleBox["\"Function value\"", FontSize -> 30, StripOnInput -> False],
         TraditionalForm]},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->1200,
     LabelStyle->Directive[
       GrayLevel[0], FontSize -> 16],
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 1.}, {0, 4.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}],
    InterpretTemplate[Legended[
      Graphics[{{}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 4.245266535195725}, {0.1, 0.}, {1., 0.}, {1., 
               3.6}, {0.9, 3.6145825913780283`}, {0.8, 3.6353383458646613`}, {
               0.7, 3.6641579000778}, {0.6, 3.7035953177257523`}, {0.5, 
               3.757142857142857}, {0.4, 3.829640947288006}, {0.3, 
               3.927902734272805}, {0.2, 4.061688311688312}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 2.0200663853856864`}, {0.1, 0.}, {1., 0.}, {1., 
               1.40625}, {0.9, 1.4212955871431885`}, {0.8, 
               1.4424453788758347`}, {0.7, 1.4714405458445614`}, {0.6, 
               1.5105955126680715`}, {0.5, 1.5630241177918776`}, {0.4, 
               1.6329732864097677`}, {0.3, 1.7263258691404864`}, {0.2, 
               1.8513769654945165`}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 4.5}, {0.1, 0.}, {1., 0.}, {1., 4.5}, {0.9, 
               4.5}, {0.8, 4.5}, {0.7, 4.5}, {0.6, 4.5}, {0.5, 4.5}, {0.4, 
               4.5}, {0.3, 4.5}, {0.2, 4.5}}]}}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 1, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{{
              
              Polygon[{{0.1, 1.125}, {0.1, 0.}, {1., 0.}, {1., 1.125}, {0.9, 
               1.125}, {0.8, 1.125}, {0.7, 1.125}, {0.6, 1.125}, {0.5, 
               1.125}, {0.4, 1.125}, {0.3, 1.125}, {0.2, 
               1.125}}]}}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.245266535195725}, {0.2, 4.061688311688312}, {0.3, 
            3.927902734272805}, {0.4, 3.829640947288006}, {0.5, 
            3.757142857142857}, {0.6, 3.7035953177257523`}, {0.7, 
            3.6641579000778}, {0.8, 3.6353383458646613`}, {0.9, 
            3.6145825913780283`}, {1., 3.6}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large]], 
           
           Line[{{0.1, 2.0200663853856864`}, {0.2, 1.8513769654945165`}, {0.3,
             1.7263258691404864`}, {0.4, 1.6329732864097677`}, {0.5, 
            1.5630241177918776`}, {0.6, 1.5105955126680715`}, {0.7, 
            1.4714405458445614`}, {0.8, 1.4424453788758347`}, {0.9, 
            1.4212955871431885`}, {1., 1.40625}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large]], 
           
           Line[{{0.1, 4.5}, {0.2, 4.5}, {0.3, 4.5}, {0.4, 4.5}, {0.5, 4.5}, {
            0.6, 4.5}, {0.7, 4.5}, {0.8, 4.5}, {0.9, 4.5}, {1., 4.5}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]], 
           
           Line[{{0.1, 1.125}, {0.2, 1.125}, {0.3, 1.125}, {0.4, 1.125}, {0.5,
             1.125}, {0.6, 1.125}, {0.7, 1.125}, {0.8, 1.125}, {0.9, 1.125}, {
            1., 1.125}}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            4.245266535195725}}, {{0.2, 4.061688311688312}}, {{0.3, 
            3.927902734272805}}, {{0.4, 3.829640947288006}}, {{0.5, 
            3.757142857142857}}, {{0.6, 3.7035953177257523`}}, {{0.7, 
            3.6641579000778}}, {{0.8, 3.6353383458646613`}}, {{0.9, 
            3.6145825913780283`}}, {{1., 3.6}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{0.1, 
            2.0200663853856864`}}, {{0.2, 1.8513769654945165`}}, {{0.3, 
            1.7263258691404864`}}, {{0.4, 1.6329732864097677`}}, {{0.5, 
            1.5630241177918776`}}, {{0.6, 1.5105955126680715`}}, {{0.7, 
            1.4714405458445614`}}, {{0.8, 1.4424453788758347`}}, {{0.9, 
            1.4212955871431885`}}, {{1., 1.40625}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledDiamond]", FontSize -> 10.88], {0., 0.}], {{{0.1, 
            4.5}}, {{0.2, 4.5}}, {{0.3, 4.5}}, {{0.4, 4.5}}, {{0.5, 4.5}}, {{
            0.6, 4.5}}, {{0.7, 4.5}}, {{0.8, 4.5}}, {{0.9, 4.5}}, {{1., 
            4.5}}}]}, {
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            AbsolutePointSize[6]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledUpTriangle]", FontSize -> 10.24], {0., 0.}], {{{
            0.1, 1.125}}, {{0.2, 1.125}}, {{0.3, 1.125}}, {{0.4, 1.125}}, {{
            0.5, 1.125}}, {{0.6, 1.125}}, {{0.7, 1.125}}, {{0.8, 1.125}}, {{
            0.9, 1.125}}, {{1., 1.125}}}]}, {}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
        PlotRange -> {{0, 1.}, {0, 4.5}}, PlotRangeClipping -> True, 
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
        GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {
          Style["Variable \[GothicCapitalB]", FontSize -> 30], 
          Style["Function value", FontSize -> 30]}, AxesOrigin -> {0, 0}, 
        DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 1200, LabelStyle -> Directive[
          GrayLevel[0], FontSize -> 16], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 4.5}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Thickness[Large]]}, {
          Style[
           Subscript["R-r", "s"], FontSize -> 40], 
          Style[
           Subscript["L-r", "s"], FontSize -> 40], 
          Style[
           Subscript["R-r", "c"], FontSize -> 40], 
          Style[
           Subscript["L-r", "c"], FontSize -> 40]}, 
         LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
           "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}, {
           "\[FilledUpTriangle]", 10.24}}, Joined -> {True, True, True, True},
          LabelStyle -> Directive[
           GrayLevel[0], FontSize -> 16], LegendLayout -> "Column"]], {0.9, 
       0.9}, Identity]]& ],
    AutoDelete->True,
    Editable->True,
    SelectWithContents->False,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.9581430603909316`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e04792f3-4f80-4a21-a233-3a0a8e74716b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", " ", "["}]], "Input",ExpressionUUID->"3b296246-7479-4f26-aa45-4e74cdb81877"]
},
WindowSize->{1264, 624},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4244, 110, 238, "Input",ExpressionUUID->"2e0204f1-5a24-4fcc-829d-9d2703f31c9f"],
Cell[4827, 134, 21256, 469, 354, "Output",ExpressionUUID->"1ce67d89-72b8-4c14-be8d-4332c8a8f115"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26120, 608, 4234, 110, 238, "Input",ExpressionUUID->"13fb822a-855f-4680-a9b3-ed77f0ac2f66"],
Cell[30357, 720, 21141, 466, 354, "Output",ExpressionUUID->"30ba44d9-a4b8-41d9-b88b-bbe3b901646e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51535, 1191, 3803, 110, 159, "Input",ExpressionUUID->"92cdc287-58f1-4795-a7df-e41d9d5df5dc"],
Cell[55341, 1303, 574460, 9521, 339, "Output",ExpressionUUID->"7b410a0e-d5b1-491b-9e0f-fe18103f0232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629838, 10829, 3803, 110, 159, "Input",ExpressionUUID->"cd66b294-c6e0-4cd0-b7b5-66e583becb41"],
Cell[633644, 10941, 575224, 9537, 339, "Output",ExpressionUUID->"ed24eb1a-7040-4ec8-8bac-022dc3b55780"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208905, 20483, 5649, 141, 295, "Input",ExpressionUUID->"d99575a1-793e-4872-8335-54f7368abe28"],
Cell[1214557, 20626, 29696, 643, 354, "Output",ExpressionUUID->"0ffc16ad-4208-404c-bb17-e76a6f0fcc3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1244290, 21274, 5658, 142, 295, "Input",ExpressionUUID->"6b6416cc-adb9-4222-b66c-5728418331a1"],
Cell[1249951, 21418, 29656, 642, 354, "Output",ExpressionUUID->"5517eee0-a92e-436f-bda6-018ff13832a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1279644, 22065, 5080, 136, 219, "Input",ExpressionUUID->"c6e45158-d60b-43ec-bafe-5b411eff076c"],
Cell[1284727, 22203, 33404, 730, 354, "Output",ExpressionUUID->"025b7a67-a88f-4ee3-8907-3925e0b2fe05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1318168, 22938, 5465, 149, 226, "Input",ExpressionUUID->"f048df06-ba78-4750-883e-328a773e92aa"],
Cell[1323636, 23089, 33424, 730, 354, "Output",ExpressionUUID->"9114d975-44dd-4225-9938-4b10bf052d72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357097, 23824, 4299, 123, 141, "Input",ExpressionUUID->"9ed48324-025c-4acf-b71b-962a5bd31fa5"],
Cell[1361399, 23949, 21511, 439, 134, "Output",ExpressionUUID->"b2a06736-4222-4a19-ae7e-46d8a9eddcf4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1382947, 24393, 4416, 127, 141, "Input",ExpressionUUID->"e533b00a-ffe5-403c-8272-56f0fa77061b"],
Cell[1387366, 24522, 21507, 439, 134, "Output",ExpressionUUID->"cb5e4d20-e18a-4b8a-9606-0f2e0f983094"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1408910, 24966, 4925, 128, 352, "Input",ExpressionUUID->"05446100-6d4a-4f7b-9fdc-1951df056c15"],
Cell[1413838, 25096, 24078, 531, 691, "Output",ExpressionUUID->"47f41e5e-d7d5-4e1b-b943-f9c111eb33f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1437953, 25632, 5051, 127, 390, "Input",ExpressionUUID->"89bfc55a-48d8-4692-b3d1-4aec8579f201"],
Cell[1443007, 25761, 25125, 546, 691, "Output",ExpressionUUID->"e7485b10-4e5b-4606-8e5c-0df6d60e5d48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1468169, 26312, 4662, 131, 141, "Input",ExpressionUUID->"5e7733cd-2553-4f7c-a0e6-a03a6b242ba9"],
Cell[1472834, 26445, 25883, 512, 747, "Output",ExpressionUUID->"d6a49589-b365-4d7d-807e-621c1952d65e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1498754, 26962, 4780, 135, 141, "Input",ExpressionUUID->"2ddd7932-5de8-40e3-a274-76b534c50545"],
Cell[1503537, 27099, 25897, 512, 747, "Output",ExpressionUUID->"7a4f8608-0de7-481c-834e-54e200bf5736"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1529471, 27616, 6695, 165, 295, "Input",ExpressionUUID->"9071638e-e1c5-4b9b-8659-b81732f12570"],
Cell[1536169, 27783, 34616, 738, 674, "Output",ExpressionUUID->"cb6b5efc-170d-4b42-bba7-3ed94136c6a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1570822, 28526, 6708, 166, 295, "Input",ExpressionUUID->"a1a01aee-5ce7-419f-9768-aec4fcb72647"],
Cell[1577533, 28694, 34629, 740, 674, "Output",ExpressionUUID->"2b796bc4-24eb-4a96-80fd-2520d0ad715c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1612199, 29439, 6959, 183, 283, "Input",ExpressionUUID->"c3f98b0c-19b6-4a17-aaf5-74823e1557ce"],
Cell[1619161, 29624, 38854, 840, 674, "Output",ExpressionUUID->"e04792f3-4f80-4a21-a233-3a0a8e74716b"]
}, Open  ]],
Cell[1658030, 30467, 117, 1, 28, "Input",ExpressionUUID->"3b296246-7479-4f26-aa45-4e74cdb81877"]
}
]
*)

